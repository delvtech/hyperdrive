{"id":"9b4767477924db10c03c7a72276d2aa6","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"contracts/src/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\ninterface IERC20 {\n    /// @notice Emitted when tokens are transferred from one account to another.\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Emitted when an owner changes the approval for a spender.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @notice Updates the allowance of a spender on behalf of the sender.\n    /// @param spender The account with the allowance.\n    /// @param amount The new allowance of the spender.\n    /// @return A flag indicating whether or not the approval succeeded.\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers tokens from the sender's account to another account.\n    /// @param to The recipient of the tokens.\n    /// @param amount The amount of tokens that will be transferred.\n    /// @return A flag indicating whether or not the transfer succeeded.\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\n    ///         the sender's allowance.\n    /// @param from The owner of the tokens.\n    /// @param to The recipient of the tokens.\n    /// @param amount The amount of tokens that will be transferred.\n    /// @return A flag indicating whether or not the transfer succeeded.\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /// @notice Gets the token's name.\n    /// @return The token's name.\n    function name() external view returns (string memory);\n\n    /// @notice Gets the token's symbol.\n    /// @return The token's symbol.\n    function symbol() external view returns (string memory);\n\n    /// @notice Gets the token's decimals.\n    /// @return The token's decimals.\n    function decimals() external view returns (uint8);\n\n    /// @notice Gets the token's total supply.\n    /// @return The token's total supply.\n    function totalSupply() external view returns (uint256);\n\n    /// @notice Gets the allowance of a spender for an owner.\n    /// @param owner The owner of the tokens.\n    /// @param spender The spender of the tokens.\n    /// @return The allowance of the spender for the owner.\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    /// @notice Gets the balance of an account.\n    /// @param account The owner of the tokens.\n    /// @return The account's balance.\n    function balanceOf(address account) external view returns (uint256);\n}\n"},"contracts/src/interfaces/IHyperdrive.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IERC20 } from \"./IERC20.sol\";\nimport { IHyperdriveCore } from \"./IHyperdriveCore.sol\";\nimport { IHyperdriveEvents } from \"./IHyperdriveEvents.sol\";\nimport { IHyperdriveRead } from \"./IHyperdriveRead.sol\";\nimport { IMultiToken } from \"./IMultiToken.sol\";\n\ninterface IHyperdrive is\n    IHyperdriveEvents,\n    IHyperdriveRead,\n    IHyperdriveCore,\n    IMultiToken\n{\n    /// Structs ///\n\n    struct MarketState {\n        /// @dev The pool's share reserves.\n        uint128 shareReserves;\n        /// @dev The pool's bond reserves.\n        uint128 bondReserves;\n        /// @dev The global exposure of the pool due to open longs\n        uint128 longExposure;\n        /// @dev The amount of longs that are still open.\n        uint128 longsOutstanding;\n        /// @dev The net amount of shares that have been added and removed from\n        ///      the share reserves due to flat updates.\n        int128 shareAdjustment;\n        /// @dev The amount of shorts that are still open.\n        uint128 shortsOutstanding;\n        /// @dev The average maturity time of outstanding long positions.\n        uint128 longAverageMaturityTime;\n        /// @dev The average maturity time of outstanding short positions.\n        uint128 shortAverageMaturityTime;\n        /// @dev A flag indicating whether or not the pool has been initialized.\n        bool isInitialized;\n        /// @dev A flag indicating whether or not the pool is paused.\n        bool isPaused;\n        /// @dev The proceeds in base of the unredeemed matured positions.\n        uint112 zombieBaseProceeds;\n        /// @dev The shares reserved for unredeemed matured positions.\n        uint128 zombieShareReserves;\n    }\n\n    struct Checkpoint {\n        /// @dev The vault share price during the first transaction in the\n        ///      checkpoint. This is used to track the amount of interest\n        ///      accrued by shorts as well as the vault share price at closing\n        //       of matured longs and shorts.\n        uint128 vaultSharePrice;\n    }\n\n    struct WithdrawPool {\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\n        uint128 readyToWithdraw;\n        /// @dev The proceeds recovered by the withdrawal pool.\n        uint128 proceeds;\n    }\n\n    struct Fees {\n        /// @dev The LP fee applied to the curve portion of a trade.\n        uint256 curve;\n        /// @dev The LP fee applied to the flat portion of a trade.\n        uint256 flat;\n        /// @dev The portion of the LP fee that goes to governance.\n        uint256 governanceLP;\n        /// @dev The portion of the zombie interest that goes to governance.\n        uint256 governanceZombie;\n    }\n\n    struct PoolDeployConfig {\n        /// @dev The address of the base token.\n        IERC20 baseToken;\n        /// @dev The address of the vault shares token.\n        IERC20 vaultSharesToken;\n        /// @dev The linker factory used by this Hyperdrive instance.\n        address linkerFactory;\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\n        ///      create2 addresses of the ERC20 linkers used by this instance.\n        bytes32 linkerCodeHash;\n        /// @dev The minimum share reserves.\n        uint256 minimumShareReserves;\n        /// @dev The minimum amount of tokens that a position can be opened or\n        ///      closed with.\n        uint256 minimumTransactionAmount;\n        /// @dev The duration of a position prior to maturity.\n        uint256 positionDuration;\n        /// @dev The duration of a checkpoint.\n        uint256 checkpointDuration;\n        /// @dev A parameter which decreases slippage around a target rate.\n        uint256 timeStretch;\n        /// @dev The address of the governance contract.\n        address governance;\n        /// @dev The address which collects governance fees\n        address feeCollector;\n        /// @dev The address which collects swept tokens.\n        address sweepCollector;\n        /// @dev The fees applied to trades.\n        IHyperdrive.Fees fees;\n    }\n\n    struct PoolConfig {\n        /// @dev The address of the base token.\n        IERC20 baseToken;\n        /// @dev The address of the vault shares token.\n        IERC20 vaultSharesToken;\n        /// @dev The linker factory used by this Hyperdrive instance.\n        address linkerFactory;\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\n        ///      create2 addresses of the ERC20 linkers used by this instance.\n        bytes32 linkerCodeHash;\n        /// @dev The initial vault share price.\n        uint256 initialVaultSharePrice;\n        /// @dev The minimum share reserves.\n        uint256 minimumShareReserves;\n        /// @dev The minimum amount of tokens that a position can be opened or\n        ///      closed with.\n        uint256 minimumTransactionAmount;\n        /// @dev The duration of a position prior to maturity.\n        uint256 positionDuration;\n        /// @dev The duration of a checkpoint.\n        uint256 checkpointDuration;\n        /// @dev A parameter which decreases slippage around a target rate.\n        uint256 timeStretch;\n        /// @dev The address of the governance contract.\n        address governance;\n        /// @dev The address which collects governance fees\n        address feeCollector;\n        /// @dev The address which collects swept tokens.\n        address sweepCollector;\n        /// @dev The fees applied to trades.\n        IHyperdrive.Fees fees;\n    }\n\n    struct PoolInfo {\n        /// @dev The reserves of shares held by the pool.\n        uint256 shareReserves;\n        /// @dev The adjustment applied to the share reserves when pricing\n        ///      bonds. This is used to ensure that the pricing mechanism is\n        ///      held invariant under flat updates for security reasons.\n        int256 shareAdjustment;\n        /// @dev The proceeds in base of the unredeemed matured positions.\n        uint256 zombieBaseProceeds;\n        /// @dev The shares reserved for unredeemed matured positions.\n        uint256 zombieShareReserves;\n        /// @dev The reserves of bonds held by the pool.\n        uint256 bondReserves;\n        /// @dev The total supply of LP shares.\n        uint256 lpTotalSupply;\n        /// @dev The current vault share price.\n        uint256 vaultSharePrice;\n        /// @dev An amount of bonds representing outstanding unmatured longs.\n        uint256 longsOutstanding;\n        /// @dev The average maturity time of the outstanding longs.\n        uint256 longAverageMaturityTime;\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\n        uint256 shortsOutstanding;\n        /// @dev The average maturity time of the outstanding shorts.\n        uint256 shortAverageMaturityTime;\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\n        uint256 withdrawalSharesReadyToWithdraw;\n        /// @dev The proceeds recovered by the withdrawal pool.\n        uint256 withdrawalSharesProceeds;\n        /// @dev The share price of LP shares. This can be used to mark LP\n        ///      shares to market.\n        uint256 lpSharePrice;\n        /// @dev The global exposure of the pool due to open positions\n        uint256 longExposure;\n    }\n\n    struct Options {\n        /// @dev The address that receives the proceeds of a trade or LP action.\n        address destination;\n        /// @dev A boolean indicating that the trade or LP action should be\n        ///      settled in base if true and in the yield source shares if false.\n        bool asBase;\n        /// @dev Additional data that can be used to implement custom logic in\n        ///      implementation contracts.\n        bytes extraData;\n    }\n\n    /// Errors ///\n\n    /// @notice Thrown when the inputs to a batch transfer don't match in\n    ///         length.\n    error BatchInputLengthMismatch();\n\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\n    ///         to cover the minimum share reserves and the LP shares that are\n    ///         burned on initialization.\n    error BelowMinimumContribution();\n\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\n    ///         the result to be larger than the representable scale.\n    error ExpInvalidExponent();\n\n    /// @notice Thrown when a permit signature is expired.\n    error ExpiredDeadline();\n\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\n    ///         an action.\n    error InsufficientBalance();\n\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\n    ///         complete the trade.\n    error InsufficientLiquidity();\n\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\n    ///         a LP when they are adding liquidity.\n    error InvalidApr();\n\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\n    ///         larger than the current checkpoint or isn't divisible by the\n    ///         checkpoint duration.\n    error InvalidCheckpointTime();\n\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\n    ///         functions is not the corresponding bridge.\n    error InvalidERC20Bridge();\n\n    /// @notice Thrown when a destination other than the fee collector is\n    ///         specified in `collectGovernanceFee`.\n    error InvalidFeeDestination();\n\n    /// @notice Thrown when the initial share price doesn't match the share\n    ///         price of the underlying yield source on deployment.\n    error InvalidInitialVaultSharePrice();\n\n    /// @notice Thrown when the LP share price couldn't be calculated in a\n    ///         critical situation.\n    error InvalidLPSharePrice();\n\n    /// @notice Thrown when the present value calculation fails.\n    error InvalidPresentValue();\n\n    /// @notice Thrown when an invalid signature is used provide permit access\n    ///         to the MultiToken. A signature is considered to be invalid if\n    ///         it fails to recover to the owner's address.\n    error InvalidSignature();\n\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\n    ///         the uint248 scale.\n    error InvalidTimestamp();\n\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\n    ///         equal to zero.\n    error LnInvalidInput();\n\n    /// @notice Thrown when vault share price is smaller than the minimum share\n    ///         price. This protects traders from unknowingly opening a long or\n    ///         short after negative interest has accrued.\n    error MinimumSharePrice();\n\n    /// @notice Thrown when the input or output amount of a trade is smaller\n    ///         than the minimum transaction amount. This protects traders and\n    ///         LPs from losses of precision that can occur at small scales.\n    error MinimumTransactionAmount();\n\n    /// @notice Thrown when the present value prior to adding liquidity results in a\n    ///         decrease in present value after liquidity. This is caused by a\n    ///         shortage in liquidity that prevents all the open positions being\n    ///         closed on the curve and therefore marked to 1.\n    error DecreasedPresentValueWhenAddingLiquidity();\n\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\n    ///         ether as a deposit asset.\n    error NotPayable();\n\n    /// @notice Thrown when a slippage guard is violated.\n    error OutputLimit();\n\n    /// @notice Thrown when the pool is already initialized and a trader calls\n    ///         `initialize`. This prevents the pool from being reinitialized\n    ///         after it has been initialized.\n    error PoolAlreadyInitialized();\n\n    /// @notice Thrown when the pool is paused and a trader tries to add\n    ///         liquidity, open a long, or open a short. Traders can still\n    ///         close their existing positions while the pool is paused.\n    error PoolIsPaused();\n\n    /// @notice Thrown when the owner passed to permit is the zero address. This\n    ///         prevents users from spending the funds in address zero by\n    ///         sending an invalid signature to ecrecover.\n    error RestrictedZeroAddress();\n\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\n    ///         normal error, this error actually indicates that a read-only\n    ///         call succeeded. The data that it wraps is the return data from\n    ///         the read-only call.\n    error ReturnData(bytes data);\n\n    /// @notice Thrown when an asset is swept from the pool and one of the\n    ///         pool's depository assets changes.\n    error SweepFailed();\n\n    /// @notice Thrown when the distribute excess idle calculation fails due\n    ///         to the starting present value calculation failing.\n    error DistributeExcessIdleFailed();\n\n    /// @notice Thrown when an ether transfer fails.\n    error TransferFailed();\n\n    /// @notice Thrown when an unauthorized user attempts to access admin\n    ///         functionality.\n    error Unauthorized();\n\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\n    ///         uses a force-revert delegatecall pattern to ensure that calls\n    ///         that are intended to be read-only are actually read-only.\n    error UnexpectedSuccess();\n\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\n    ///         uint128 scale.\n    error UnsafeCastToUint112();\n\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\n    ///         uint128 scale.\n    error UnsafeCastToUint128();\n\n    /// @notice Thrown when casting a value to a int128 that is outside of the\n    ///         int128 scale.\n    error UnsafeCastToInt128();\n\n    /// @notice Thrown when casting a value to a int256 that is outside of the\n    ///         int256 scale.\n    error UnsafeCastToInt256();\n\n    /// @notice Thrown when an unsupported option is passed to a function or\n    ///         a user attempts to sweep an invalid token. The options and sweep\n    ///         targets that are supported vary between instances.\n    error UnsupportedToken();\n\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\n    error UpdateLiquidityFailed();\n\n    /// Getters ///\n\n    /// @notice Gets the target0 address.\n    /// @return The target0 address.\n    function target0() external view returns (address);\n\n    /// @notice Gets the target1 address.\n    /// @return The target1 address.\n    function target1() external view returns (address);\n\n    /// @notice Gets the target2 address.\n    /// @return The target2 address.\n    function target2() external view returns (address);\n\n    /// @notice Gets the target3 address.\n    /// @return The target3 address.\n    function target3() external view returns (address);\n\n    /// @notice Gets the target4 address.\n    /// @return The target4 address.\n    function target4() external view returns (address);\n}\n"},"contracts/src/interfaces/IHyperdriveCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IERC20 } from \"./IERC20.sol\";\nimport { IHyperdrive } from \"./IHyperdrive.sol\";\nimport { IMultiTokenCore } from \"./IMultiTokenCore.sol\";\n\ninterface IHyperdriveCore is IMultiTokenCore {\n    /// Longs ///\n\n    /// @notice Opens a long position.\n    /// @param _amount The amount of capital provided to open the long. The\n    ///        units of this quantity are either base or vault shares, depending\n    ///        on the value of `_options.asBase`.\n    /// @param _minOutput The minimum number of bonds to receive.\n    /// @param _minVaultSharePrice The minimum vault share price at which to\n    ///        open the long. This allows traders to protect themselves from\n    ///        opening a long in a checkpoint where negative interest has\n    ///        accrued.\n    /// @param _options The options that configure how the trade is settled.\n    /// @return maturityTime The maturity time of the bonds.\n    /// @return bondProceeds The amount of bonds the user received.\n    function openLong(\n        uint256 _amount,\n        uint256 _minOutput,\n        uint256 _minVaultSharePrice,\n        IHyperdrive.Options calldata _options\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\n\n    /// @notice Closes a long position with a specified maturity time.\n    /// @param _maturityTime The maturity time of the long.\n    /// @param _bondAmount The amount of longs to close.\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\n    ///        of this quantity are either base or vault shares, depending on\n    ///        the value of `_options.asBase`.\n    /// @param _options The options that configure how the trade is settled.\n    /// @return proceeds The proceeds the user receives. The units of this\n    ///         quantity are either base or vault shares, depending on the value\n    ///         of `_options.asBase`.\n    function closeLong(\n        uint256 _maturityTime,\n        uint256 _bondAmount,\n        uint256 _minOutput,\n        IHyperdrive.Options calldata _options\n    ) external returns (uint256 proceeds);\n\n    /// Shorts ///\n\n    /// @notice Opens a short position.\n    /// @param _bondAmount The amount of bonds to short.\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\n    ///        The units of this quantity are either base or vault shares,\n    ///        depending on the value of `_options.asBase`.\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\n    ///        the short. This allows traders to protect themselves from opening\n    ///        a short in a checkpoint where negative interest has accrued.\n    /// @param _options The options that configure how the trade is settled.\n    /// @return maturityTime The maturity time of the short.\n    /// @return deposit The amount the user deposited for this trade. The units\n    ///         of this quantity are either base or vault shares, depending on\n    ///         the value of `_options.asBase`.\n    function openShort(\n        uint256 _bondAmount,\n        uint256 _maxDeposit,\n        uint256 _minVaultSharePrice,\n        IHyperdrive.Options calldata _options\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\n\n    /// @notice Closes a short position with a specified maturity time.\n    /// @param _maturityTime The maturity time of the short.\n    /// @param _bondAmount The amount of shorts to close.\n    /// @param _minOutput The minimum output of this trade. The units of this\n    ///        quantity are either base or vault shares, depending on the value\n    ///        of `_options.asBase`.\n    /// @param _options The options that configure how the trade is settled.\n    /// @return proceeds The proceeds of closing this short. The units of this\n    ///         quantity are either base or vault shares, depending on the value\n    ///         of `_options.asBase`.\n    function closeShort(\n        uint256 _maturityTime,\n        uint256 _bondAmount,\n        uint256 _minOutput,\n        IHyperdrive.Options calldata _options\n    ) external returns (uint256 proceeds);\n\n    /// LPs ///\n\n    /// @notice Allows the first LP to initialize the market with a target APR.\n    /// @param _contribution The amount of capital to supply. The units of this\n    ///        quantity are either base or vault shares, depending on the value\n    ///        of `_options.asBase`.\n    /// @param _apr The target APR.\n    /// @param _options The options that configure how the operation is settled.\n    /// @return lpShares The initial number of LP shares created.\n    function initialize(\n        uint256 _contribution,\n        uint256 _apr,\n        IHyperdrive.Options calldata _options\n    ) external payable returns (uint256 lpShares);\n\n    /// @notice Allows LPs to supply liquidity for LP shares.\n    /// @param _contribution The amount of capital to supply. The units of this\n    ///        quantity are either base or vault shares, depending on the value\n    ///        of `_options.asBase`.\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\n    ///        to accept for their shares. LPs incur negative slippage when\n    ///        adding liquidity if there is a net curve position in the market,\n    ///        so this allows LPs to protect themselves from high levels of\n    ///        slippage. The units of this quantity are either base or vault\n    ///        shares, depending on the value of `_options.asBase`.\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\n    /// @param _options The options that configure how the operation is settled.\n    /// @return lpShares The LP shares received by the LP.\n    function addLiquidity(\n        uint256 _contribution,\n        uint256 _minLpSharePrice,\n        uint256 _minApr,\n        uint256 _maxApr,\n        IHyperdrive.Options calldata _options\n    ) external payable returns (uint256 lpShares);\n\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\n    /// @param _lpShares The LP shares to burn.\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\n    ///        for each withdrawal share that is burned. The units of this\n    ///        quantity are either base or vault shares, depending on the value\n    ///        of `_options.asBase`.\n    /// @param _options The options that configure how the operation is settled.\n    /// @return proceeds The amount the LP removing liquidity receives. The\n    ///         units of this quantity are either base or vault shares,\n    ///         depending on the value of `_options.asBase`.\n    /// @return withdrawalShares The base that the LP receives buys out some of\n    ///         their LP shares, but it may not be sufficient to fully buy the\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\n    ///         value to the present value they are owed. As idle capital\n    ///         becomes available, the pool will buy back these shares.\n    function removeLiquidity(\n        uint256 _lpShares,\n        uint256 _minOutputPerShare,\n        IHyperdrive.Options calldata _options\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\n\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\n    ///         the withdrawal pool's proceeds. This function redeems the\n    ///         maximum amount of the specified withdrawal shares given the\n    ///         amount of withdrawal shares ready to withdraw.\n    /// @param _withdrawalShares The withdrawal shares to redeem.\n    /// @param _minOutputPerShare The minimum amount the LP expects to\n    ///        receive for each withdrawal share that is burned. The units of\n    ///        this quantity are either base or vault shares, depending on the\n    ///        value of `_options.asBase`.\n    /// @param _options The options that configure how the operation is settled.\n    /// @return proceeds The amount the LP received. The units of this quantity\n    ///         are either base or vault shares, depending on the value of\n    ///         `_options.asBase`.\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\n    ///         were redeemed.\n    function redeemWithdrawalShares(\n        uint256 _withdrawalShares,\n        uint256 _minOutputPerShare,\n        IHyperdrive.Options calldata _options\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\n\n    /// Checkpoints ///\n\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\n    /// @param _checkpointTime The time of the checkpoint to create.\n    /// @param _maxIterations The number of iterations to use in the Newton's\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\n    ///        smaller than the constant.\n    function checkpoint(\n        uint256 _checkpointTime,\n        uint256 _maxIterations\n    ) external;\n\n    /// Admin ///\n\n    /// @notice This function collects the governance fees accrued by the pool.\n    /// @param _options The options that configure how the fees are settled.\n    /// @return proceeds The governance fees collected. The units of this\n    ///         quantity are either base or vault shares, depending on the value\n    ///         of `_options.asBase`.\n    function collectGovernanceFee(\n        IHyperdrive.Options calldata _options\n    ) external returns (uint256 proceeds);\n\n    /// @notice Allows an authorized address to pause this contract.\n    /// @param _status True to pause all deposits and false to unpause them.\n    function pause(bool _status) external;\n\n    /// @notice Allows governance to transfer the fee collector role.\n    /// @param _who The new fee collector address.\n    function setFeeCollector(address _who) external;\n\n    /// @notice Allows governance to transfer the sweep collector role.\n    /// @param _who The new sweep collector address.\n    function setSweepCollector(address _who) external;\n\n    /// @notice Allows governance to transfer the governance role.\n    /// @param _who The new governance address.\n    function setGovernance(address _who) external;\n\n    /// @notice Allows governance to change the pauser status of an address.\n    /// @param who The address to change.\n    /// @param status The new pauser status.\n    function setPauser(address who, bool status) external;\n\n    /// @notice Transfers the contract's balance of a target token to the fee\n    ///         collector address.\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\n    ///      with 'transferFrom'. Any integrating contracts should be checked\n    ///      for that, as it may result in an unexpected call from this address.\n    /// @param _target The target token to sweep.\n    function sweep(IERC20 _target) external;\n}\n"},"contracts/src/interfaces/IHyperdriveEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IMultiTokenEvents } from \"./IMultiTokenEvents.sol\";\n\ninterface IHyperdriveEvents is IMultiTokenEvents {\n    /// @notice Emitted when the Hyperdrive pool is initialized.\n    event Initialize(\n        address indexed provider,\n        uint256 lpAmount,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 apr\n    );\n\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\n    event AddLiquidity(\n        address indexed provider,\n        uint256 lpAmount,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 lpSharePrice\n    );\n\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\n    event RemoveLiquidity(\n        address indexed provider,\n        address indexed destination,\n        uint256 lpAmount,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 withdrawalShareAmount,\n        uint256 lpSharePrice\n    );\n\n    /// @notice Emitted when an LP redeems withdrawal shares.\n    event RedeemWithdrawalShares(\n        address indexed provider,\n        address indexed destination,\n        uint256 withdrawalShareAmount,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase\n    );\n\n    /// @notice Emitted when a long position is opened.\n    event OpenLong(\n        address indexed trader,\n        uint256 indexed assetId,\n        uint256 maturityTime,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 bondAmount\n    );\n\n    /// @notice Emitted when a short position is opened.\n    event OpenShort(\n        address indexed trader,\n        uint256 indexed assetId,\n        uint256 maturityTime,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 baseProceeds,\n        uint256 bondAmount\n    );\n\n    /// @notice Emitted when a long position is closed.\n    event CloseLong(\n        address indexed trader,\n        address indexed destination,\n        uint256 indexed assetId,\n        uint256 maturityTime,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 bondAmount\n    );\n\n    /// @notice Emitted when a short position is closed.\n    event CloseShort(\n        address indexed trader,\n        address indexed destination,\n        uint256 indexed assetId,\n        uint256 maturityTime,\n        uint256 baseAmount,\n        uint256 vaultShareAmount,\n        bool asBase,\n        uint256 basePayment,\n        uint256 bondAmount\n    );\n\n    /// @notice Emitted when a checkpoint is created.\n    event CreateCheckpoint(\n        uint256 indexed checkpointTime,\n        uint256 checkpointVaultSharePrice,\n        uint256 vaultSharePrice,\n        uint256 maturedShorts,\n        uint256 maturedLongs,\n        uint256 lpSharePrice\n    );\n\n    /// @notice Emitted when governance fees are collected.\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\n\n    /// @notice Emitted when the fee collector address is updated.\n    event FeeCollectorUpdated(address indexed newFeeCollector);\n\n    /// @notice Emitted when the sweep collector address is updated.\n    event SweepCollectorUpdated(address indexed newSweepCollector);\n\n    /// @notice Emitted when the governance address is updated.\n    event GovernanceUpdated(address indexed newGovernance);\n\n    /// @notice Emitted when a pauser is updated.\n    event PauserUpdated(address indexed newPauser, bool status);\n\n    /// @notice Emitted when the pause status is updated.\n    event PauseStatusUpdated(bool isPaused);\n\n    /// @notice Emitted when tokens are swept.\n    event Sweep(address indexed collector, address indexed target);\n}\n"},"contracts/src/interfaces/IHyperdriveRead.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IHyperdrive } from \"./IHyperdrive.sol\";\nimport { IMultiTokenRead } from \"./IMultiTokenRead.sol\";\n\ninterface IHyperdriveRead is IMultiTokenRead {\n    /// @notice Gets the instance's name.\n    /// @return The instance's name.\n    function name() external pure returns (string memory);\n\n    /// @notice Gets the instance's version.\n    /// @return The instance's version.\n    function version() external pure returns (string memory);\n\n    /// @notice Gets the Hyperdrive pool's base token.\n    /// @return The base token.\n    function baseToken() external view returns (address);\n\n    /// @notice Gets the Hyperdrive pool's vault shares token.\n    /// @return The vault shares token.\n    function vaultSharesToken() external view returns (address);\n\n    /// @notice Gets one of the pool's checkpoints.\n    /// @param _checkpointTime The checkpoint time.\n    /// @return The checkpoint.\n    function getCheckpoint(\n        uint256 _checkpointTime\n    ) external view returns (IHyperdrive.Checkpoint memory);\n\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\n    ///         of non-netted longs in the checkpoint.\n    /// @param _checkpointTime The checkpoint time.\n    /// @return The checkpoint exposure.\n    function getCheckpointExposure(\n        uint256 _checkpointTime\n    ) external view returns (int256);\n\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\n    /// @return The market state.\n    function getMarketState()\n        external\n        view\n        returns (IHyperdrive.MarketState memory);\n\n    /// @notice Gets the pool's configuration parameters.\n    /// @return The pool configuration.\n    function getPoolConfig()\n        external\n        view\n        returns (IHyperdrive.PoolConfig memory);\n\n    /// @notice Gets info about the pool's reserves and other state that is\n    ///         important to evaluate potential trades.\n    /// @return The pool info.\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\n\n    /// @notice Gets the amount of governance fees that haven't been collected.\n    /// @return The amount of uncollected governance fees.\n    function getUncollectedGovernanceFees() external view returns (uint256);\n\n    /// @notice Gets information relating to the pool's withdrawal pool. This\n    ///         includes the total proceeds underlying the withdrawal pool and\n    ///         the number of withdrawal shares ready to be redeemed.\n    /// @return The withdrawal pool information.\n    function getWithdrawPool()\n        external\n        view\n        returns (IHyperdrive.WithdrawPool memory);\n\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\n    /// @param _account The account to check.\n    /// @return The account's pauser status.\n    function isPauser(address _account) external view returns (bool);\n\n    /// @notice Gets the storage values at the specified slots.\n    /// @dev This serves as a generalized getter that allows consumers to create\n    ///      custom getters to suit their purposes.\n    /// @param _slots The storage slots to load.\n    /// @return The values at the specified slots.\n    function load(\n        uint256[] calldata _slots\n    ) external view returns (bytes32[] memory);\n}\n"},"contracts/src/interfaces/IMultiToken.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IMultiTokenCore } from \"./IMultiTokenCore.sol\";\nimport { IMultiTokenEvents } from \"./IMultiTokenEvents.sol\";\nimport { IMultiTokenMetadata } from \"./IMultiTokenMetadata.sol\";\nimport { IMultiTokenRead } from \"./IMultiTokenRead.sol\";\n\ninterface IMultiToken is\n    IMultiTokenEvents,\n    IMultiTokenRead,\n    IMultiTokenCore,\n    IMultiTokenMetadata\n{}\n"},"contracts/src/interfaces/IMultiTokenCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\ninterface IMultiTokenCore {\n    /// @notice Transfers an amount of assets from the source to the destination.\n    /// @param tokenID The token identifier.\n    /// @param from The address whose balance will be reduced.\n    /// @param to The address whose balance will be increased.\n    /// @param amount The amount of token to move.\n    function transferFrom(\n        uint256 tokenID,\n        address from,\n        address to,\n        uint256 amount\n    ) external;\n\n    /// @notice Permissioned transfer for the bridge to access, only callable by\n    ///         the ERC20 linking bridge.\n    /// @param tokenID The token identifier.\n    /// @param from The address whose balance will be reduced.\n    /// @param to The address whose balance will be increased.\n    /// @param amount The amount of token to move.\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\n    function transferFromBridge(\n        uint256 tokenID,\n        address from,\n        address to,\n        uint256 amount,\n        address caller\n    ) external;\n\n    /// @notice Allows a user to set an approval for an individual asset with\n    ///         specific amount.\n    /// @param tokenID The asset to approve the use of.\n    /// @param operator The address who will be able to use the tokens.\n    /// @param amount The max tokens the approved person can use, setting to\n    ///        uint256.max will cause the value to never decrement (saving gas\n    ///        on transfer).\n    function setApproval(\n        uint256 tokenID,\n        address operator,\n        uint256 amount\n    ) external;\n\n    /// @notice Allows the compatibility linking contract to forward calls to\n    ///         set asset approvals.\n    /// @param tokenID The asset to approve the use of.\n    /// @param operator The address who will be able to use the tokens.\n    /// @param amount The max tokens the approved person can use, setting to\n    ///        uint256.max will cause the value to never decrement [saving gas\n    ///        on transfer].\n    /// @param caller The eth address which called the linking contract.\n    function setApprovalBridge(\n        uint256 tokenID,\n        address operator,\n        uint256 amount,\n        address caller\n    ) external;\n\n    /// @notice Allows a user to approve an operator to use all of their assets.\n    /// @param operator The eth address which can access the caller's assets.\n    /// @param approved True to approve, false to remove approval.\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /// @notice Transfers several assets from one account to another.\n    /// @param from The source account.\n    /// @param to The destination account.\n    /// @param ids The array of token ids of the asset to transfer.\n    /// @param values The amount of each token to transfer.\n    function batchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) external;\n\n    /// @notice Allows a caller who is not the owner of an account to execute the\n    ///         functionality of 'approve' for all assets with the owner's\n    ///         signature.\n    /// @param owner The owner of the account which is having the new approval set.\n    /// @param spender The address which will be allowed to spend owner's tokens.\n    /// @param _approved A boolean of the approval status to set to.\n    /// @param deadline The timestamp which the signature must be submitted by\n    ///        to be valid.\n    /// @param v Extra ECDSA data which allows public key recovery from\n    ///        signature assumed to be 27 or 28.\n    /// @param r The r component of the ECDSA signature.\n    /// @param s The s component of the ECDSA signature.\n    /// @dev The signature for this function follows EIP 712 standard and should\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\n    ///      libraries the v component may need to be adjusted. Also it is very\n    ///      rare but possible for v to be other values, those values are not\n    ///      supported.\n    function permitForAll(\n        address owner,\n        address spender,\n        bool _approved,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"contracts/src/interfaces/IMultiTokenEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\ninterface IMultiTokenEvents {\n    /// @notice Emitted when tokens are transferred from one account to another.\n    event TransferSingle(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 id,\n        uint256 value\n    );\n\n    /// @notice Emitted when an account changes the allowance for another\n    ///         account.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @notice Emitted when an account changes the approval for all of its\n    ///         tokens.\n    event ApprovalForAll(\n        address indexed account,\n        address indexed operator,\n        bool approved\n    );\n}\n"},"contracts/src/interfaces/IMultiTokenMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\ninterface IMultiTokenMetadata {\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\n    /// @return The EIP712 permit typehash of the MultiToken.\n    // solhint-disable func-name-mixedcase\n    function PERMIT_TYPEHASH() external view returns (bytes32);\n\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\n    /// @return The EIP712 domain separator of the MultiToken.\n    function domainSeparator() external view returns (bytes32);\n}\n"},"contracts/src/interfaces/IMultiTokenRead.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\ninterface IMultiTokenRead {\n    /// @notice Gets the decimals of the MultiToken.\n    /// @return The decimals of the MultiToken.\n    function decimals() external view returns (uint8);\n\n    /// @notice Gets the name of the MultiToken.\n    /// @param tokenId The sub-token ID.\n    /// @return The name of the MultiToken.\n    function name(uint256 tokenId) external view returns (string memory);\n\n    /// @notice Gets the symbol of the MultiToken.\n    /// @param tokenId The sub-token ID.\n    /// @return The symbol of the MultiToken.\n    function symbol(uint256 tokenId) external view returns (string memory);\n\n    /// @notice Gets the total supply of the MultiToken.\n    /// @param tokenId The sub-token ID.\n    /// @return The total supply of the MultiToken.\n    function totalSupply(uint256 tokenId) external view returns (uint256);\n\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\n    ///         owner.\n    /// @param owner The owner of the tokens.\n    /// @param spender The spender of the tokens.\n    /// @return The approval-for-all status of the spender for the owner.\n    function isApprovedForAll(\n        address owner,\n        address spender\n    ) external view returns (bool);\n\n    /// @notice Gets the allowance of a spender for a sub-token.\n    /// @param tokenId The sub-token ID.\n    /// @param owner The owner of the tokens.\n    /// @param spender The spender of the tokens.\n    /// @return The allowance of the spender for the owner.\n    function perTokenApprovals(\n        uint256 tokenId,\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    /// @notice Gets the balance of a spender for a sub-token.\n    /// @param tokenId The sub-token ID.\n    /// @param owner The owner of the tokens.\n    /// @return The balance of the owner.\n    function balanceOf(\n        uint256 tokenId,\n        address owner\n    ) external view returns (uint256);\n\n    /// @notice Gets the permit nonce for an account.\n    /// @param owner The owner of the tokens.\n    /// @return The permit nonce of the owner.\n    function nonces(address owner) external view returns (uint256);\n}\n"},"contracts/src/libraries/FixedPointMath.sol":{"content":"/// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IHyperdrive } from \"../interfaces/IHyperdrive.sol\";\nimport { SafeCast } from \"./SafeCast.sol\";\n\nuint256 constant ONE = 1e18;\n\n/// @author DELV\n/// @title FixedPointMath\n/// @notice A fixed-point math library.\n/// @custom:disclaimer The language used in this code is for coding convenience\n///                    only, and is not intended to, and does not, have any\n///                    particular legal or regulatory significance.\nlibrary FixedPointMath {\n    using FixedPointMath for uint256;\n    using SafeCast for uint256;\n\n    uint256 internal constant MAX_UINT256 = 2 ** 256 - 1;\n\n    /// @param x Fixed point number in 1e18 format.\n    /// @param y Fixed point number in 1e18 format.\n    /// @param denominator Fixed point number in 1e18 format.\n    /// @return z The result of x * y / denominator rounded down.\n    function mulDivDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\n            if iszero(\n                mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))\n            ) {\n                revert(0, 0)\n            }\n\n            // Divide x * y by the denominator.\n            z := div(mul(x, y), denominator)\n        }\n    }\n\n    /// @param a Fixed point number in 1e18 format.\n    /// @param b Fixed point number in 1e18 format.\n    /// @return Result of a * b rounded down.\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        return (mulDivDown(a, b, ONE));\n    }\n\n    /// @param a Fixed point number in 1e18 format.\n    /// @param b Fixed point number in 1e18 format.\n    /// @return Result of a / b rounded down.\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\n        return (mulDivDown(a, ONE, b)); // Equivalent to (a * 1e18) / b rounded down.\n    }\n\n    /// @param x Fixed point number in 1e18 format.\n    /// @param y Fixed point number in 1e18 format.\n    /// @param denominator Fixed point number in 1e18 format.\n    /// @return z The result of x * y / denominator rounded up.\n    function mulDivUp(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 z) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\n            if iszero(\n                mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))\n            ) {\n                revert(0, 0)\n            }\n\n            // If x * y modulo the denominator is strictly greater than 0,\n            // 1 is added to round up the division of x * y by the denominator.\n            z := add(\n                gt(mod(mul(x, y), denominator), 0),\n                div(mul(x, y), denominator)\n            )\n        }\n    }\n\n    /// @param a Fixed point number in 1e18 format.\n    /// @param b Fixed point number in 1e18 format.\n    /// @return The result of a * b rounded up.\n    function mulUp(uint256 a, uint256 b) internal pure returns (uint256) {\n        return (mulDivUp(a, b, ONE));\n    }\n\n    /// @param a Fixed point number in 1e18 format.\n    /// @param b Fixed point number in 1e18 format.\n    /// @return The result of a / b rounded up.\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {\n        return (mulDivUp(a, ONE, b));\n    }\n\n    /// @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\n    /// @param x Fixed point number in 1e18 format.\n    /// @param y Fixed point number in 1e18 format.\n    /// @return The result of x^y.\n    function pow(uint256 x, uint256 y) internal pure returns (uint256) {\n        // If the exponent is 0, return 1.\n        if (y == 0) {\n            return ONE;\n        }\n\n        // If the base is 0, return 0.\n        if (x == 0) {\n            return 0;\n        }\n\n        // Using properties of logarithms we calculate x^y:\n        // -> ln(x^y) = y * ln(x)\n        // -> e^(y * ln(x)) = x^y\n        int256 y_int256 = y.toInt256(); // solhint-disable-line var-name-mixedcase\n\n        // Compute y*ln(x)\n        // Any overflow for x will be caught in ln() in the initial bounds check\n        int256 lnx = ln(x.toInt256());\n        int256 ylnx;\n        assembly (\"memory-safe\") {\n            ylnx := mul(y_int256, lnx)\n        }\n        ylnx /= int256(ONE);\n\n        // Calculate exp(y * ln(x)) to get x^y\n        return uint256(exp(ylnx));\n    }\n\n    /// @dev Computes e^x in 1e18 fixed point.\n    /// @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\n    /// @param x Fixed point number in 1e18 format.\n    /// @return r The result of e^x.\n    function exp(int256 x) internal pure returns (int256 r) {\n        unchecked {\n            // When the result is < 0.5 we return zero. This happens when\n            // x <= floor(log(0.5e18) * 1e18) ~ -42e18\n            if (x <= -42139678854452767551) return 0;\n\n            // When the result is > (2**255 - 1) / 1e18 we can not represent it as an\n            // int. This happens when x >= floor(log((2**255 - 1) / 1e18) * 1e18) ~ 135.\n            if (x >= 135305999368893231589)\n                revert IHyperdrive.ExpInvalidExponent();\n\n            // x is now in the range (-42, 136) * 1e18. Convert to (-42, 136) * 2**96\n            // for more intermediate precision and a binary basis. This base conversion\n            // is a multiplication by 1e18 / 2**96 = 5**18 / 2**78.\n            x = (x << 78) / 5 ** 18;\n\n            // Reduce range of x to (-½ ln 2, ½ ln 2) * 2**96 by factoring out powers\n            // of two such that exp(x) = exp(x') * 2**k, where k is an integer.\n            // Solving this gives k = round(x / log(2)) and x' = x - k * log(2).\n            // Note: 54916777467707473351141471128 = 2^96 ln(2).\n            int256 k = ((x << 96) / 54916777467707473351141471128 + 2 ** 95) >>\n                96;\n            x = x - k * 54916777467707473351141471128;\n\n            // k is in the range [-61, 195].\n\n            // Evaluate using a (6, 7)-term rational approximation.\n            // p is made monic, we'll multiply by a scale factor later.\n            int256 y = x + 1346386616545796478920950773328;\n            y = ((y * x) >> 96) + 57155421227552351082224309758442;\n            int256 p = y + x - 94201549194550492254356042504812;\n            p = ((p * y) >> 96) + 28719021644029726153956944680412240;\n            p = p * x + (4385272521454847904659076985693276 << 96);\n\n            // We leave p in 2**192 basis so we don't need to scale it back up for the division.\n            int256 q = x - 2855989394907223263936484059900;\n            q = ((q * x) >> 96) + 50020603652535783019961831881945;\n            q = ((q * x) >> 96) - 533845033583426703283633433725380;\n            q = ((q * x) >> 96) + 3604857256930695427073651918091429;\n            q = ((q * x) >> 96) - 14423608567350463180887372962807573;\n            q = ((q * x) >> 96) + 26449188498355588339934803723976023;\n\n            /// @solidity memory-safe-assembly\n            assembly {\n                // Div in assembly because solidity adds a zero check despite the unchecked.\n                // The q polynomial won't have zeros in the domain as all its roots are complex.\n                // No scaling is necessary because p is already 2**96 too large.\n                r := sdiv(p, q)\n            }\n\n            // r should be in the range (0.09, 0.25) * 2**96.\n\n            // We now need to multiply r by:\n            // * the scale factor s = ~6.031367120.\n            // * the 2**k factor from the range reduction.\n            // * the 1e18 / 2**96 factor for base conversion.\n            // We do this all at once, with an intermediate result in 2**213\n            // basis, so the final right shift is always by a positive amount.\n            r = ((uint256(r) *\n                3822833074963236453042738258902158003155416615667) >>\n                uint256(195 - k)).toInt256();\n        }\n    }\n\n    /// @dev Computes ln(x) in 1e18 fixed point.\n    /// @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\n    /// @dev Reverts if x is negative or zero.\n    /// @param x Fixed point number in 1e18 format.\n    /// @return r Result of ln(x).\n    function ln(int256 x) internal pure returns (int256 r) {\n        unchecked {\n            if (x <= 0) {\n                revert IHyperdrive.LnInvalidInput();\n            }\n\n            // We want to convert x from 10**18 fixed point to 2**96 fixed point.\n            // We do this by multiplying by 2**96 / 10**18. But since\n            // ln(x * C) = ln(x) + ln(C), we can simply do nothing here\n            // and add ln(2**96 / 10**18) at the end.\n\n            // This step inlines the `ilog2` call in Remco's implementation:\n            // https://github.com/recmo/experiment-solexp/blob/bbc164fb5ec078cfccf3c71b521605106bfae00b/src/FixedPointMathLib.sol#L57-L68\n            //\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := shl(7, lt(0xffffffffffffffffffffffffffffffff, x))\n                r := or(r, shl(6, lt(0xffffffffffffffff, shr(r, x))))\n                r := or(r, shl(5, lt(0xffffffff, shr(r, x))))\n                r := or(r, shl(4, lt(0xffff, shr(r, x))))\n                r := or(r, shl(3, lt(0xff, shr(r, x))))\n                r := or(r, shl(2, lt(0xf, shr(r, x))))\n                r := or(r, shl(1, lt(0x3, shr(r, x))))\n                r := or(r, lt(0x1, shr(r, x)))\n            }\n\n            // Reduce range of x to [1, 2) * 2**96\n            // ln(2^k * x) = k * ln(2) + ln(x)\n            int256 k = r - 96;\n            x <<= uint256(159 - k);\n            x = (uint256(x) >> 159).toInt256();\n\n            // Evaluate using a (8, 8)-term rational approximation.\n            // p is made monic, we will multiply by a scale factor later.\n            int256 p = x + 3273285459638523848632254066296;\n            p = ((p * x) >> 96) + 24828157081833163892658089445524;\n            p = ((p * x) >> 96) + 43456485725739037958740375743393;\n            p = ((p * x) >> 96) - 11111509109440967052023855526967;\n            p = ((p * x) >> 96) - 45023709667254063763336534515857;\n            p = ((p * x) >> 96) - 14706773417378608786704636184526;\n            p = p * x - (795164235651350426258249787498 << 96);\n\n            // We leave p in 2**192 basis so we don't need to scale it back up for the division.\n            // q is monic by convention.\n            int256 q = x + 5573035233440673466300451813936;\n            q = ((q * x) >> 96) + 71694874799317883764090561454958;\n            q = ((q * x) >> 96) + 283447036172924575727196451306956;\n            q = ((q * x) >> 96) + 401686690394027663651624208769553;\n            q = ((q * x) >> 96) + 204048457590392012362485061816622;\n            q = ((q * x) >> 96) + 31853899698501571402653359427138;\n            q = ((q * x) >> 96) + 909429971244387300277376558375;\n            /// @solidity memory-safe-assembly\n            assembly {\n                // Div in assembly because solidity adds a zero check despite the unchecked.\n                // The q polynomial is known not to have zeros in the domain.\n                // No scaling required because p is already 2**96 too large.\n                r := sdiv(p, q)\n            }\n\n            // r is in the range (0, 0.125) * 2**96\n\n            // Finalization, we need to:\n            // * multiply by the scale factor s = 5.549…\n            // * add ln(2**96 / 10**18)\n            // * add k * ln(2)\n            // * multiply by 10**18 / 2**96 = 5**18 >> 78\n\n            // mul s * 5e18 * 2**96, base is now 5**18 * 2**192\n            r *= 1677202110996718588342820967067443963516166;\n            // add ln(2) * k * 5e18 * 2**192\n            r +=\n                16597577552685614221487285958193947469193820559219878177908093499208371 *\n                k;\n            // add ln(2**96 / 10**18) * 5e18 * 2**192\n            r += 600920179829731861736702779321621459595472258049074101567377883020018308;\n            // base conversion: mul 2**18 / 2**192\n            r >>= 174;\n        }\n    }\n\n    /// @dev Updates a weighted average by adding or removing a weighted delta.\n    /// @param _totalWeight The total weight before the update.\n    /// @param _deltaWeight The weight of the new value.\n    /// @param _average The weighted average before the update.\n    /// @param _delta The new value.\n    /// @return average The new weighted average.\n    function updateWeightedAverage(\n        uint256 _average,\n        uint256 _totalWeight,\n        uint256 _delta,\n        uint256 _deltaWeight,\n        bool _isAdding\n    ) internal pure returns (uint256 average) {\n        // If the delta weight is zero, the average does not change.\n        if (_deltaWeight == 0) {\n            return _average;\n        }\n\n        // If the delta weight should be added to the total weight, we compute\n        // the weighted average as:\n        //\n        // average = (totalWeight * average + deltaWeight * delta) /\n        //           (totalWeight + deltaWeight)\n        if (_isAdding) {\n            // NOTE: Round down to underestimate the average.\n            average = (_totalWeight.mulDown(_average) +\n                _deltaWeight.mulDown(_delta)).divDown(\n                    _totalWeight + _deltaWeight\n                );\n\n            // An important property that should always hold when we are adding\n            // to the average is:\n            //\n            // min(_delta, _average) <= average <= max(_delta, _average)\n            //\n            // To ensure that this is always the case, we clamp the weighted\n            // average to this range. We don't have to worry about the\n            // case where average > _delta.max(average) because rounding down when\n            // computing this average makes this case infeasible.\n            uint256 minAverage = _delta.min(_average);\n            if (average < minAverage) {\n                average = minAverage;\n            }\n        }\n        // If the delta weight should be subtracted from the total weight, we\n        // compute the weighted average as:\n        //\n        // average = (totalWeight * average - deltaWeight * delta) /\n        //           (totalWeight - deltaWeight)\n        else {\n            if (_totalWeight == _deltaWeight) {\n                return 0;\n            }\n\n            // NOTE: Round down to underestimate the average.\n            average = (_totalWeight.mulDown(_average) -\n                _deltaWeight.mulUp(_delta)).divDown(\n                    _totalWeight - _deltaWeight\n                );\n        }\n    }\n\n    /// @dev Calculates the minimum of two values.\n    /// @param a The first value.\n    /// @param b The second value.\n    /// @return The minimum of the two values.\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? b : a;\n    }\n\n    /// @dev Calculates the maximum of two values.\n    /// @param a The first value.\n    /// @param b The second value.\n    /// @return The maximum of the two values.\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /// @dev Calculates the minimum of two values.\n    /// @param a The first value.\n    /// @param b The second value.\n    /// @return The minimum of the two values.\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? b : a;\n    }\n\n    /// @dev Calculates the maximum of two values.\n    /// @param a The first value.\n    /// @param b The second value.\n    /// @return The maximum of the two values.\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /// @dev Calculates the absolute value of an int256.\n    /// @param a The value.\n    /// @return The absolute value of the input.\n    function abs(int256 a) internal pure returns (int256) {\n        return a < 0 ? -a : a;\n    }\n}\n"},"contracts/src/libraries/SafeCast.sol":{"content":"/// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { IHyperdrive } from \"../interfaces/IHyperdrive.sol\";\n\n/// @notice Safe unsigned integer casting library that reverts on overflow.\n/// @author Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)\nlibrary SafeCast {\n    /// @notice This function safely casts a uint256 to a uint112.\n    /// @param x The uint256 to cast to uint112.\n    /// @return y The uint112 casted from x.\n    function toUint112(uint256 x) internal pure returns (uint112 y) {\n        if (x > type(uint112).max) {\n            revert IHyperdrive.UnsafeCastToUint112();\n        }\n        y = uint112(x);\n    }\n\n    /// @notice This function safely casts a uint256 to a uint128.\n    /// @param x The uint256 to cast to uint128.\n    /// @return y The uint128 casted from x.\n    function toUint128(uint256 x) internal pure returns (uint128 y) {\n        if (x > type(uint128).max) {\n            revert IHyperdrive.UnsafeCastToUint128();\n        }\n        y = uint128(x);\n    }\n\n    /// @notice This function safely casts an uint256 to an int128.\n    /// @param x The uint256 to cast to int128.\n    /// @return y The int128 casted from x.\n    function toInt128(uint256 x) internal pure returns (int128 y) {\n        if (x > uint128(type(int128).max)) {\n            revert IHyperdrive.UnsafeCastToInt128();\n        }\n        y = int128(int256(x));\n    }\n\n    /// @notice This function safely casts an int256 to an int128.\n    /// @param x The int256 to cast to int128.\n    /// @return y The int128 casted from x.\n    function toInt128(int256 x) internal pure returns (int128 y) {\n        if (x < type(int128).min || x > type(int128).max) {\n            revert IHyperdrive.UnsafeCastToInt128();\n        }\n        y = int128(x);\n    }\n\n    /// @notice This function safely casts an uint256 to an int256.\n    /// @param x The uint256 to cast to int256.\n    /// @return y The int256 casted from x.\n    function toInt256(uint256 x) internal pure returns (int256 y) {\n        if (x > uint256(type(int256).max)) {\n            revert IHyperdrive.UnsafeCastToInt256();\n        }\n        y = int256(x);\n    }\n}\n"},"contracts/test/ERC20Mintable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { Authority } from \"solmate/auth/Auth.sol\";\nimport { MultiRolesAuthority } from \"solmate/auth/authorities/MultiRolesAuthority.sol\";\nimport { ERC20 } from \"solmate/tokens/ERC20.sol\";\n\ncontract ERC20Mintable is ERC20, MultiRolesAuthority {\n    bool public immutable isCompetitionMode;\n    uint256 public immutable maxMintAmount;\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        address admin,\n        bool isCompetitionMode_,\n        uint256 maxMintAmount_\n    )\n        ERC20(name, symbol, decimals)\n        MultiRolesAuthority(admin, Authority(address(address(this))))\n    {\n        isCompetitionMode = isCompetitionMode_;\n        maxMintAmount = maxMintAmount_;\n    }\n\n    modifier requiresAuthDuringCompetition() {\n        if (isCompetitionMode) {\n            require(\n                isAuthorized(msg.sender, msg.sig),\n                \"ERC20Mintable: not authorized\"\n            );\n        }\n        _;\n    }\n\n    function mint(uint256 amount) external requiresAuthDuringCompetition {\n        require(amount <= maxMintAmount, \"MockERC4626: Invalid mint amount\");\n        _mint(msg.sender, amount);\n    }\n\n    function mint(\n        address destination,\n        uint256 amount\n    ) external requiresAuthDuringCompetition {\n        require(amount <= maxMintAmount, \"MockERC4626: Invalid mint amount\");\n        _mint(destination, amount);\n    }\n\n    function burn(uint256 amount) external requiresAuthDuringCompetition {\n        _burn(msg.sender, amount);\n    }\n\n    function burn(\n        address destination,\n        uint256 amount\n    ) external requiresAuthDuringCompetition {\n        _burn(destination, amount);\n    }\n}\n"},"contracts/test/MockRocketPool.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.20;\n\nimport { MultiRolesAuthority } from \"solmate/auth/authorities/MultiRolesAuthority.sol\";\nimport { FixedPointMath } from \"../src/libraries/FixedPointMath.sol\";\nimport { ERC20Mintable } from \"./ERC20Mintable.sol\";\n\n/// @author DELV\n/// @title MockRocketPool\n/// @notice This mock yield source will accrue interest at a specified rate\n///         Every stateful interaction will accrue interest, so the interest\n///         accrual will approximate continuous compounding as the contract\n///         is called more frequently.\n/// @custom:disclaimer The language used in this code is for coding convenience\n///                    only, and is not intended to, and does not, have any\n///                    particular legal or regulatory significance.\ncontract MockRocketPool is MultiRolesAuthority, ERC20Mintable {\n    using FixedPointMath for uint256;\n\n    // Interest State\n    uint256 internal _rate;\n    uint256 internal _lastUpdated;\n\n    // Lido State\n    uint256 totalPooledEther;\n    uint256 totalShares;\n\n    constructor(\n        uint256 _initialRate,\n        address _admin,\n        bool _isCompetitionMode,\n        uint256 _maxMintAmount\n    )\n        ERC20Mintable(\n            \"RocketPool ETH\",\n            \"RETH\",\n            18,\n            _admin,\n            _isCompetitionMode,\n            _maxMintAmount\n        )\n    {\n        _rate = _initialRate;\n        _lastUpdated = block.timestamp;\n    }\n\n    /// Overrides ///\n\n    function submit(address) external payable returns (uint256) {\n        // Accrue interest.\n        _accrue();\n\n        // If this is the first deposit, mint shares 1:1.\n        if (getTotalShares() == 0) {\n            totalShares = msg.value;\n            totalPooledEther = msg.value;\n            _mint(msg.sender, msg.value);\n            return msg.value;\n        }\n\n        // Calculate the amount of stETH shares that should be minted.\n        uint256 shares = msg.value.mulDivDown(\n            getTotalShares(),\n            getTotalPooledEther()\n        );\n\n        // Update the Lido state.\n        totalPooledEther += msg.value;\n        totalShares += shares;\n\n        // Mint the stETH tokens to the user.\n        _mint(msg.sender, msg.value);\n\n        return shares;\n    }\n\n    function transferShares(\n        address _recipient,\n        uint256 _sharesAmount\n    ) external returns (uint256) {\n        // Accrue interest.\n        _accrue();\n\n        // Calculate the amount of tokens that should be transferred.\n        uint256 tokenAmount = _sharesAmount.mulDivDown(\n            getTotalPooledEther(),\n            getTotalShares()\n        );\n\n        // Transfer the tokens to the user.\n        transfer(_recipient, tokenAmount);\n\n        return tokenAmount;\n    }\n\n    function transferSharesFrom(\n        address _sender,\n        address _recipient,\n        uint256 _sharesAmount\n    ) external returns (uint256) {\n        // Accrue interest.\n        _accrue();\n\n        // Calculate the amount of tokens that should be transferred.\n        uint256 tokenAmount = _sharesAmount.mulDivDown(\n            getTotalPooledEther(),\n            getTotalShares()\n        );\n\n        // Transfer the tokens to the user.\n        transferFrom(_sender, _recipient, tokenAmount);\n\n        return tokenAmount;\n    }\n\n    function getTotalPooledEther() public view returns (uint256) {\n        return totalPooledEther + _getAccruedInterest();\n    }\n\n    function getTotalShares() public view returns (uint256) {\n        return totalShares;\n    }\n\n    /// IRocketTokenRETH ///\n\n    function getEthValue(uint256 _rethAmount) external view returns (uint256) {\n        return _rethAmount.mulDivDown(getTotalPooledEther(), getTotalShares());\n    }\n\n    function getRethValue(uint256 _ethAmount) external view returns (uint256) {\n        return _ethAmount.mulDivDown(getTotalShares(), getTotalPooledEther());\n    }\n\n    /// Mock ///\n\n    function setRate(uint256 _rate_) external requiresAuthDuringCompetition {\n        _accrue();\n        _rate = _rate_;\n    }\n\n    function getRate() external view returns (uint256) {\n        return _rate;\n    }\n\n    function _accrue() internal {\n        uint256 interest = _getAccruedInterest();\n        if (interest > 0) {\n            totalPooledEther += interest;\n        }\n        _lastUpdated = block.timestamp;\n    }\n\n    function _getAccruedInterest() internal view returns (uint256) {\n        if (_rate == 0) {\n            return 0;\n        }\n\n        // base_balance = base_balance * (1 + r * t)\n        uint256 timeElapsed = (block.timestamp - _lastUpdated).divDown(\n            365 days\n        );\n        uint256 accrued = totalPooledEther.mulDown(_rate.mulDown(timeElapsed));\n        return accrued;\n    }\n}\n"},"solmate/auth/Auth.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\nabstract contract Auth {\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\n\n    event AuthorityUpdated(address indexed user, Authority indexed newAuthority);\n\n    address public owner;\n\n    Authority public authority;\n\n    constructor(address _owner, Authority _authority) {\n        owner = _owner;\n        authority = _authority;\n\n        emit OwnershipTransferred(msg.sender, _owner);\n        emit AuthorityUpdated(msg.sender, _authority);\n    }\n\n    modifier requiresAuth() virtual {\n        require(isAuthorized(msg.sender, msg.sig), \"UNAUTHORIZED\");\n\n        _;\n    }\n\n    function isAuthorized(address user, bytes4 functionSig) internal view virtual returns (bool) {\n        Authority auth = authority; // Memoizing authority saves us a warm SLOAD, around 100 gas.\n\n        // Checking if the caller is the owner only after calling the authority saves gas in most cases, but be\n        // aware that this makes protected functions uncallable even to the owner if the authority is out of order.\n        return (address(auth) != address(0) && auth.canCall(user, address(this), functionSig)) || user == owner;\n    }\n\n    function setAuthority(Authority newAuthority) public virtual {\n        // We check if the caller is the owner first because we want to ensure they can\n        // always swap out the authority even if it's reverting or using up a lot of gas.\n        require(msg.sender == owner || authority.canCall(msg.sender, address(this), msg.sig));\n\n        authority = newAuthority;\n\n        emit AuthorityUpdated(msg.sender, newAuthority);\n    }\n\n    function transferOwnership(address newOwner) public virtual requiresAuth {\n        owner = newOwner;\n\n        emit OwnershipTransferred(msg.sender, newOwner);\n    }\n}\n\n/// @notice A generic interface for a contract which provides authorization data to an Auth instance.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\ninterface Authority {\n    function canCall(\n        address user,\n        address target,\n        bytes4 functionSig\n    ) external view returns (bool);\n}\n"},"solmate/auth/authorities/MultiRolesAuthority.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\nimport {Auth, Authority} from \"../Auth.sol\";\n\n/// @notice Flexible and target agnostic role based Authority that supports up to 256 roles.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)\ncontract MultiRolesAuthority is Auth, Authority {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled);\n\n    event PublicCapabilityUpdated(bytes4 indexed functionSig, bool enabled);\n\n    event RoleCapabilityUpdated(uint8 indexed role, bytes4 indexed functionSig, bool enabled);\n\n    event TargetCustomAuthorityUpdated(address indexed target, Authority indexed authority);\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(address _owner, Authority _authority) Auth(_owner, _authority) {}\n\n    /*//////////////////////////////////////////////////////////////\n                     CUSTOM TARGET AUTHORITY STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(address => Authority) public getTargetCustomAuthority;\n\n    /*//////////////////////////////////////////////////////////////\n                            ROLE/USER STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    mapping(address => bytes32) public getUserRoles;\n\n    mapping(bytes4 => bool) public isCapabilityPublic;\n\n    mapping(bytes4 => bytes32) public getRolesWithCapability;\n\n    function doesUserHaveRole(address user, uint8 role) public view virtual returns (bool) {\n        return (uint256(getUserRoles[user]) >> role) & 1 != 0;\n    }\n\n    function doesRoleHaveCapability(uint8 role, bytes4 functionSig) public view virtual returns (bool) {\n        return (uint256(getRolesWithCapability[functionSig]) >> role) & 1 != 0;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                           AUTHORIZATION LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function canCall(\n        address user,\n        address target,\n        bytes4 functionSig\n    ) public view virtual override returns (bool) {\n        Authority customAuthority = getTargetCustomAuthority[target];\n\n        if (address(customAuthority) != address(0)) return customAuthority.canCall(user, target, functionSig);\n\n        return\n            isCapabilityPublic[functionSig] || bytes32(0) != getUserRoles[user] & getRolesWithCapability[functionSig];\n    }\n\n    /*///////////////////////////////////////////////////////////////\n               CUSTOM TARGET AUTHORITY CONFIGURATION LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function setTargetCustomAuthority(address target, Authority customAuthority) public virtual requiresAuth {\n        getTargetCustomAuthority[target] = customAuthority;\n\n        emit TargetCustomAuthorityUpdated(target, customAuthority);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                  PUBLIC CAPABILITY CONFIGURATION LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function setPublicCapability(bytes4 functionSig, bool enabled) public virtual requiresAuth {\n        isCapabilityPublic[functionSig] = enabled;\n\n        emit PublicCapabilityUpdated(functionSig, enabled);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                       USER ROLE ASSIGNMENT LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function setUserRole(\n        address user,\n        uint8 role,\n        bool enabled\n    ) public virtual requiresAuth {\n        if (enabled) {\n            getUserRoles[user] |= bytes32(1 << role);\n        } else {\n            getUserRoles[user] &= ~bytes32(1 << role);\n        }\n\n        emit UserRoleUpdated(user, role, enabled);\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                   ROLE CAPABILITY CONFIGURATION LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function setRoleCapability(\n        uint8 role,\n        bytes4 functionSig,\n        bool enabled\n    ) public virtual requiresAuth {\n        if (enabled) {\n            getRolesWithCapability[functionSig] |= bytes32(1 << role);\n        } else {\n            getRolesWithCapability[functionSig] &= ~bytes32(1 << role);\n        }\n\n        emit RoleCapabilityUpdated(role, functionSig, enabled);\n    }\n}\n"},"solmate/tokens/ERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*//////////////////////////////////////////////////////////////\n                                 EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*//////////////////////////////////////////////////////////////\n                            METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*//////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*//////////////////////////////////////////////////////////////\n                            EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*//////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                               ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                             EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            address recoveredAddress = ecrecover(\n                keccak256(\n                    abi.encodePacked(\n                        \"\\x19\\x01\",\n                        DOMAIN_SEPARATOR(),\n                        keccak256(\n                            abi.encode(\n                                keccak256(\n                                    \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n                                ),\n                                owner,\n                                spender,\n                                value,\n                                nonces[owner]++,\n                                deadline\n                            )\n                        )\n                    )\n                ),\n                v,\n                r,\n                s\n            );\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                        INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000000},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/src/interfaces/IERC20.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[94]},"id":95,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":94,"linearizedBaseContracts":[94],"name":"IERC20","nameLocation":"74:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"87:76:0","text":"@notice Emitted when tokens are transferred from one account to another."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":10,"name":"Transfer","nameLocation":"174:8:0","nodeType":"EventDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"199:4:0","nodeType":"VariableDeclaration","scope":10,"src":"183:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"183:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"221:2:0","nodeType":"VariableDeclaration","scope":10,"src":"205:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"205:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"233:5:0","nodeType":"VariableDeclaration","scope":10,"src":"225:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"182:57:0"},"src":"168:72:0"},{"anonymous":false,"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"246:69:0","text":"@notice Emitted when an owner changes the approval for a spender."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":19,"name":"Approval","nameLocation":"326:8:0","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"360:5:0","nodeType":"VariableDeclaration","scope":19,"src":"344:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"391:7:0","nodeType":"VariableDeclaration","scope":19,"src":"375:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"416:5:0","nodeType":"VariableDeclaration","scope":19,"src":"408:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:93:0"},"src":"320:108:0"},{"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"434:255:0","text":"@notice Updates the allowance of a spender on behalf of the sender.\n @param spender The account with the allowance.\n @param amount The new allowance of the spender.\n @return A flag indicating whether or not the approval succeeded."},"functionSelector":"095ea7b3","id":29,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"703:7:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"spender","nameLocation":"719:7:0","nodeType":"VariableDeclaration","scope":29,"src":"711:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"amount","nameLocation":"736:6:0","nodeType":"VariableDeclaration","scope":29,"src":"728:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"710:33:0"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29,"src":"762:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26,"name":"bool","nodeType":"ElementaryTypeName","src":"762:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"761:6:0"},"scope":94,"src":"694:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"774:263:0","text":"@notice Transfers tokens from the sender's account to another account.\n @param to The recipient of the tokens.\n @param amount The amount of tokens that will be transferred.\n @return A flag indicating whether or not the transfer succeeded."},"functionSelector":"a9059cbb","id":39,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1051:8:0","nodeType":"FunctionDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"to","nameLocation":"1068:2:0","nodeType":"VariableDeclaration","scope":39,"src":"1060:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1060:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"amount","nameLocation":"1080:6:0","nodeType":"VariableDeclaration","scope":39,"src":"1072:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1059:28:0"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":39,"src":"1106:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36,"name":"bool","nodeType":"ElementaryTypeName","src":"1106:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1105:6:0"},"scope":94,"src":"1042:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"1118:348:0","text":"@notice Transfers tokens from an owner to a recipient. This draws from\n         the sender's allowance.\n @param from The owner of the tokens.\n @param to The recipient of the tokens.\n @param amount The amount of tokens that will be transferred.\n @return A flag indicating whether or not the transfer succeeded."},"functionSelector":"23b872dd","id":51,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1480:12:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"from","nameLocation":"1510:4:0","nodeType":"VariableDeclaration","scope":51,"src":"1502:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"to","nameLocation":"1532:2:0","nodeType":"VariableDeclaration","scope":51,"src":"1524:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"amount","nameLocation":"1552:6:0","nodeType":"VariableDeclaration","scope":51,"src":"1544:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1492:72:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":51,"src":"1583:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":48,"name":"bool","nodeType":"ElementaryTypeName","src":"1583:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1582:6:0"},"scope":94,"src":"1471:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"1595:68:0","text":"@notice Gets the token's name.\n @return The token's name."},"functionSelector":"06fdde03","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"1677:4:0","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"1681:2:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"1707:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":54,"name":"string","nodeType":"ElementaryTypeName","src":"1707:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1706:15:0"},"scope":94,"src":"1668:54:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1728:72:0","text":"@notice Gets the token's symbol.\n @return The token's symbol."},"functionSelector":"95d89b41","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1814:6:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1820:2:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"1846:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":60,"name":"string","nodeType":"ElementaryTypeName","src":"1846:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1845:15:0"},"scope":94,"src":"1805:56:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"1867:76:0","text":"@notice Gets the token's decimals.\n @return The token's decimals."},"functionSelector":"313ce567","id":69,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"1957:8:0","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"1965:2:0"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"1991:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":66,"name":"uint8","nodeType":"ElementaryTypeName","src":"1991:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1990:7:0"},"scope":94,"src":"1948:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"2004:84:0","text":"@notice Gets the token's total supply.\n @return The token's total supply."},"functionSelector":"18160ddd","id":75,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2102:11:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"2113:2:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"2139:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2138:9:0"},"scope":94,"src":"2093:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"2154:213:0","text":"@notice Gets the allowance of a spender for an owner.\n @param owner The owner of the tokens.\n @param spender The spender of the tokens.\n @return The allowance of the spender for the owner."},"functionSelector":"dd62ed3e","id":85,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"2381:9:0","nodeType":"FunctionDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"owner","nameLocation":"2408:5:0","nodeType":"VariableDeclaration","scope":85,"src":"2400:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"2400:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"spender","nameLocation":"2431:7:0","nodeType":"VariableDeclaration","scope":85,"src":"2423:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"2423:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2390:54:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":85,"src":"2468:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2467:9:0"},"scope":94,"src":"2372:105:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"2483:130:0","text":"@notice Gets the balance of an account.\n @param account The owner of the tokens.\n @return The account's balance."},"functionSelector":"70a08231","id":93,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2627:9:0","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"account","nameLocation":"2645:7:0","nodeType":"VariableDeclaration","scope":93,"src":"2637:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"2637:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2636:17:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"2677:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":90,"name":"uint256","nodeType":"ElementaryTypeName","src":"2677:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:9:0"},"scope":94,"src":"2618:68:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":95,"src":"64:2624:0","usedErrors":[],"usedEvents":[10,19]}],"src":"39:2650:0"},"id":0},"contracts/src/interfaces/IHyperdrive.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IHyperdrive.sol","exportedSymbols":{"IERC20":[94],"IHyperdrive":[462],"IHyperdriveCore":[653],"IHyperdriveEvents":[856],"IHyperdriveRead":[958],"IMultiToken":[977]},"id":463,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":96,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:1"},{"absolutePath":"contracts/src/interfaces/IERC20.sol","file":"./IERC20.sol","id":98,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":463,"sourceUnit":95,"src":"64:38:1","symbolAliases":[{"foreign":{"id":97,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"73:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IHyperdriveCore.sol","file":"./IHyperdriveCore.sol","id":100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":463,"sourceUnit":654,"src":"103:56:1","symbolAliases":[{"foreign":{"id":99,"name":"IHyperdriveCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"112:15:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IHyperdriveEvents.sol","file":"./IHyperdriveEvents.sol","id":102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":463,"sourceUnit":857,"src":"160:60:1","symbolAliases":[{"foreign":{"id":101,"name":"IHyperdriveEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"169:17:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IHyperdriveRead.sol","file":"./IHyperdriveRead.sol","id":104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":463,"sourceUnit":959,"src":"221:56:1","symbolAliases":[{"foreign":{"id":103,"name":"IHyperdriveRead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"230:15:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IMultiToken.sol","file":"./IMultiToken.sol","id":106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":463,"sourceUnit":978,"src":"278:48:1","symbolAliases":[{"foreign":{"id":105,"name":"IMultiToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"287:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":107,"name":"IHyperdriveEvents","nameLocations":["357:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"357:17:1"},"id":108,"nodeType":"InheritanceSpecifier","src":"357:17:1"},{"baseName":{"id":109,"name":"IHyperdriveRead","nameLocations":["380:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":958,"src":"380:15:1"},"id":110,"nodeType":"InheritanceSpecifier","src":"380:15:1"},{"baseName":{"id":111,"name":"IHyperdriveCore","nameLocations":["401:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"401:15:1"},"id":112,"nodeType":"InheritanceSpecifier","src":"401:15:1"},{"baseName":{"id":113,"name":"IMultiToken","nameLocations":["422:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":977,"src":"422:11:1"},"id":114,"nodeType":"InheritanceSpecifier","src":"422:11:1"}],"canonicalName":"IHyperdrive","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":462,"linearizedBaseContracts":[462,977,1117,653,1068,958,1190,856,1102],"name":"IHyperdrive","nameLocation":"338:11:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IHyperdrive.MarketState","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"440:16:1","text":"Structs ///"},"id":152,"members":[{"constant":false,"id":118,"mutability":"mutable","name":"shareReserves","nameLocation":"542:13:1","nodeType":"VariableDeclaration","scope":152,"src":"534:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":117,"name":"uint128","nodeType":"ElementaryTypeName","src":"534:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"bondReserves","nameLocation":"616:12:1","nodeType":"VariableDeclaration","scope":152,"src":"608:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":120,"name":"uint128","nodeType":"ElementaryTypeName","src":"608:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"longExposure","nameLocation":"713:12:1","nodeType":"VariableDeclaration","scope":152,"src":"705:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":123,"name":"uint128","nodeType":"ElementaryTypeName","src":"705:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"longsOutstanding","nameLocation":"801:16:1","nodeType":"VariableDeclaration","scope":152,"src":"793:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":126,"name":"uint128","nodeType":"ElementaryTypeName","src":"793:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"shareAdjustment","nameLocation":"971:15:1","nodeType":"VariableDeclaration","scope":152,"src":"964:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":129,"name":"int128","nodeType":"ElementaryTypeName","src":"964:6:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"shortsOutstanding","nameLocation":"1063:17:1","nodeType":"VariableDeclaration","scope":152,"src":"1055:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":132,"name":"uint128","nodeType":"ElementaryTypeName","src":"1055:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"longAverageMaturityTime","nameLocation":"1172:23:1","nodeType":"VariableDeclaration","scope":152,"src":"1164:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":135,"name":"uint128","nodeType":"ElementaryTypeName","src":"1164:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"shortAverageMaturityTime","nameLocation":"1288:24:1","nodeType":"VariableDeclaration","scope":152,"src":"1280:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":138,"name":"uint128","nodeType":"ElementaryTypeName","src":"1280:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"isInitialized","nameLocation":"1408:13:1","nodeType":"VariableDeclaration","scope":152,"src":"1403:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"1403:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"isPaused","nameLocation":"1506:8:1","nodeType":"VariableDeclaration","scope":152,"src":"1501:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"1501:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"zombieBaseProceeds","nameLocation":"1607:18:1","nodeType":"VariableDeclaration","scope":152,"src":"1599:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":147,"name":"uint112","nodeType":"ElementaryTypeName","src":"1599:7:1","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"zombieShareReserves","nameLocation":"1714:19:1","nodeType":"VariableDeclaration","scope":152,"src":"1706:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":150,"name":"uint128","nodeType":"ElementaryTypeName","src":"1706:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"MarketState","nameLocation":"468:11:1","nodeType":"StructDefinition","scope":462,"src":"461:1279:1","visibility":"public"},{"canonicalName":"IHyperdrive.Checkpoint","id":156,"members":[{"constant":false,"id":155,"mutability":"mutable","name":"vaultSharePrice","nameLocation":"2056:15:1","nodeType":"VariableDeclaration","scope":156,"src":"2048:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":154,"name":"uint128","nodeType":"ElementaryTypeName","src":"2048:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1753:10:1","nodeType":"StructDefinition","scope":462,"src":"1746:332:1","visibility":"public"},{"canonicalName":"IHyperdrive.WithdrawPool","id":163,"members":[{"constant":false,"id":159,"mutability":"mutable","name":"readyToWithdraw","nameLocation":"2202:15:1","nodeType":"VariableDeclaration","scope":163,"src":"2194:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":158,"name":"uint128","nodeType":"ElementaryTypeName","src":"2194:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"proceeds","nameLocation":"2299:8:1","nodeType":"VariableDeclaration","scope":163,"src":"2291:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":161,"name":"uint128","nodeType":"ElementaryTypeName","src":"2291:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"WithdrawPool","nameLocation":"2091:12:1","nodeType":"StructDefinition","scope":462,"src":"2084:230:1","visibility":"public"},{"canonicalName":"IHyperdrive.Fees","id":176,"members":[{"constant":false,"id":166,"mutability":"mutable","name":"curve","nameLocation":"2419:5:1","nodeType":"VariableDeclaration","scope":176,"src":"2411:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2411:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"flat","nameLocation":"2510:4:1","nodeType":"VariableDeclaration","scope":176,"src":"2502:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"governanceLP","nameLocation":"2600:12:1","nodeType":"VariableDeclaration","scope":176,"src":"2592:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"governanceZombie","nameLocation":"2707:16:1","nodeType":"VariableDeclaration","scope":176,"src":"2699:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Fees","nameLocation":"2327:4:1","nodeType":"StructDefinition","scope":462,"src":"2320:410:1","visibility":"public"},{"canonicalName":"IHyperdrive.PoolDeployConfig","id":219,"members":[{"constant":false,"id":180,"mutability":"mutable","name":"baseToken","nameLocation":"2825:9:1","nodeType":"VariableDeclaration","scope":219,"src":"2818:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"},"typeName":{"id":179,"nodeType":"UserDefinedTypeName","pathNode":{"id":178,"name":"IERC20","nameLocations":["2818:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"2818:6:1"},"referencedDeclaration":94,"src":"2818:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"vaultSharesToken","nameLocation":"2907:16:1","nodeType":"VariableDeclaration","scope":219,"src":"2900:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"},"typeName":{"id":183,"nodeType":"UserDefinedTypeName","pathNode":{"id":182,"name":"IERC20","nameLocations":["2900:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"2900:6:1"},"referencedDeclaration":94,"src":"2900:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"linkerFactory","nameLocation":"3011:13:1","nodeType":"VariableDeclaration","scope":219,"src":"3003:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"3003:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"linkerCodeHash","nameLocation":"3202:14:1","nodeType":"VariableDeclaration","scope":219,"src":"3194:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3194:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"minimumShareReserves","nameLocation":"3279:20:1","nodeType":"VariableDeclaration","scope":219,"src":"3271:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3271:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"minimumTransactionAmount","nameLocation":"3426:24:1","nodeType":"VariableDeclaration","scope":219,"src":"3418:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"3418:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"positionDuration","nameLocation":"3531:16:1","nodeType":"VariableDeclaration","scope":219,"src":"3523:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"checkpointDuration","nameLocation":"3612:18:1","nodeType":"VariableDeclaration","scope":219,"src":"3604:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"timeStretch","nameLocation":"3724:11:1","nodeType":"VariableDeclaration","scope":219,"src":"3716:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3716:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"governance","nameLocation":"3810:10:1","nodeType":"VariableDeclaration","scope":219,"src":"3802:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"feeCollector","nameLocation":"3898:12:1","nodeType":"VariableDeclaration","scope":219,"src":"3890:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"3890:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"sweepCollector","nameLocation":"3986:14:1","nodeType":"VariableDeclaration","scope":219,"src":"3978:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3978:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"fees","nameLocation":"4072:4:1","nodeType":"VariableDeclaration","scope":219,"src":"4055:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$176_storage_ptr","typeString":"struct IHyperdrive.Fees"},"typeName":{"id":217,"nodeType":"UserDefinedTypeName","pathNode":{"id":216,"name":"IHyperdrive.Fees","nameLocations":["4055:11:1","4067:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":176,"src":"4055:16:1"},"referencedDeclaration":176,"src":"4055:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$176_storage_ptr","typeString":"struct IHyperdrive.Fees"}},"visibility":"internal"}],"name":"PoolDeployConfig","nameLocation":"2743:16:1","nodeType":"StructDefinition","scope":462,"src":"2736:1347:1","visibility":"public"},{"canonicalName":"IHyperdrive.PoolConfig","id":265,"members":[{"constant":false,"id":223,"mutability":"mutable","name":"baseToken","nameLocation":"4172:9:1","nodeType":"VariableDeclaration","scope":265,"src":"4165:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"},"typeName":{"id":222,"nodeType":"UserDefinedTypeName","pathNode":{"id":221,"name":"IERC20","nameLocations":["4165:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"4165:6:1"},"referencedDeclaration":94,"src":"4165:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"vaultSharesToken","nameLocation":"4254:16:1","nodeType":"VariableDeclaration","scope":265,"src":"4247:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"},"typeName":{"id":226,"nodeType":"UserDefinedTypeName","pathNode":{"id":225,"name":"IERC20","nameLocations":["4247:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"4247:6:1"},"referencedDeclaration":94,"src":"4247:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"linkerFactory","nameLocation":"4358:13:1","nodeType":"VariableDeclaration","scope":265,"src":"4350:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"linkerCodeHash","nameLocation":"4549:14:1","nodeType":"VariableDeclaration","scope":265,"src":"4541:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4541:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"initialVaultSharePrice","nameLocation":"4629:22:1","nodeType":"VariableDeclaration","scope":265,"src":"4621:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"4621:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"minimumShareReserves","nameLocation":"4714:20:1","nodeType":"VariableDeclaration","scope":265,"src":"4706:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"4706:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"minimumTransactionAmount","nameLocation":"4861:24:1","nodeType":"VariableDeclaration","scope":265,"src":"4853:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"positionDuration","nameLocation":"4966:16:1","nodeType":"VariableDeclaration","scope":265,"src":"4958:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"checkpointDuration","nameLocation":"5047:18:1","nodeType":"VariableDeclaration","scope":265,"src":"5039:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"timeStretch","nameLocation":"5159:11:1","nodeType":"VariableDeclaration","scope":265,"src":"5151:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5151:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"governance","nameLocation":"5245:10:1","nodeType":"VariableDeclaration","scope":265,"src":"5237:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"5237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"feeCollector","nameLocation":"5333:12:1","nodeType":"VariableDeclaration","scope":265,"src":"5325:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"sweepCollector","nameLocation":"5421:14:1","nodeType":"VariableDeclaration","scope":265,"src":"5413:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"5413:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"fees","nameLocation":"5507:4:1","nodeType":"VariableDeclaration","scope":265,"src":"5490:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$176_storage_ptr","typeString":"struct IHyperdrive.Fees"},"typeName":{"id":263,"nodeType":"UserDefinedTypeName","pathNode":{"id":262,"name":"IHyperdrive.Fees","nameLocations":["5490:11:1","5502:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":176,"src":"5490:16:1"},"referencedDeclaration":176,"src":"5490:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Fees_$176_storage_ptr","typeString":"struct IHyperdrive.Fees"}},"visibility":"internal"}],"name":"PoolConfig","nameLocation":"4096:10:1","nodeType":"StructDefinition","scope":462,"src":"4089:1429:1","visibility":"public"},{"canonicalName":"IHyperdrive.PoolInfo","id":311,"members":[{"constant":false,"id":268,"mutability":"mutable","name":"shareReserves","nameLocation":"5616:13:1","nodeType":"VariableDeclaration","scope":311,"src":"5608:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5608:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"shareAdjustment","nameLocation":"5871:15:1","nodeType":"VariableDeclaration","scope":311,"src":"5864:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":270,"name":"int256","nodeType":"ElementaryTypeName","src":"5864:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"zombieBaseProceeds","nameLocation":"5979:18:1","nodeType":"VariableDeclaration","scope":311,"src":"5971:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"zombieShareReserves","nameLocation":"6086:19:1","nodeType":"VariableDeclaration","scope":311,"src":"6078:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"6078:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"bondReserves","nameLocation":"6180:12:1","nodeType":"VariableDeclaration","scope":311,"src":"6172:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"lpTotalSupply","nameLocation":"6258:13:1","nodeType":"VariableDeclaration","scope":311,"src":"6250:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"6250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"vaultSharePrice","nameLocation":"6337:15:1","nodeType":"VariableDeclaration","scope":311,"src":"6329:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"longsOutstanding","nameLocation":"6448:16:1","nodeType":"VariableDeclaration","scope":311,"src":"6440:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"longAverageMaturityTime","nameLocation":"6551:23:1","nodeType":"VariableDeclaration","scope":311,"src":"6543:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"shortsOutstanding","nameLocation":"6671:17:1","nodeType":"VariableDeclaration","scope":311,"src":"6663:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6663:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"shortAverageMaturityTime","nameLocation":"6776:24:1","nodeType":"VariableDeclaration","scope":311,"src":"6768:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"6768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"withdrawalSharesReadyToWithdraw","nameLocation":"6898:31:1","nodeType":"VariableDeclaration","scope":311,"src":"6890:39:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"withdrawalSharesProceeds","nameLocation":"7011:24:1","nodeType":"VariableDeclaration","scope":311,"src":"7003:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"7003:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"lpSharePrice","nameLocation":"7163:12:1","nodeType":"VariableDeclaration","scope":311,"src":"7155:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"7155:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"longExposure","nameLocation":"7264:12:1","nodeType":"VariableDeclaration","scope":311,"src":"7256:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"7256:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"5531:8:1","nodeType":"StructDefinition","scope":462,"src":"5524:1759:1","visibility":"public"},{"canonicalName":"IHyperdrive.Options","id":321,"members":[{"constant":false,"id":314,"mutability":"mutable","name":"destination","nameLocation":"7403:11:1","nodeType":"VariableDeclaration","scope":321,"src":"7395:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"7395:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"asBase","nameLocation":"7587:6:1","nodeType":"VariableDeclaration","scope":321,"src":"7582:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"7582:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"extraData","nameLocation":"7731:9:1","nodeType":"VariableDeclaration","scope":321,"src":"7725:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":319,"name":"bytes","nodeType":"ElementaryTypeName","src":"7725:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Options","nameLocation":"7296:7:1","nodeType":"StructDefinition","scope":462,"src":"7289:458:1","visibility":"public"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"7773:93:1","text":"@notice Thrown when the inputs to a batch transfer don't match in\n         length."},"errorSelector":"ba430d38","id":324,"name":"BatchInputLengthMismatch","nameLocation":"7877:24:1","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"7901:2:1"},"src":"7871:33:1"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"7910:197:1","text":"@notice Thrown when the initializer doesn't provide sufficient liquidity\n         to cover the minimum share reserves and the LP shares that are\n         burned on initialization."},"errorSelector":"abed41c4","id":327,"name":"BelowMinimumContribution","nameLocation":"8118:24:1","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"8142:2:1"},"src":"8112:33:1"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"8151:146:1","text":"@notice Thrown when the exponent to `FixedPointMath.exp` would cause the\n         the result to be larger than the representable scale."},"errorSelector":"73a2d6b1","id":330,"name":"ExpInvalidExponent","nameLocation":"8308:18:1","nodeType":"ErrorDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"8326:2:1"},"src":"8302:27:1"},{"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"8335:54:1","text":"@notice Thrown when a permit signature is expired."},"errorSelector":"f87d9271","id":333,"name":"ExpiredDeadline","nameLocation":"8400:15:1","nodeType":"ErrorDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"8415:2:1"},"src":"8394:24:1"},{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"8424:102:1","text":"@notice Thrown when a user doesn't have a sufficient balance to perform\n         an action."},"errorSelector":"f4d678b8","id":336,"name":"InsufficientBalance","nameLocation":"8537:19:1","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"8556:2:1"},"src":"8531:28:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"8565:105:1","text":"@notice Thrown when the pool doesn't have sufficient liquidity to\n         complete the trade."},"errorSelector":"bb55fd27","id":339,"name":"InsufficientLiquidity","nameLocation":"8681:21:1","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"8702:2:1"},"src":"8675:30:1"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"8711:126:1","text":"@notice Thrown when the pool's APR is outside the bounds specified by\n         a LP when they are adding liquidity."},"errorSelector":"76c22a22","id":342,"name":"InvalidApr","nameLocation":"8848:10:1","nodeType":"ErrorDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"8858:2:1"},"src":"8842:19:1"},{"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"8867:185:1","text":"@notice Thrown when the checkpoint time provided to `checkpoint` is\n         larger than the current checkpoint or isn't divisible by the\n         checkpoint duration."},"errorSelector":"ecd29e81","id":345,"name":"InvalidCheckpointTime","nameLocation":"9063:21:1","nodeType":"ErrorDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"9084:2:1"},"src":"9057:30:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"9093:128:1","text":"@notice Thrown when the caller of one of MultiToken's bridge-only\n         functions is not the corresponding bridge."},"errorSelector":"2aab8bd3","id":348,"name":"InvalidERC20Bridge","nameLocation":"9232:18:1","nodeType":"ErrorDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"9250:2:1"},"src":"9226:27:1"},{"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"9259:122:1","text":"@notice Thrown when a destination other than the fee collector is\n         specified in `collectGovernanceFee`."},"errorSelector":"2b44eccc","id":351,"name":"InvalidFeeDestination","nameLocation":"9392:21:1","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"9413:2:1"},"src":"9386:30:1"},{"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"9422:139:1","text":"@notice Thrown when the initial share price doesn't match the share\n         price of the underlying yield source on deployment."},"errorSelector":"094b19ad","id":354,"name":"InvalidInitialVaultSharePrice","nameLocation":"9572:29:1","nodeType":"ErrorDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"9601:2:1"},"src":"9566:38:1"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"9610:106:1","text":"@notice Thrown when the LP share price couldn't be calculated in a\n         critical situation."},"errorSelector":"abeba7ee","id":357,"name":"InvalidLPSharePrice","nameLocation":"9727:19:1","nodeType":"ErrorDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"9746:2:1"},"src":"9721:28:1"},{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"9755:60:1","text":"@notice Thrown when the present value calculation fails."},"errorSelector":"aa2c6516","id":360,"name":"InvalidPresentValue","nameLocation":"9826:19:1","nodeType":"ErrorDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"9845:2:1"},"src":"9820:28:1"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"9854:212:1","text":"@notice Thrown when an invalid signature is used provide permit access\n         to the MultiToken. A signature is considered to be invalid if\n         it fails to recover to the owner's address."},"errorSelector":"8baa579f","id":363,"name":"InvalidSignature","nameLocation":"10077:16:1","nodeType":"ErrorDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"10093:2:1"},"src":"10071:25:1"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"10102:110:1","text":"@notice Thrown when the timestamp used to construct an asset ID exceeds\n         the uint248 scale."},"errorSelector":"b7d09497","id":366,"name":"InvalidTimestamp","nameLocation":"10223:16:1","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"10239:2:1"},"src":"10217:25:1"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"10248:103:1","text":"@notice Thrown when the input to `FixedPointMath.ln` is less than or\n         equal to zero."},"errorSelector":"e61b4975","id":369,"name":"LnInvalidInput","nameLocation":"10362:14:1","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"10376:2:1"},"src":"10356:23:1"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"10385:214:1","text":"@notice Thrown when vault share price is smaller than the minimum share\n         price. This protects traders from unknowingly opening a long or\n         short after negative interest has accrued."},"errorSelector":"42af972b","id":372,"name":"MinimumSharePrice","nameLocation":"10610:17:1","nodeType":"ErrorDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"10627:2:1"},"src":"10604:26:1"},{"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"10636:228:1","text":"@notice Thrown when the input or output amount of a trade is smaller\n         than the minimum transaction amount. This protects traders and\n         LPs from losses of precision that can occur at small scales."},"errorSelector":"423bbb46","id":375,"name":"MinimumTransactionAmount","nameLocation":"10875:24:1","nodeType":"ErrorDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"10899:2:1"},"src":"10869:33:1"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"10908:303:1","text":"@notice Thrown when the present value prior to adding liquidity results in a\n         decrease in present value after liquidity. This is caused by a\n         shortage in liquidity that prevents all the open positions being\n         closed on the curve and therefore marked to 1."},"errorSelector":"309b2a42","id":378,"name":"DecreasedPresentValueWhenAddingLiquidity","nameLocation":"11222:40:1","nodeType":"ErrorDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"11262:2:1"},"src":"11216:49:1"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"11271:114:1","text":"@notice Thrown when ether is sent to an instance that doesn't accept\n         ether as a deposit asset."},"errorSelector":"1574f9f3","id":381,"name":"NotPayable","nameLocation":"11396:10:1","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"11406:2:1"},"src":"11390:19:1"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"11415:53:1","text":"@notice Thrown when a slippage guard is violated."},"errorSelector":"c9726517","id":384,"name":"OutputLimit","nameLocation":"11479:11:1","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"11490:2:1"},"src":"11473:20:1"},{"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"11499:199:1","text":"@notice Thrown when the pool is already initialized and a trader calls\n         `initialize`. This prevents the pool from being reinitialized\n         after it has been initialized."},"errorSelector":"7983c051","id":387,"name":"PoolAlreadyInitialized","nameLocation":"11709:22:1","nodeType":"ErrorDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"11731:2:1"},"src":"11703:31:1"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"11740:216:1","text":"@notice Thrown when the pool is paused and a trader tries to add\n         liquidity, open a long, or open a short. Traders can still\n         close their existing positions while the pool is paused."},"errorSelector":"21081abf","id":390,"name":"PoolIsPaused","nameLocation":"11967:12:1","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"11979:2:1"},"src":"11961:21:1"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"11988:209:1","text":"@notice Thrown when the owner passed to permit is the zero address. This\n         prevents users from spending the funds in address zero by\n         sending an invalid signature to ecrecover."},"errorSelector":"f0dd15fd","id":393,"name":"RestrictedZeroAddress","nameLocation":"12208:21:1","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"12229:2:1"},"src":"12202:30:1"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"12238:264:1","text":"@notice Thrown by a read-only function called by the proxy. Unlike a\n         normal error, this error actually indicates that a read-only\n         call succeeded. The data that it wraps is the return data from\n         the read-only call."},"errorSelector":"dcc81126","id":398,"name":"ReturnData","nameLocation":"12513:10:1","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"data","nameLocation":"12530:4:1","nodeType":"VariableDeclaration","scope":398,"src":"12524:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"12524:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12523:12:1"},"src":"12507:29:1"},{"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"12542:120:1","text":"@notice Thrown when an asset is swept from the pool and one of the\n         pool's depository assets changes."},"errorSelector":"9eec2ff8","id":401,"name":"SweepFailed","nameLocation":"12673:11:1","nodeType":"ErrorDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"12684:2:1"},"src":"12667:20:1"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"12693:139:1","text":"@notice Thrown when the distribute excess idle calculation fails due\n         to the starting present value calculation failing."},"errorSelector":"8bdf918d","id":404,"name":"DistributeExcessIdleFailed","nameLocation":"12843:26:1","nodeType":"ErrorDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[],"src":"12869:2:1"},"src":"12837:35:1"},{"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"12878:48:1","text":"@notice Thrown when an ether transfer fails."},"errorSelector":"90b8ec18","id":407,"name":"TransferFailed","nameLocation":"12937:14:1","nodeType":"ErrorDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"12951:2:1"},"src":"12931:23:1"},{"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"12960:100:1","text":"@notice Thrown when an unauthorized user attempts to access admin\n         functionality."},"errorSelector":"82b42900","id":410,"name":"Unauthorized","nameLocation":"13071:12:1","nodeType":"ErrorDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"13083:2:1"},"src":"13065:21:1"},{"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"13092:225:1","text":"@notice Thrown when a read-only call succeeds. The proxy architecture\n         uses a force-revert delegatecall pattern to ensure that calls\n         that are intended to be read-only are actually read-only."},"errorSelector":"8bb0a34b","id":413,"name":"UnexpectedSuccess","nameLocation":"13328:17:1","nodeType":"ErrorDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"13345:2:1"},"src":"13322:26:1"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"13354:106:1","text":"@notice Thrown when casting a value to a uint112 that is outside of the\n         uint128 scale."},"errorSelector":"10d62a2e","id":416,"name":"UnsafeCastToUint112","nameLocation":"13471:19:1","nodeType":"ErrorDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"13490:2:1"},"src":"13465:28:1"},{"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"13499:106:1","text":"@notice Thrown when casting a value to a uint128 that is outside of the\n         uint128 scale."},"errorSelector":"1e15f2a2","id":419,"name":"UnsafeCastToUint128","nameLocation":"13616:19:1","nodeType":"ErrorDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"13635:2:1"},"src":"13610:28:1"},{"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"13644:104:1","text":"@notice Thrown when casting a value to a int128 that is outside of the\n         int128 scale."},"errorSelector":"a5353be5","id":422,"name":"UnsafeCastToInt128","nameLocation":"13759:18:1","nodeType":"ErrorDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"13777:2:1"},"src":"13753:27:1"},{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"13786:104:1","text":"@notice Thrown when casting a value to a int256 that is outside of the\n         int256 scale."},"errorSelector":"72dd4e02","id":425,"name":"UnsafeCastToInt256","nameLocation":"13901:18:1","nodeType":"ErrorDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"13919:2:1"},"src":"13895:27:1"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"13928:220:1","text":"@notice Thrown when an unsupported option is passed to a function or\n         a user attempts to sweep an invalid token. The options and sweep\n         targets that are supported vary between instances."},"errorSelector":"6a172882","id":428,"name":"UnsupportedToken","nameLocation":"14159:16:1","nodeType":"ErrorDefinition","parameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"14175:2:1"},"src":"14153:25:1"},{"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"14184:64:1","text":"@notice Thrown when `LPMath.calculateUpdateLiquidity` fails."},"errorSelector":"5044b7f5","id":431,"name":"UpdateLiquidityFailed","nameLocation":"14259:21:1","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"14280:2:1"},"src":"14253:30:1"},{"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"14310:74:1","text":"@notice Gets the target0 address.\n @return The target0 address."},"functionSelector":"21b57d53","id":437,"implemented":false,"kind":"function","modifiers":[],"name":"target0","nameLocation":"14398:7:1","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"14405:2:1"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"14431:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"14431:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14430:9:1"},"scope":462,"src":"14389:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"14446:74:1","text":"@notice Gets the target1 address.\n @return The target1 address."},"functionSelector":"eac3e799","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"target1","nameLocation":"14534:7:1","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"14541:2:1"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"14567:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"14567:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14566:9:1"},"scope":462,"src":"14525:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"14582:74:1","text":"@notice Gets the target2 address.\n @return The target2 address."},"functionSelector":"a6e8a859","id":449,"implemented":false,"kind":"function","modifiers":[],"name":"target2","nameLocation":"14670:7:1","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"14677:2:1"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"14703:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"14703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14702:9:1"},"scope":462,"src":"14661:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"14718:74:1","text":"@notice Gets the target3 address.\n @return The target3 address."},"functionSelector":"d899e112","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"target3","nameLocation":"14806:7:1","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"14813:2:1"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"14839:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"14839:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14838:9:1"},"scope":462,"src":"14797:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"14854:74:1","text":"@notice Gets the target4 address.\n @return The target4 address."},"functionSelector":"f3f70707","id":461,"implemented":false,"kind":"function","modifiers":[],"name":"target4","nameLocation":"14942:7:1","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"14949:2:1"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":461,"src":"14975:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14974:9:1"},"scope":462,"src":"14933:51:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":463,"src":"328:14658:1","usedErrors":[324,327,330,333,336,339,342,345,348,351,354,357,360,363,366,369,372,375,378,381,384,387,390,393,398,401,404,407,410,413,416,419,422,425,428,431],"usedEvents":[674,689,708,723,740,759,778,799,814,821,826,831,836,843,848,855,1083,1092,1101]}],"src":"39:14948:1"},"id":1},"contracts/src/interfaces/IHyperdriveCore.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IHyperdriveCore.sol","exportedSymbols":{"IERC20":[94],"IHyperdrive":[462],"IHyperdriveCore":[653],"IMultiTokenCore":[1068]},"id":654,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:2"},{"absolutePath":"contracts/src/interfaces/IERC20.sol","file":"./IERC20.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":654,"sourceUnit":95,"src":"64:38:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"73:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IHyperdrive.sol","file":"./IHyperdrive.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":654,"sourceUnit":463,"src":"103:48:2","symbolAliases":[{"foreign":{"id":467,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"112:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IMultiTokenCore.sol","file":"./IMultiTokenCore.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":654,"sourceUnit":1069,"src":"152:56:2","symbolAliases":[{"foreign":{"id":469,"name":"IMultiTokenCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"161:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":471,"name":"IMultiTokenCore","nameLocations":["239:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"239:15:2"},"id":472,"nodeType":"InheritanceSpecifier","src":"239:15:2"}],"canonicalName":"IHyperdriveCore","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":653,"linearizedBaseContracts":[653,1068],"name":"IHyperdriveCore","nameLocation":"220:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"280:765:2","text":"@notice Opens a long position.\n @param _amount The amount of capital provided to open the long. The\n        units of this quantity are either base or vault shares, depending\n        on the value of `_options.asBase`.\n @param _minOutput The minimum number of bonds to receive.\n @param _minVaultSharePrice The minimum vault share price at which to\n        open the long. This allows traders to protect themselves from\n        opening a long in a checkpoint where negative interest has\n        accrued.\n @param _options The options that configure how the trade is settled.\n @return maturityTime The maturity time of the bonds.\n @return bondProceeds The amount of bonds the user received."},"functionSelector":"cba2e58d","id":489,"implemented":false,"kind":"function","modifiers":[],"name":"openLong","nameLocation":"1059:8:2","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"_amount","nameLocation":"1085:7:2","nodeType":"VariableDeclaration","scope":489,"src":"1077:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1077:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"_minOutput","nameLocation":"1110:10:2","nodeType":"VariableDeclaration","scope":489,"src":"1102:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"_minVaultSharePrice","nameLocation":"1138:19:2","nodeType":"VariableDeclaration","scope":489,"src":"1130:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"_options","nameLocation":"1196:8:2","nodeType":"VariableDeclaration","scope":489,"src":"1167:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":481,"nodeType":"UserDefinedTypeName","pathNode":{"id":480,"name":"IHyperdrive.Options","nameLocations":["1167:11:2","1179:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"1167:19:2"},"referencedDeclaration":321,"src":"1167:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"1067:143:2"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"maturityTime","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":489,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"bondProceeds","nameLocation":"1267:12:2","nodeType":"VariableDeclaration","scope":489,"src":"1259:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:44:2"},"scope":653,"src":"1050:231:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"1287:660:2","text":"@notice Closes a long position with a specified maturity time.\n @param _maturityTime The maturity time of the long.\n @param _bondAmount The amount of longs to close.\n @param _minOutput The minimum proceeds the trader will accept. The units\n        of this quantity are either base or vault shares, depending on\n        the value of `_options.asBase`.\n @param _options The options that configure how the trade is settled.\n @return proceeds The proceeds the user receives. The units of this\n         quantity are either base or vault shares, depending on the value\n         of `_options.asBase`."},"functionSelector":"ded06231","id":504,"implemented":false,"kind":"function","modifiers":[],"name":"closeLong","nameLocation":"1961:9:2","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"_maturityTime","nameLocation":"1988:13:2","nodeType":"VariableDeclaration","scope":504,"src":"1980:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"_bondAmount","nameLocation":"2019:11:2","nodeType":"VariableDeclaration","scope":504,"src":"2011:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"_minOutput","nameLocation":"2048:10:2","nodeType":"VariableDeclaration","scope":504,"src":"2040:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"_options","nameLocation":"2097:8:2","nodeType":"VariableDeclaration","scope":504,"src":"2068:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":498,"nodeType":"UserDefinedTypeName","pathNode":{"id":497,"name":"IHyperdrive.Options","nameLocations":["2068:11:2","2080:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"2068:19:2"},"referencedDeclaration":321,"src":"2068:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"1970:141:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"proceeds","nameLocation":"2138:8:2","nodeType":"VariableDeclaration","scope":504,"src":"2130:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2130:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2129:18:2"},"scope":653,"src":"1952:196:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"2174:891:2","text":"@notice Opens a short position.\n @param _bondAmount The amount of bonds to short.\n @param _maxDeposit The most the user expects to deposit for this trade.\n        The units of this quantity are either base or vault shares,\n        depending on the value of `_options.asBase`.\n @param _minVaultSharePrice The minimum vault share price at which to open\n        the short. This allows traders to protect themselves from opening\n        a short in a checkpoint where negative interest has accrued.\n @param _options The options that configure how the trade is settled.\n @return maturityTime The maturity time of the short.\n @return deposit The amount the user deposited for this trade. The units\n         of this quantity are either base or vault shares, depending on\n         the value of `_options.asBase`."},"functionSelector":"dbbe8070","id":521,"implemented":false,"kind":"function","modifiers":[],"name":"openShort","nameLocation":"3079:9:2","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"_bondAmount","nameLocation":"3106:11:2","nodeType":"VariableDeclaration","scope":521,"src":"3098:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"_maxDeposit","nameLocation":"3135:11:2","nodeType":"VariableDeclaration","scope":521,"src":"3127:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3127:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_minVaultSharePrice","nameLocation":"3164:19:2","nodeType":"VariableDeclaration","scope":521,"src":"3156:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"_options","nameLocation":"3222:8:2","nodeType":"VariableDeclaration","scope":521,"src":"3193:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"IHyperdrive.Options","nameLocations":["3193:11:2","3205:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"3193:19:2"},"referencedDeclaration":321,"src":"3193:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"3088:148:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"maturityTime","nameLocation":"3271:12:2","nodeType":"VariableDeclaration","scope":521,"src":"3263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"3263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"deposit","nameLocation":"3293:7:2","nodeType":"VariableDeclaration","scope":521,"src":"3285:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3262:39:2"},"scope":653,"src":"3070:232:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"3308:656:2","text":"@notice Closes a short position with a specified maturity time.\n @param _maturityTime The maturity time of the short.\n @param _bondAmount The amount of shorts to close.\n @param _minOutput The minimum output of this trade. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the trade is settled.\n @return proceeds The proceeds of closing this short. The units of this\n         quantity are either base or vault shares, depending on the value\n         of `_options.asBase`."},"functionSelector":"29b23fc1","id":536,"implemented":false,"kind":"function","modifiers":[],"name":"closeShort","nameLocation":"3978:10:2","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"_maturityTime","nameLocation":"4006:13:2","nodeType":"VariableDeclaration","scope":536,"src":"3998:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"_bondAmount","nameLocation":"4037:11:2","nodeType":"VariableDeclaration","scope":536,"src":"4029:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"4029:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"_minOutput","nameLocation":"4066:10:2","nodeType":"VariableDeclaration","scope":536,"src":"4058:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"4058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"_options","nameLocation":"4115:8:2","nodeType":"VariableDeclaration","scope":536,"src":"4086:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"IHyperdrive.Options","nameLocations":["4086:11:2","4098:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"4086:19:2"},"referencedDeclaration":321,"src":"4086:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"3988:141:2"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"proceeds","nameLocation":"4156:8:2","nodeType":"VariableDeclaration","scope":536,"src":"4148:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4147:18:2"},"scope":653,"src":"3969:197:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"4189:455:2","text":"@notice Allows the first LP to initialize the market with a target APR.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _apr The target APR.\n @param _options The options that configure how the operation is settled.\n @return lpShares The initial number of LP shares created."},"functionSelector":"77d05ff4","id":549,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"4658:10:2","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"_contribution","nameLocation":"4686:13:2","nodeType":"VariableDeclaration","scope":549,"src":"4678:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"_apr","nameLocation":"4717:4:2","nodeType":"VariableDeclaration","scope":549,"src":"4709:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"4709:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"_options","nameLocation":"4760:8:2","nodeType":"VariableDeclaration","scope":549,"src":"4731:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"IHyperdrive.Options","nameLocations":["4731:11:2","4743:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"4731:19:2"},"referencedDeclaration":321,"src":"4731:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"4668:106:2"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"lpShares","nameLocation":"4809:8:2","nodeType":"VariableDeclaration","scope":549,"src":"4801:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4801:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4800:18:2"},"scope":653,"src":"4649:170:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"4825:1002:2","text":"@notice Allows LPs to supply liquidity for LP shares.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _minLpSharePrice The minimum LP share price the LP is willing\n        to accept for their shares. LPs incur negative slippage when\n        adding liquidity if there is a net curve position in the market,\n        so this allows LPs to protect themselves from high levels of\n        slippage. The units of this quantity are either base or vault\n        shares, depending on the value of `_options.asBase`.\n @param _minApr The minimum APR at which the LP is willing to supply.\n @param _maxApr The maximum APR at which the LP is willing to supply.\n @param _options The options that configure how the operation is settled.\n @return lpShares The LP shares received by the LP."},"functionSelector":"4c2ac1d9","id":566,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"5841:12:2","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"_contribution","nameLocation":"5871:13:2","nodeType":"VariableDeclaration","scope":566,"src":"5863:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"_minLpSharePrice","nameLocation":"5902:16:2","nodeType":"VariableDeclaration","scope":566,"src":"5894:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"_minApr","nameLocation":"5936:7:2","nodeType":"VariableDeclaration","scope":566,"src":"5928:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5928:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"_maxApr","nameLocation":"5961:7:2","nodeType":"VariableDeclaration","scope":566,"src":"5953:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"5953:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"_options","nameLocation":"6007:8:2","nodeType":"VariableDeclaration","scope":566,"src":"5978:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":560,"nodeType":"UserDefinedTypeName","pathNode":{"id":559,"name":"IHyperdrive.Options","nameLocations":["5978:11:2","5990:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"5978:19:2"},"referencedDeclaration":321,"src":"5978:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"5853:168:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"lpShares","nameLocation":"6056:8:2","nodeType":"VariableDeclaration","scope":566,"src":"6048:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6048:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6047:18:2"},"scope":653,"src":"5832:234:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"6072:1062:2","text":"@notice Allows an LP to burn shares and withdraw from the pool.\n @param _lpShares The LP shares to burn.\n @param _minOutputPerShare The minimum amount the LP expects to receive\n        for each withdrawal share that is burned. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the operation is settled.\n @return proceeds The amount the LP removing liquidity receives. The\n         units of this quantity are either base or vault shares,\n         depending on the value of `_options.asBase`.\n @return withdrawalShares The base that the LP receives buys out some of\n         their LP shares, but it may not be sufficient to fully buy the\n         LP out. In this case, the LP receives withdrawal shares equal in\n         value to the present value they are owed. As idle capital\n         becomes available, the pool will buy back these shares."},"functionSelector":"cbc13434","id":581,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"7148:15:2","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"_lpShares","nameLocation":"7181:9:2","nodeType":"VariableDeclaration","scope":581,"src":"7173:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7173:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"_minOutputPerShare","nameLocation":"7208:18:2","nodeType":"VariableDeclaration","scope":581,"src":"7200:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"7200:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"_options","nameLocation":"7265:8:2","nodeType":"VariableDeclaration","scope":581,"src":"7236:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":573,"nodeType":"UserDefinedTypeName","pathNode":{"id":572,"name":"IHyperdrive.Options","nameLocations":["7236:11:2","7248:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"7236:19:2"},"referencedDeclaration":321,"src":"7236:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"7163:116:2"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"proceeds","nameLocation":"7306:8:2","nodeType":"VariableDeclaration","scope":581,"src":"7298:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"7298:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"withdrawalShares","nameLocation":"7324:16:2","nodeType":"VariableDeclaration","scope":581,"src":"7316:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"7316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7297:44:2"},"scope":653,"src":"7139:203:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"7348:1005:2","text":"@notice Redeems withdrawal shares by giving the LP a pro-rata amount of\n         the withdrawal pool's proceeds. This function redeems the\n         maximum amount of the specified withdrawal shares given the\n         amount of withdrawal shares ready to withdraw.\n @param _withdrawalShares The withdrawal shares to redeem.\n @param _minOutputPerShare The minimum amount the LP expects to\n        receive for each withdrawal share that is burned. The units of\n        this quantity are either base or vault shares, depending on the\n        value of `_options.asBase`.\n @param _options The options that configure how the operation is settled.\n @return proceeds The amount the LP received. The units of this quantity\n         are either base or vault shares, depending on the value of\n         `_options.asBase`.\n @return withdrawalSharesRedeemed The amount of withdrawal shares that\n         were redeemed."},"functionSelector":"074a6de9","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"redeemWithdrawalShares","nameLocation":"8367:22:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"_withdrawalShares","nameLocation":"8407:17:2","nodeType":"VariableDeclaration","scope":596,"src":"8399:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"8399:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"_minOutputPerShare","nameLocation":"8442:18:2","nodeType":"VariableDeclaration","scope":596,"src":"8434:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"_options","nameLocation":"8499:8:2","nodeType":"VariableDeclaration","scope":596,"src":"8470:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"IHyperdrive.Options","nameLocations":["8470:11:2","8482:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"8470:19:2"},"referencedDeclaration":321,"src":"8470:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"8389:124:2"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"proceeds","nameLocation":"8540:8:2","nodeType":"VariableDeclaration","scope":596,"src":"8532:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"8532:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"withdrawalSharesRedeemed","nameLocation":"8558:24:2","nodeType":"VariableDeclaration","scope":596,"src":"8550:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8550:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8531:52:2"},"scope":653,"src":"8358:226:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":597,"nodeType":"StructuredDocumentation","src":"8615:427:2","text":"@notice Attempts to mint a checkpoint with the specified checkpoint time.\n @param _checkpointTime The time of the checkpoint to create.\n @param _maxIterations The number of iterations to use in the Newton's\n        method component of `_distributeExcessIdleSafe`. This defaults to\n        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\n        smaller than the constant."},"functionSelector":"414f826d","id":604,"implemented":false,"kind":"function","modifiers":[],"name":"checkpoint","nameLocation":"9056:10:2","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":599,"mutability":"mutable","name":"_checkpointTime","nameLocation":"9084:15:2","nodeType":"VariableDeclaration","scope":604,"src":"9076:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"_maxIterations","nameLocation":"9117:14:2","nodeType":"VariableDeclaration","scope":604,"src":"9109:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9066:71:2"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"9146:0:2"},"scope":653,"src":"9047:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"9172:345:2","text":"@notice This function collects the governance fees accrued by the pool.\n @param _options The options that configure how the fees are settled.\n @return proceeds The governance fees collected. The units of this\n         quantity are either base or vault shares, depending on the value\n         of `_options.asBase`."},"functionSelector":"3e691db9","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"collectGovernanceFee","nameLocation":"9531:20:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"_options","nameLocation":"9590:8:2","nodeType":"VariableDeclaration","scope":613,"src":"9561:37:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_calldata_ptr","typeString":"struct IHyperdrive.Options"},"typeName":{"id":607,"nodeType":"UserDefinedTypeName","pathNode":{"id":606,"name":"IHyperdrive.Options","nameLocations":["9561:11:2","9573:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":321,"src":"9561:19:2"},"referencedDeclaration":321,"src":"9561:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_Options_$321_storage_ptr","typeString":"struct IHyperdrive.Options"}},"visibility":"internal"}],"src":"9551:53:2"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"proceeds","nameLocation":"9631:8:2","nodeType":"VariableDeclaration","scope":613,"src":"9623:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"9623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9622:18:2"},"scope":653,"src":"9522:119:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"9647:141:2","text":"@notice Allows an authorized address to pause this contract.\n @param _status True to pause all deposits and false to unpause them."},"functionSelector":"02329a29","id":619,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"9802:5:2","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"_status","nameLocation":"9813:7:2","nodeType":"VariableDeclaration","scope":619,"src":"9808:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":615,"name":"bool","nodeType":"ElementaryTypeName","src":"9808:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9807:14:2"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"9830:0:2"},"scope":653,"src":"9793:38:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"9837:116:2","text":"@notice Allows governance to transfer the fee collector role.\n @param _who The new fee collector address."},"functionSelector":"a42dce80","id":625,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeCollector","nameLocation":"9967:15:2","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"_who","nameLocation":"9991:4:2","nodeType":"VariableDeclaration","scope":625,"src":"9983:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"9983:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9982:14:2"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"10005:0:2"},"scope":653,"src":"9958:48:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"10012:120:2","text":"@notice Allows governance to transfer the sweep collector role.\n @param _who The new sweep collector address."},"functionSelector":"e4af29d1","id":631,"implemented":false,"kind":"function","modifiers":[],"name":"setSweepCollector","nameLocation":"10146:17:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"_who","nameLocation":"10172:4:2","nodeType":"VariableDeclaration","scope":631,"src":"10164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10163:14:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"10186:0:2"},"scope":653,"src":"10137:50:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"10193:110:2","text":"@notice Allows governance to transfer the governance role.\n @param _who The new governance address."},"functionSelector":"ab033ea9","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"setGovernance","nameLocation":"10317:13:2","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"_who","nameLocation":"10339:4:2","nodeType":"VariableDeclaration","scope":637,"src":"10331:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"10331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10330:14:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"10353:0:2"},"scope":653,"src":"10308:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"10360:159:2","text":"@notice Allows governance to change the pauser status of an address.\n @param who The address to change.\n @param status The new pauser status."},"functionSelector":"7180c8ca","id":645,"implemented":false,"kind":"function","modifiers":[],"name":"setPauser","nameLocation":"10533:9:2","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"who","nameLocation":"10551:3:2","nodeType":"VariableDeclaration","scope":645,"src":"10543:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"10543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"status","nameLocation":"10561:6:2","nodeType":"VariableDeclaration","scope":645,"src":"10556:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":641,"name":"bool","nodeType":"ElementaryTypeName","src":"10556:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10542:26:2"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"10577:0:2"},"scope":653,"src":"10524:54:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"10584:397:2","text":"@notice Transfers the contract's balance of a target token to the fee\n         collector address.\n @dev WARN: It is unlikely but possible that there is a selector overlap\n      with 'transferFrom'. Any integrating contracts should be checked\n      for that, as it may result in an unexpected call from this address.\n @param _target The target token to sweep."},"functionSelector":"01681a62","id":652,"implemented":false,"kind":"function","modifiers":[],"name":"sweep","nameLocation":"10995:5:2","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"_target","nameLocation":"11008:7:2","nodeType":"VariableDeclaration","scope":652,"src":"11001:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"},"typeName":{"id":648,"nodeType":"UserDefinedTypeName","pathNode":{"id":647,"name":"IERC20","nameLocations":["11001:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":94,"src":"11001:6:2"},"referencedDeclaration":94,"src":"11001:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$94","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"11000:16:2"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"11025:0:2"},"scope":653,"src":"10986:40:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":654,"src":"210:10818:2","usedErrors":[],"usedEvents":[]}],"src":"39:10990:2"},"id":2},"contracts/src/interfaces/IHyperdriveEvents.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IHyperdriveEvents.sol","exportedSymbols":{"IHyperdriveEvents":[856],"IMultiTokenEvents":[1102]},"id":857,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":655,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:3"},{"absolutePath":"contracts/src/interfaces/IMultiTokenEvents.sol","file":"./IMultiTokenEvents.sol","id":657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":857,"sourceUnit":1103,"src":"64:60:3","symbolAliases":[{"foreign":{"id":656,"name":"IMultiTokenEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"73:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":658,"name":"IMultiTokenEvents","nameLocations":["157:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"157:17:3"},"id":659,"nodeType":"InheritanceSpecifier","src":"157:17:3"}],"canonicalName":"IHyperdriveEvents","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":856,"linearizedBaseContracts":[856,1102],"name":"IHyperdriveEvents","nameLocation":"136:17:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"181:60:3","text":"@notice Emitted when the Hyperdrive pool is initialized."},"eventSelector":"dfe2bf9f580df5ec15438120ffa6f0603237c4e6b65d07140a4695317da4f952","id":674,"name":"Initialize","nameLocation":"252:10:3","nodeType":"EventDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"288:8:3","nodeType":"VariableDeclaration","scope":674,"src":"272:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"indexed":false,"mutability":"mutable","name":"lpAmount","nameLocation":"314:8:3","nodeType":"VariableDeclaration","scope":674,"src":"306:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":666,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"340:10:3","nodeType":"VariableDeclaration","scope":674,"src":"332:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"332:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"368:16:3","nodeType":"VariableDeclaration","scope":674,"src":"360:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"399:6:3","nodeType":"VariableDeclaration","scope":674,"src":"394:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":669,"name":"bool","nodeType":"ElementaryTypeName","src":"394:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":672,"indexed":false,"mutability":"mutable","name":"apr","nameLocation":"423:3:3","nodeType":"VariableDeclaration","scope":674,"src":"415:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"262:170:3"},"src":"246:187:3"},{"anonymous":false,"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"439:69:3","text":"@notice Emitted when an LP adds liquidity to the Hyperdrive pool."},"eventSelector":"a59daf574c5c8db34377de83bceea2aa1433cc506d656f5e8f46e5f4b5c58a86","id":689,"name":"AddLiquidity","nameLocation":"519:12:3","nodeType":"EventDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"557:8:3","nodeType":"VariableDeclaration","scope":689,"src":"541:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"indexed":false,"mutability":"mutable","name":"lpAmount","nameLocation":"583:8:3","nodeType":"VariableDeclaration","scope":689,"src":"575:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":681,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"609:10:3","nodeType":"VariableDeclaration","scope":689,"src":"601:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":683,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"637:16:3","nodeType":"VariableDeclaration","scope":689,"src":"629:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"668:6:3","nodeType":"VariableDeclaration","scope":689,"src":"663:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"663:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":687,"indexed":false,"mutability":"mutable","name":"lpSharePrice","nameLocation":"692:12:3","nodeType":"VariableDeclaration","scope":689,"src":"684:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"531:179:3"},"src":"513:198:3"},{"anonymous":false,"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"717:74:3","text":"@notice Emitted when an LP removes liquidity from the Hyperdrive pool."},"eventSelector":"56e07298e87dce53d3298b9775b947b87b39b2dde51df86371f0540885da83c9","id":708,"name":"RemoveLiquidity","nameLocation":"802:15:3","nodeType":"EventDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"843:8:3","nodeType":"VariableDeclaration","scope":708,"src":"827:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"877:11:3","nodeType":"VariableDeclaration","scope":708,"src":"861:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":696,"indexed":false,"mutability":"mutable","name":"lpAmount","nameLocation":"906:8:3","nodeType":"VariableDeclaration","scope":708,"src":"898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":698,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"932:10:3","nodeType":"VariableDeclaration","scope":708,"src":"924:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":700,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"960:16:3","nodeType":"VariableDeclaration","scope":708,"src":"952:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":702,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"991:6:3","nodeType":"VariableDeclaration","scope":708,"src":"986:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":701,"name":"bool","nodeType":"ElementaryTypeName","src":"986:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":704,"indexed":false,"mutability":"mutable","name":"withdrawalShareAmount","nameLocation":"1015:21:3","nodeType":"VariableDeclaration","scope":708,"src":"1007:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":706,"indexed":false,"mutability":"mutable","name":"lpSharePrice","nameLocation":"1054:12:3","nodeType":"VariableDeclaration","scope":708,"src":"1046:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"817:255:3"},"src":"796:277:3"},{"anonymous":false,"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1079:57:3","text":"@notice Emitted when an LP redeems withdrawal shares."},"eventSelector":"4ce1e73a001c994d4d884cd1e382579f9c1e81eccf26e70ece8caa1b60a8c2cf","id":723,"name":"RedeemWithdrawalShares","nameLocation":"1147:22:3","nodeType":"EventDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"1195:8:3","nodeType":"VariableDeclaration","scope":723,"src":"1179:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"1229:11:3","nodeType":"VariableDeclaration","scope":723,"src":"1213:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":715,"indexed":false,"mutability":"mutable","name":"withdrawalShareAmount","nameLocation":"1258:21:3","nodeType":"VariableDeclaration","scope":723,"src":"1250:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":717,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"1297:10:3","nodeType":"VariableDeclaration","scope":723,"src":"1289:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":719,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"1325:16:3","nodeType":"VariableDeclaration","scope":723,"src":"1317:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"1356:6:3","nodeType":"VariableDeclaration","scope":723,"src":"1351:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":720,"name":"bool","nodeType":"ElementaryTypeName","src":"1351:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1169:199:3"},"src":"1141:228:3"},{"anonymous":false,"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"1375:51:3","text":"@notice Emitted when a long position is opened."},"eventSelector":"88087800d03445c97e2009f3f90906bf6ede79bbd194e275c66224e977a5b84c","id":740,"name":"OpenLong","nameLocation":"1437:8:3","nodeType":"EventDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"indexed":true,"mutability":"mutable","name":"trader","nameLocation":"1471:6:3","nodeType":"VariableDeclaration","scope":740,"src":"1455:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"1503:7:3","nodeType":"VariableDeclaration","scope":740,"src":"1487:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":730,"indexed":false,"mutability":"mutable","name":"maturityTime","nameLocation":"1528:12:3","nodeType":"VariableDeclaration","scope":740,"src":"1520:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":732,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"1558:10:3","nodeType":"VariableDeclaration","scope":740,"src":"1550:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1550:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":734,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"1586:16:3","nodeType":"VariableDeclaration","scope":740,"src":"1578:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":736,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"1617:6:3","nodeType":"VariableDeclaration","scope":740,"src":"1612:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":735,"name":"bool","nodeType":"ElementaryTypeName","src":"1612:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":738,"indexed":false,"mutability":"mutable","name":"bondAmount","nameLocation":"1641:10:3","nodeType":"VariableDeclaration","scope":740,"src":"1633:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1445:212:3"},"src":"1431:227:3"},{"anonymous":false,"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"1664:52:3","text":"@notice Emitted when a short position is opened."},"eventSelector":"b354b32bd86ebd9f0968a338e5c2873d7f0d473aa7a668c2488e66038380258b","id":759,"name":"OpenShort","nameLocation":"1727:9:3","nodeType":"EventDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"indexed":true,"mutability":"mutable","name":"trader","nameLocation":"1762:6:3","nodeType":"VariableDeclaration","scope":759,"src":"1746:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"1746:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"1794:7:3","nodeType":"VariableDeclaration","scope":759,"src":"1778:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":747,"indexed":false,"mutability":"mutable","name":"maturityTime","nameLocation":"1819:12:3","nodeType":"VariableDeclaration","scope":759,"src":"1811:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1811:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"1849:10:3","nodeType":"VariableDeclaration","scope":759,"src":"1841:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":751,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"1877:16:3","nodeType":"VariableDeclaration","scope":759,"src":"1869:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1869:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"1908:6:3","nodeType":"VariableDeclaration","scope":759,"src":"1903:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":752,"name":"bool","nodeType":"ElementaryTypeName","src":"1903:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":755,"indexed":false,"mutability":"mutable","name":"baseProceeds","nameLocation":"1932:12:3","nodeType":"VariableDeclaration","scope":759,"src":"1924:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":757,"indexed":false,"mutability":"mutable","name":"bondAmount","nameLocation":"1962:10:3","nodeType":"VariableDeclaration","scope":759,"src":"1954:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1736:242:3"},"src":"1721:258:3"},{"anonymous":false,"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"1985:51:3","text":"@notice Emitted when a long position is closed."},"eventSelector":"c0e1704f2ff88686bdc2a73d31e0dc4e054eddbdc3564af7a148229cf857b802","id":778,"name":"CloseLong","nameLocation":"2047:9:3","nodeType":"EventDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"indexed":true,"mutability":"mutable","name":"trader","nameLocation":"2082:6:3","nodeType":"VariableDeclaration","scope":778,"src":"2066:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"2114:11:3","nodeType":"VariableDeclaration","scope":778,"src":"2098:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2098:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"2151:7:3","nodeType":"VariableDeclaration","scope":778,"src":"2135:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":768,"indexed":false,"mutability":"mutable","name":"maturityTime","nameLocation":"2176:12:3","nodeType":"VariableDeclaration","scope":778,"src":"2168:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":770,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"2206:10:3","nodeType":"VariableDeclaration","scope":778,"src":"2198:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":772,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"2234:16:3","nodeType":"VariableDeclaration","scope":778,"src":"2226:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":774,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"2265:6:3","nodeType":"VariableDeclaration","scope":778,"src":"2260:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2260:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":776,"indexed":false,"mutability":"mutable","name":"bondAmount","nameLocation":"2289:10:3","nodeType":"VariableDeclaration","scope":778,"src":"2281:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2056:249:3"},"src":"2041:265:3"},{"anonymous":false,"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"2312:52:3","text":"@notice Emitted when a short position is closed."},"eventSelector":"cb02fec44af7356703a283b87ccec63f4ea688efc67fee9cdc1834a93260c730","id":799,"name":"CloseShort","nameLocation":"2375:10:3","nodeType":"EventDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"indexed":true,"mutability":"mutable","name":"trader","nameLocation":"2411:6:3","nodeType":"VariableDeclaration","scope":799,"src":"2395:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":783,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"2443:11:3","nodeType":"VariableDeclaration","scope":799,"src":"2427:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"2480:7:3","nodeType":"VariableDeclaration","scope":799,"src":"2464:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"2464:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":787,"indexed":false,"mutability":"mutable","name":"maturityTime","nameLocation":"2505:12:3","nodeType":"VariableDeclaration","scope":799,"src":"2497:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"indexed":false,"mutability":"mutable","name":"baseAmount","nameLocation":"2535:10:3","nodeType":"VariableDeclaration","scope":799,"src":"2527:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"2527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":791,"indexed":false,"mutability":"mutable","name":"vaultShareAmount","nameLocation":"2563:16:3","nodeType":"VariableDeclaration","scope":799,"src":"2555:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2555:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":793,"indexed":false,"mutability":"mutable","name":"asBase","nameLocation":"2594:6:3","nodeType":"VariableDeclaration","scope":799,"src":"2589:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":792,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":795,"indexed":false,"mutability":"mutable","name":"basePayment","nameLocation":"2618:11:3","nodeType":"VariableDeclaration","scope":799,"src":"2610:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":797,"indexed":false,"mutability":"mutable","name":"bondAmount","nameLocation":"2647:10:3","nodeType":"VariableDeclaration","scope":799,"src":"2639:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2639:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2385:278:3"},"src":"2369:295:3"},{"anonymous":false,"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"2670:49:3","text":"@notice Emitted when a checkpoint is created."},"eventSelector":"ff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab7","id":814,"name":"CreateCheckpoint","nameLocation":"2730:16:3","nodeType":"EventDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"indexed":true,"mutability":"mutable","name":"checkpointTime","nameLocation":"2772:14:3","nodeType":"VariableDeclaration","scope":814,"src":"2756:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":804,"indexed":false,"mutability":"mutable","name":"checkpointVaultSharePrice","nameLocation":"2804:25:3","nodeType":"VariableDeclaration","scope":814,"src":"2796:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"indexed":false,"mutability":"mutable","name":"vaultSharePrice","nameLocation":"2847:15:3","nodeType":"VariableDeclaration","scope":814,"src":"2839:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2839:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"indexed":false,"mutability":"mutable","name":"maturedShorts","nameLocation":"2880:13:3","nodeType":"VariableDeclaration","scope":814,"src":"2872:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2872:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":810,"indexed":false,"mutability":"mutable","name":"maturedLongs","nameLocation":"2911:12:3","nodeType":"VariableDeclaration","scope":814,"src":"2903:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"indexed":false,"mutability":"mutable","name":"lpSharePrice","nameLocation":"2941:12:3","nodeType":"VariableDeclaration","scope":814,"src":"2933:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2933:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2746:213:3"},"src":"2724:236:3"},{"anonymous":false,"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"2966:55:3","text":"@notice Emitted when governance fees are collected."},"eventSelector":"a4bafc79b3f9fdba2427cd386f1fbc7d8779e9fd7229f6220d53bc04d3901e47","id":821,"name":"CollectGovernanceFee","nameLocation":"3032:20:3","nodeType":"EventDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"indexed":true,"mutability":"mutable","name":"collector","nameLocation":"3069:9:3","nodeType":"VariableDeclaration","scope":821,"src":"3053:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"indexed":false,"mutability":"mutable","name":"fees","nameLocation":"3088:4:3","nodeType":"VariableDeclaration","scope":821,"src":"3080:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"3080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:41:3"},"src":"3026:68:3"},{"anonymous":false,"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"3100:62:3","text":"@notice Emitted when the fee collector address is updated."},"eventSelector":"e5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f","id":826,"name":"FeeCollectorUpdated","nameLocation":"3173:19:3","nodeType":"EventDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"indexed":true,"mutability":"mutable","name":"newFeeCollector","nameLocation":"3209:15:3","nodeType":"VariableDeclaration","scope":826,"src":"3193:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3192:33:3"},"src":"3167:59:3"},{"anonymous":false,"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"3232:64:3","text":"@notice Emitted when the sweep collector address is updated."},"eventSelector":"c049058b1df2dd8902739ceb78992df12fa8369c06c450b3c6787137b452fdd2","id":831,"name":"SweepCollectorUpdated","nameLocation":"3307:21:3","nodeType":"EventDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"indexed":true,"mutability":"mutable","name":"newSweepCollector","nameLocation":"3345:17:3","nodeType":"VariableDeclaration","scope":831,"src":"3329:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3328:35:3"},"src":"3301:63:3"},{"anonymous":false,"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"3370:59:3","text":"@notice Emitted when the governance address is updated."},"eventSelector":"9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab","id":836,"name":"GovernanceUpdated","nameLocation":"3440:17:3","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"indexed":true,"mutability":"mutable","name":"newGovernance","nameLocation":"3474:13:3","nodeType":"VariableDeclaration","scope":836,"src":"3458:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"3458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3457:31:3"},"src":"3434:55:3"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"3495:45:3","text":"@notice Emitted when a pauser is updated."},"eventSelector":"902923dcd4814f6cef7005a70e01d5cf2035ab02d4523ef3b865f1d7bab885af","id":843,"name":"PauserUpdated","nameLocation":"3551:13:3","nodeType":"EventDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"newPauser","nameLocation":"3581:9:3","nodeType":"VariableDeclaration","scope":843,"src":"3565:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"3565:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"3597:6:3","nodeType":"VariableDeclaration","scope":843,"src":"3592:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":840,"name":"bool","nodeType":"ElementaryTypeName","src":"3592:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3564:40:3"},"src":"3545:60:3"},{"anonymous":false,"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"3611:53:3","text":"@notice Emitted when the pause status is updated."},"eventSelector":"7c4d1fe30fdbfda9e9c4c43e759ef32e4db5128d4cb58ff3ae9583b89b6242a5","id":848,"name":"PauseStatusUpdated","nameLocation":"3675:18:3","nodeType":"EventDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"indexed":false,"mutability":"mutable","name":"isPaused","nameLocation":"3699:8:3","nodeType":"VariableDeclaration","scope":848,"src":"3694:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":845,"name":"bool","nodeType":"ElementaryTypeName","src":"3694:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3693:15:3"},"src":"3669:40:3"},{"anonymous":false,"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"3715:42:3","text":"@notice Emitted when tokens are swept."},"eventSelector":"951f51ee88c8e42633698bba90d1e53c0954470938036879e691c0232b47e096","id":855,"name":"Sweep","nameLocation":"3768:5:3","nodeType":"EventDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"indexed":true,"mutability":"mutable","name":"collector","nameLocation":"3790:9:3","nodeType":"VariableDeclaration","scope":855,"src":"3774:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"3774:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"3817:6:3","nodeType":"VariableDeclaration","scope":855,"src":"3801:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"3801:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3773:51:3"},"src":"3762:63:3"}],"scope":857,"src":"126:3701:3","usedErrors":[],"usedEvents":[674,689,708,723,740,759,778,799,814,821,826,831,836,843,848,855,1083,1092,1101]}],"src":"39:3789:3"},"id":3},"contracts/src/interfaces/IHyperdriveRead.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IHyperdriveRead.sol","exportedSymbols":{"IHyperdrive":[462],"IHyperdriveRead":[958],"IMultiTokenRead":[1190]},"id":959,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:4"},{"absolutePath":"contracts/src/interfaces/IHyperdrive.sol","file":"./IHyperdrive.sol","id":860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":959,"sourceUnit":463,"src":"64:48:4","symbolAliases":[{"foreign":{"id":859,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"73:11:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IMultiTokenRead.sol","file":"./IMultiTokenRead.sol","id":862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":959,"sourceUnit":1191,"src":"113:56:4","symbolAliases":[{"foreign":{"id":861,"name":"IMultiTokenRead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"122:15:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":863,"name":"IMultiTokenRead","nameLocations":["200:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":1190,"src":"200:15:4"},"id":864,"nodeType":"InheritanceSpecifier","src":"200:15:4"}],"canonicalName":"IHyperdriveRead","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":958,"linearizedBaseContracts":[958,1190],"name":"IHyperdriveRead","nameLocation":"181:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"222:74:4","text":"@notice Gets the instance's name.\n @return The instance's name."},"functionSelector":"06fdde03","id":870,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"310:4:4","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"314:2:4"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"340:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":867,"name":"string","nodeType":"ElementaryTypeName","src":"340:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"339:15:4"},"scope":958,"src":"301:54:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"361:80:4","text":"@notice Gets the instance's version.\n @return The instance's version."},"functionSelector":"54fd4d50","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"455:7:4","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"462:2:4"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"488:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"488:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"487:15:4"},"scope":958,"src":"446:57:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"509:82:4","text":"@notice Gets the Hyperdrive pool's base token.\n @return The base token."},"functionSelector":"c55dae63","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"baseToken","nameLocation":"605:9:4","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"614:2:4"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"640:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:9:4"},"scope":958,"src":"596:53:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"655:98:4","text":"@notice Gets the Hyperdrive pool's vault shares token.\n @return The vault shares token."},"functionSelector":"0a4e1493","id":888,"implemented":false,"kind":"function","modifiers":[],"name":"vaultSharesToken","nameLocation":"767:16:4","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"783:2:4"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":888,"src":"809:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"808:9:4"},"scope":958,"src":"758:60:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"824:131:4","text":"@notice Gets one of the pool's checkpoints.\n @param _checkpointTime The checkpoint time.\n @return The checkpoint."},"functionSelector":"20fc4881","id":897,"implemented":false,"kind":"function","modifiers":[],"name":"getCheckpoint","nameLocation":"969:13:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"_checkpointTime","nameLocation":"1000:15:4","nodeType":"VariableDeclaration","scope":897,"src":"992:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"982:39:4"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":897,"src":"1045:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$156_memory_ptr","typeString":"struct IHyperdrive.Checkpoint"},"typeName":{"id":894,"nodeType":"UserDefinedTypeName","pathNode":{"id":893,"name":"IHyperdrive.Checkpoint","nameLocations":["1045:11:4","1057:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":156,"src":"1045:22:4"},"referencedDeclaration":156,"src":"1045:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$156_storage_ptr","typeString":"struct IHyperdrive.Checkpoint"}},"visibility":"internal"}],"src":"1044:31:4"},"scope":958,"src":"960:116:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"1082:222:4","text":"@notice Gets the pool's exposure from a checkpoint. This is the number\n         of non-netted longs in the checkpoint.\n @param _checkpointTime The checkpoint time.\n @return The checkpoint exposure."},"functionSelector":"cf210e65","id":905,"implemented":false,"kind":"function","modifiers":[],"name":"getCheckpointExposure","nameLocation":"1318:21:4","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"_checkpointTime","nameLocation":"1357:15:4","nodeType":"VariableDeclaration","scope":905,"src":"1349:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1339:39:4"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":905,"src":"1402:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":902,"name":"int256","nodeType":"ElementaryTypeName","src":"1402:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1401:8:4"},"scope":958,"src":"1309:101:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"1416:102:4","text":"@notice Gets the pool's state relating to the Hyperdrive market.\n @return The market state."},"functionSelector":"d8165743","id":912,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketState","nameLocation":"1532:14:4","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"1546:2:4"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"1596:30:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MarketState_$152_memory_ptr","typeString":"struct IHyperdrive.MarketState"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"IHyperdrive.MarketState","nameLocations":["1596:11:4","1608:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":152,"src":"1596:23:4"},"referencedDeclaration":152,"src":"1596:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_MarketState_$152_storage_ptr","typeString":"struct IHyperdrive.MarketState"}},"visibility":"internal"}],"src":"1595:32:4"},"scope":958,"src":"1523:105:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"1634:93:4","text":"@notice Gets the pool's configuration parameters.\n @return The pool configuration."},"functionSelector":"b0d96580","id":919,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfig","nameLocation":"1741:13:4","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"1754:2:4"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":919,"src":"1804:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolConfig_$265_memory_ptr","typeString":"struct IHyperdrive.PoolConfig"},"typeName":{"id":916,"nodeType":"UserDefinedTypeName","pathNode":{"id":915,"name":"IHyperdrive.PoolConfig","nameLocations":["1804:11:4","1816:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":265,"src":"1804:22:4"},"referencedDeclaration":265,"src":"1804:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_PoolConfig_$265_storage_ptr","typeString":"struct IHyperdrive.PoolConfig"}},"visibility":"internal"}],"src":"1803:31:4"},"scope":958,"src":"1732:103:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"1841:158:4","text":"@notice Gets info about the pool's reserves and other state that is\n         important to evaluate potential trades.\n @return The pool info."},"functionSelector":"60246c88","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolInfo","nameLocation":"2013:11:4","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"2024:2:4"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2050:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$311_memory_ptr","typeString":"struct IHyperdrive.PoolInfo"},"typeName":{"id":923,"nodeType":"UserDefinedTypeName","pathNode":{"id":922,"name":"IHyperdrive.PoolInfo","nameLocations":["2050:11:4","2062:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":311,"src":"2050:20:4"},"referencedDeclaration":311,"src":"2050:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$311_storage_ptr","typeString":"struct IHyperdrive.PoolInfo"}},"visibility":"internal"}],"src":"2049:29:4"},"scope":958,"src":"2004:75:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"2085:134:4","text":"@notice Gets the amount of governance fees that haven't been collected.\n @return The amount of uncollected governance fees."},"functionSelector":"c69e16ad","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"getUncollectedGovernanceFees","nameLocation":"2233:28:4","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"2261:2:4"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"2287:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:9:4"},"scope":958,"src":"2224:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"2302:271:4","text":"@notice Gets information relating to the pool's withdrawal pool. This\n         includes the total proceeds underlying the withdrawal pool and\n         the number of withdrawal shares ready to be redeemed.\n @return The withdrawal pool information."},"functionSelector":"fba56008","id":939,"implemented":false,"kind":"function","modifiers":[],"name":"getWithdrawPool","nameLocation":"2587:15:4","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"2602:2:4"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"2652:31:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawPool_$163_memory_ptr","typeString":"struct IHyperdrive.WithdrawPool"},"typeName":{"id":936,"nodeType":"UserDefinedTypeName","pathNode":{"id":935,"name":"IHyperdrive.WithdrawPool","nameLocations":["2652:11:4","2664:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":163,"src":"2652:24:4"},"referencedDeclaration":163,"src":"2652:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawPool_$163_storage_ptr","typeString":"struct IHyperdrive.WithdrawPool"}},"visibility":"internal"}],"src":"2651:33:4"},"scope":958,"src":"2578:107:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"2691:162:4","text":"@notice Gets an account's pauser status within the Hyperdrive pool.\n @param _account The account to check.\n @return The account's pauser status."},"functionSelector":"46fbf68e","id":947,"implemented":false,"kind":"function","modifiers":[],"name":"isPauser","nameLocation":"2867:8:4","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"_account","nameLocation":"2884:8:4","nodeType":"VariableDeclaration","scope":947,"src":"2876:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"2876:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2875:18:4"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"2917:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":944,"name":"bool","nodeType":"ElementaryTypeName","src":"2917:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2916:6:4"},"scope":958,"src":"2858:65:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"2929:292:4","text":"@notice Gets the storage values at the specified slots.\n @dev This serves as a generalized getter that allows consumers to create\n      custom getters to suit their purposes.\n @param _slots The storage slots to load.\n @return The values at the specified slots."},"functionSelector":"becee9c3","id":957,"implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"3235:4:4","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"_slots","nameLocation":"3268:6:4","nodeType":"VariableDeclaration","scope":957,"src":"3249:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"3249:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":950,"nodeType":"ArrayTypeName","src":"3249:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3239:41:4"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":957,"src":"3304:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3304:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":954,"nodeType":"ArrayTypeName","src":"3304:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3303:18:4"},"scope":958,"src":"3226:96:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":959,"src":"171:3153:4","usedErrors":[],"usedEvents":[]}],"src":"39:3286:4"},"id":4},"contracts/src/interfaces/IMultiToken.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IMultiToken.sol","exportedSymbols":{"IMultiToken":[977],"IMultiTokenCore":[1068],"IMultiTokenEvents":[1102],"IMultiTokenMetadata":[1117],"IMultiTokenRead":[1190]},"id":978,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":960,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:5"},{"absolutePath":"contracts/src/interfaces/IMultiTokenCore.sol","file":"./IMultiTokenCore.sol","id":962,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":978,"sourceUnit":1069,"src":"64:56:5","symbolAliases":[{"foreign":{"id":961,"name":"IMultiTokenCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"73:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IMultiTokenEvents.sol","file":"./IMultiTokenEvents.sol","id":964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":978,"sourceUnit":1103,"src":"121:60:5","symbolAliases":[{"foreign":{"id":963,"name":"IMultiTokenEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"130:17:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IMultiTokenMetadata.sol","file":"./IMultiTokenMetadata.sol","id":966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":978,"sourceUnit":1118,"src":"182:64:5","symbolAliases":[{"foreign":{"id":965,"name":"IMultiTokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"191:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/interfaces/IMultiTokenRead.sol","file":"./IMultiTokenRead.sol","id":968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":978,"sourceUnit":1191,"src":"247:56:5","symbolAliases":[{"foreign":{"id":967,"name":"IMultiTokenRead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"256:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":969,"name":"IMultiTokenEvents","nameLocations":["334:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"334:17:5"},"id":970,"nodeType":"InheritanceSpecifier","src":"334:17:5"},{"baseName":{"id":971,"name":"IMultiTokenRead","nameLocations":["357:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1190,"src":"357:15:5"},"id":972,"nodeType":"InheritanceSpecifier","src":"357:15:5"},{"baseName":{"id":973,"name":"IMultiTokenCore","nameLocations":["378:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1068,"src":"378:15:5"},"id":974,"nodeType":"InheritanceSpecifier","src":"378:15:5"},{"baseName":{"id":975,"name":"IMultiTokenMetadata","nameLocations":["399:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1117,"src":"399:19:5"},"id":976,"nodeType":"InheritanceSpecifier","src":"399:19:5"}],"canonicalName":"IMultiToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":977,"linearizedBaseContracts":[977,1117,1068,1190,1102],"name":"IMultiToken","nameLocation":"315:11:5","nodeType":"ContractDefinition","nodes":[],"scope":978,"src":"305:116:5","usedErrors":[],"usedEvents":[1083,1092,1101]}],"src":"39:383:5"},"id":5},"contracts/src/interfaces/IMultiTokenCore.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IMultiTokenCore.sol","exportedSymbols":{"IMultiTokenCore":[1068]},"id":1069,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":979,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IMultiTokenCore","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1068,"linearizedBaseContracts":[1068],"name":"IMultiTokenCore","nameLocation":"74:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"96:299:6","text":"@notice Transfers an amount of assets from the source to the destination.\n @param tokenID The token identifier.\n @param from The address whose balance will be reduced.\n @param to The address whose balance will be increased.\n @param amount The amount of token to move."},"functionSelector":"1c0f12b6","id":991,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"409:12:6","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"tokenID","nameLocation":"439:7:6","nodeType":"VariableDeclaration","scope":991,"src":"431:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"from","nameLocation":"464:4:6","nodeType":"VariableDeclaration","scope":991,"src":"456:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"to","nameLocation":"486:2:6","nodeType":"VariableDeclaration","scope":991,"src":"478:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"amount","nameLocation":"506:6:6","nodeType":"VariableDeclaration","scope":991,"src":"498:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"421:97:6"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"527:0:6"},"scope":1068,"src":"400:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"534:414:6","text":"@notice Permissioned transfer for the bridge to access, only callable by\n         the ERC20 linking bridge.\n @param tokenID The token identifier.\n @param from The address whose balance will be reduced.\n @param to The address whose balance will be increased.\n @param amount The amount of token to move.\n @param caller The msg.sender or the caller of the ERC20Forwarder."},"functionSelector":"e44808bc","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromBridge","nameLocation":"962:18:6","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"tokenID","nameLocation":"998:7:6","nodeType":"VariableDeclaration","scope":1005,"src":"990:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"from","nameLocation":"1023:4:6","nodeType":"VariableDeclaration","scope":1005,"src":"1015:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"to","nameLocation":"1045:2:6","nodeType":"VariableDeclaration","scope":1005,"src":"1037:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"1037:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"amount","nameLocation":"1065:6:6","nodeType":"VariableDeclaration","scope":1005,"src":"1057:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"caller","nameLocation":"1089:6:6","nodeType":"VariableDeclaration","scope":1005,"src":"1081:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"980:121:6"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[],"src":"1110:0:6"},"scope":1068,"src":"953:158:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"1117:419:6","text":"@notice Allows a user to set an approval for an individual asset with\n         specific amount.\n @param tokenID The asset to approve the use of.\n @param operator The address who will be able to use the tokens.\n @param amount The max tokens the approved person can use, setting to\n        uint256.max will cause the value to never decrement (saving gas\n        on transfer)."},"functionSelector":"9cd241af","id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"setApproval","nameLocation":"1550:11:6","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"tokenID","nameLocation":"1579:7:6","nodeType":"VariableDeclaration","scope":1015,"src":"1571:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"operator","nameLocation":"1604:8:6","nodeType":"VariableDeclaration","scope":1015,"src":"1596:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"amount","nameLocation":"1630:6:6","nodeType":"VariableDeclaration","scope":1015,"src":"1622:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1561:81:6"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"1651:0:6"},"scope":1068,"src":"1541:111:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"1658:496:6","text":"@notice Allows the compatibility linking contract to forward calls to\n         set asset approvals.\n @param tokenID The asset to approve the use of.\n @param operator The address who will be able to use the tokens.\n @param amount The max tokens the approved person can use, setting to\n        uint256.max will cause the value to never decrement [saving gas\n        on transfer].\n @param caller The eth address which called the linking contract."},"functionSelector":"4ed2d6ac","id":1027,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalBridge","nameLocation":"2168:17:6","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"tokenID","nameLocation":"2203:7:6","nodeType":"VariableDeclaration","scope":1027,"src":"2195:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2195:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"operator","nameLocation":"2228:8:6","nodeType":"VariableDeclaration","scope":1027,"src":"2220:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"2220:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"amount","nameLocation":"2254:6:6","nodeType":"VariableDeclaration","scope":1027,"src":"2246:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2246:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"caller","nameLocation":"2278:6:6","nodeType":"VariableDeclaration","scope":1027,"src":"2270:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2185:105:6"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[],"src":"2299:0:6"},"scope":1068,"src":"2159:141:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"2306:221:6","text":"@notice Allows a user to approve an operator to use all of their assets.\n @param operator The eth address which can access the caller's assets.\n @param approved True to approve, false to remove approval."},"functionSelector":"a22cb465","id":1035,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2541:17:6","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"operator","nameLocation":"2567:8:6","nodeType":"VariableDeclaration","scope":1035,"src":"2559:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"2559:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"approved","nameLocation":"2582:8:6","nodeType":"VariableDeclaration","scope":1035,"src":"2577:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"2577:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2558:33:6"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"2600:0:6"},"scope":1068,"src":"2532:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"2607:276:6","text":"@notice Transfers several assets from one account to another.\n @param from The source account.\n @param to The destination account.\n @param ids The array of token ids of the asset to transfer.\n @param values The amount of each token to transfer."},"functionSelector":"17fad7fc","id":1049,"implemented":false,"kind":"function","modifiers":[],"name":"batchTransferFrom","nameLocation":"2897:17:6","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"from","nameLocation":"2932:4:6","nodeType":"VariableDeclaration","scope":1049,"src":"2924:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"2924:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"to","nameLocation":"2954:2:6","nodeType":"VariableDeclaration","scope":1049,"src":"2946:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"2946:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"ids","nameLocation":"2985:3:6","nodeType":"VariableDeclaration","scope":1049,"src":"2966:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2966:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ArrayTypeName","src":"2966:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"values","nameLocation":"3017:6:6","nodeType":"VariableDeclaration","scope":1049,"src":"2998:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1045,"nodeType":"ArrayTypeName","src":"2998:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2914:115:6"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"3038:0:6"},"scope":1068,"src":"2888:151:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"3045:1174:6","text":"@notice Allows a caller who is not the owner of an account to execute the\n         functionality of 'approve' for all assets with the owner's\n         signature.\n @param owner The owner of the account which is having the new approval set.\n @param spender The address which will be allowed to spend owner's tokens.\n @param _approved A boolean of the approval status to set to.\n @param deadline The timestamp which the signature must be submitted by\n        to be valid.\n @param v Extra ECDSA data which allows public key recovery from\n        signature assumed to be 27 or 28.\n @param r The r component of the ECDSA signature.\n @param s The s component of the ECDSA signature.\n @dev The signature for this function follows EIP 712 standard and should\n      be generated with the eth_signTypedData JSON RPC call instead of\n      the eth_sign JSON RPC call. If using out of date parity signing\n      libraries the v component may need to be adjusted. Also it is very\n      rare but possible for v to be other values, those values are not\n      supported."},"functionSelector":"9032c726","id":1067,"implemented":false,"kind":"function","modifiers":[],"name":"permitForAll","nameLocation":"4233:12:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"owner","nameLocation":"4263:5:6","nodeType":"VariableDeclaration","scope":1067,"src":"4255:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"4255:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"spender","nameLocation":"4286:7:6","nodeType":"VariableDeclaration","scope":1067,"src":"4278:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"4278:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"_approved","nameLocation":"4308:9:6","nodeType":"VariableDeclaration","scope":1067,"src":"4303:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1055,"name":"bool","nodeType":"ElementaryTypeName","src":"4303:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"deadline","nameLocation":"4335:8:6","nodeType":"VariableDeclaration","scope":1067,"src":"4327:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"v","nameLocation":"4359:1:6","nodeType":"VariableDeclaration","scope":1067,"src":"4353:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1059,"name":"uint8","nodeType":"ElementaryTypeName","src":"4353:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"r","nameLocation":"4378:1:6","nodeType":"VariableDeclaration","scope":1067,"src":"4370:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4370:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"s","nameLocation":"4397:1:6","nodeType":"VariableDeclaration","scope":1067,"src":"4389:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4389:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4245:159:6"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"4413:0:6"},"scope":1068,"src":"4224:190:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1069,"src":"64:4352:6","usedErrors":[],"usedEvents":[]}],"src":"39:4378:6"},"id":6},"contracts/src/interfaces/IMultiTokenEvents.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IMultiTokenEvents.sol","exportedSymbols":{"IMultiTokenEvents":[1102]},"id":1103,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1070,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IMultiTokenEvents","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":1102,"linearizedBaseContracts":[1102],"name":"IMultiTokenEvents","nameLocation":"74:17:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"98:76:7","text":"@notice Emitted when tokens are transferred from one account to another."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1083,"name":"TransferSingle","nameLocation":"185:14:7","nodeType":"EventDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"225:8:7","nodeType":"VariableDeclaration","scope":1083,"src":"209:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1075,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"259:4:7","nodeType":"VariableDeclaration","scope":1083,"src":"243:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"289:2:7","nodeType":"VariableDeclaration","scope":1083,"src":"273:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"309:2:7","nodeType":"VariableDeclaration","scope":1083,"src":"301:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1081,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"329:5:7","nodeType":"VariableDeclaration","scope":1083,"src":"321:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"199:141:7"},"src":"179:162:7"},{"anonymous":false,"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"347:94:7","text":"@notice Emitted when an account changes the allowance for another\n         account."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1092,"name":"Approval","nameLocation":"452:8:7","nodeType":"EventDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"486:5:7","nodeType":"VariableDeclaration","scope":1092,"src":"470:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1088,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"517:7:7","nodeType":"VariableDeclaration","scope":1092,"src":"501:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"542:5:7","nodeType":"VariableDeclaration","scope":1092,"src":"534:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"534:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"460:93:7"},"src":"446:108:7"},{"anonymous":false,"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"560:95:7","text":"@notice Emitted when an account changes the approval for all of its\n         tokens."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1101,"name":"ApprovalForAll","nameLocation":"666:14:7","nodeType":"EventDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"706:7:7","nodeType":"VariableDeclaration","scope":1101,"src":"690:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"739:8:7","nodeType":"VariableDeclaration","scope":1101,"src":"723:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"762:8:7","nodeType":"VariableDeclaration","scope":1101,"src":"757:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"757:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"680:96:7"},"src":"660:117:7"}],"scope":1103,"src":"64:715:7","usedErrors":[],"usedEvents":[1083,1092,1101]}],"src":"39:741:7"},"id":7},"contracts/src/interfaces/IMultiTokenMetadata.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IMultiTokenMetadata.sol","exportedSymbols":{"IMultiTokenMetadata":[1117]},"id":1118,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1104,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IMultiTokenMetadata","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1117,"linearizedBaseContracts":[1117],"name":"IMultiTokenMetadata","nameLocation":"74:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"100:124:8","text":"@notice Gets the EIP712 permit typehash of the MultiToken.\n @return The EIP712 permit typehash of the MultiToken."},"functionSelector":"30adf81f","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nameLocation":"281:15:8","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"296:2:8"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"322:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"322:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"321:9:8"},"scope":1117,"src":"272:59:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"337:126:8","text":"@notice Gets the EIP712 domain separator of the MultiToken.\n @return The EIP712 domain separator of the MultiToken."},"functionSelector":"f698da25","id":1116,"implemented":false,"kind":"function","modifiers":[],"name":"domainSeparator","nameLocation":"477:15:8","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"492:2:8"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"518:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"518:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"517:9:8"},"scope":1117,"src":"468:59:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1118,"src":"64:465:8","usedErrors":[],"usedEvents":[]}],"src":"39:491:8"},"id":8},"contracts/src/interfaces/IMultiTokenRead.sol":{"ast":{"absolutePath":"contracts/src/interfaces/IMultiTokenRead.sol","exportedSymbols":{"IMultiTokenRead":[1190]},"id":1191,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1119,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IMultiTokenRead","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1190,"linearizedBaseContracts":[1190],"name":"IMultiTokenRead","nameLocation":"74:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"96:96:9","text":"@notice Gets the decimals of the MultiToken.\n @return The decimals of the MultiToken."},"functionSelector":"313ce567","id":1125,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"206:8:9","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"214:2:9"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"240:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1122,"name":"uint8","nodeType":"ElementaryTypeName","src":"240:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"239:7:9"},"scope":1190,"src":"197:50:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"253:129:9","text":"@notice Gets the name of the MultiToken.\n @param tokenId The sub-token ID.\n @return The name of the MultiToken."},"functionSelector":"00ad800c","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"396:4:9","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"tokenId","nameLocation":"409:7:9","nodeType":"VariableDeclaration","scope":1133,"src":"401:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"401:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"400:17:9"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"441:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1130,"name":"string","nodeType":"ElementaryTypeName","src":"441:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"440:15:9"},"scope":1190,"src":"387:69:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"462:133:9","text":"@notice Gets the symbol of the MultiToken.\n @param tokenId The sub-token ID.\n @return The symbol of the MultiToken."},"functionSelector":"4e41a1fb","id":1141,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"609:6:9","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"tokenId","nameLocation":"624:7:9","nodeType":"VariableDeclaration","scope":1141,"src":"616:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"615:17:9"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1141,"src":"656:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1138,"name":"string","nodeType":"ElementaryTypeName","src":"656:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"655:15:9"},"scope":1190,"src":"600:71:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1142,"nodeType":"StructuredDocumentation","src":"677:145:9","text":"@notice Gets the total supply of the MultiToken.\n @param tokenId The sub-token ID.\n @return The total supply of the MultiToken."},"functionSelector":"bd85b039","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"836:11:9","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"tokenId","nameLocation":"856:7:9","nodeType":"VariableDeclaration","scope":1149,"src":"848:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"847:17:9"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"888:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"888:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"887:9:9"},"scope":1190,"src":"827:70:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"903:266:9","text":"@notice Gets the approval-for-all status of a spender on behalf of an\n         owner.\n @param owner The owner of the tokens.\n @param spender The spender of the tokens.\n @return The approval-for-all status of the spender for the owner."},"functionSelector":"e985e9c5","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"1183:16:9","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"owner","nameLocation":"1217:5:9","nodeType":"VariableDeclaration","scope":1159,"src":"1209:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"1209:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"spender","nameLocation":"1240:7:9","nodeType":"VariableDeclaration","scope":1159,"src":"1232:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"1232:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1199:54:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"1277:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1156,"name":"bool","nodeType":"ElementaryTypeName","src":"1277:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1276:6:9"},"scope":1190,"src":"1174:109:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"1289:257:9","text":"@notice Gets the allowance of a spender for a sub-token.\n @param tokenId The sub-token ID.\n @param owner The owner of the tokens.\n @param spender The spender of the tokens.\n @return The allowance of the spender for the owner."},"functionSelector":"21ff32a9","id":1171,"implemented":false,"kind":"function","modifiers":[],"name":"perTokenApprovals","nameLocation":"1560:17:9","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"tokenId","nameLocation":"1595:7:9","nodeType":"VariableDeclaration","scope":1171,"src":"1587:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"owner","nameLocation":"1620:5:9","nodeType":"VariableDeclaration","scope":1171,"src":"1612:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"1612:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"spender","nameLocation":"1643:7:9","nodeType":"VariableDeclaration","scope":1171,"src":"1635:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"1635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1577:79:9"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"1680:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1680:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1679:9:9"},"scope":1190,"src":"1551:138:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1695:187:9","text":"@notice Gets the balance of a spender for a sub-token.\n @param tokenId The sub-token ID.\n @param owner The owner of the tokens.\n @return The balance of the owner."},"functionSelector":"3656eec2","id":1181,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1896:9:9","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"tokenId","nameLocation":"1923:7:9","nodeType":"VariableDeclaration","scope":1181,"src":"1915:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"owner","nameLocation":"1948:5:9","nodeType":"VariableDeclaration","scope":1181,"src":"1940:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"1940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1905:54:9"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1181,"src":"1983:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:9"},"scope":1190,"src":"1887:105:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"1998:142:9","text":"@notice Gets the permit nonce for an account.\n @param owner The owner of the tokens.\n @return The permit nonce of the owner."},"functionSelector":"7ecebe00","id":1189,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2154:6:9","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"owner","nameLocation":"2169:5:9","nodeType":"VariableDeclaration","scope":1189,"src":"2161:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2160:15:9"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1189,"src":"2199:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2198:9:9"},"scope":1190,"src":"2145:63:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1191,"src":"64:2146:9","usedErrors":[],"usedEvents":[]}],"src":"39:2172:9"},"id":9},"contracts/src/libraries/FixedPointMath.sol":{"ast":{"absolutePath":"contracts/src/libraries/FixedPointMath.sol","exportedSymbols":{"FixedPointMath":[1966],"IHyperdrive":[462],"ONE":[1199],"SafeCast":[2139]},"id":1967,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1192,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"40:23:10"},{"absolutePath":"contracts/src/interfaces/IHyperdrive.sol","file":"../interfaces/IHyperdrive.sol","id":1194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1967,"sourceUnit":463,"src":"65:60:10","symbolAliases":[{"foreign":{"id":1193,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"74:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/libraries/SafeCast.sol","file":"./SafeCast.sol","id":1196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1967,"sourceUnit":2140,"src":"126:42:10","symbolAliases":[{"foreign":{"id":1195,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"135:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"constant":true,"id":1199,"mutability":"constant","name":"ONE","nameLocation":"187:3:10","nodeType":"VariableDeclaration","scope":1967,"src":"170:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"170:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"FixedPointMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"200:307:10","text":"@author DELV\n @title FixedPointMath\n @notice A fixed-point math library.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."},"fullyImplemented":true,"id":1966,"linearizedBaseContracts":[1966],"name":"FixedPointMath","nameLocation":"515:14:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1203,"libraryName":{"id":1201,"name":"FixedPointMath","nameLocations":["542:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":1966,"src":"542:14:10"},"nodeType":"UsingForDirective","src":"536:33:10","typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"561:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":1206,"libraryName":{"id":1204,"name":"SafeCast","nameLocations":["580:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"580:8:10"},"nodeType":"UsingForDirective","src":"574:27:10","typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1213,"mutability":"constant","name":"MAX_UINT256","nameLocation":"633:11:10","nodeType":"VariableDeclaration","scope":1966,"src":"607:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"607:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"652:3:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"647:8:10","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"658:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"647:12:10","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}},"visibility":"internal"},{"body":{"id":1226,"nodeType":"Block","src":"1025:429:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1087:361:10","statements":[{"body":{"nodeType":"YulBlock","src":"1300:44:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1325:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1328:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1318:6:10"},"nodeType":"YulFunctionCall","src":"1318:12:10"},"nodeType":"YulExpressionStatement","src":"1318:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"1229:11:10"},{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1253:1:10"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1259:1:10"},{"arguments":[{"name":"MAX_UINT256","nodeType":"YulIdentifier","src":"1266:11:10"},{"name":"y","nodeType":"YulIdentifier","src":"1279:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1262:3:10"},"nodeType":"YulFunctionCall","src":"1262:19:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1256:2:10"},"nodeType":"YulFunctionCall","src":"1256:26:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1249:3:10"},"nodeType":"YulFunctionCall","src":"1249:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1242:6:10"},"nodeType":"YulFunctionCall","src":"1242:42:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1225:3:10"},"nodeType":"YulFunctionCall","src":"1225:60:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1201:6:10"},"nodeType":"YulFunctionCall","src":"1201:98:10"},"nodeType":"YulIf","src":"1198:146:10"},{"nodeType":"YulAssignment","src":"1406:32:10","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1419:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"1422:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1415:3:10"},"nodeType":"YulFunctionCall","src":"1415:9:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"1426:11:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1411:3:10"},"nodeType":"YulFunctionCall","src":"1411:27:10"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"1406:1:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1213,"isOffset":false,"isSlot":false,"src":"1266:11:10","valueSize":1},{"declaration":1220,"isOffset":false,"isSlot":false,"src":"1229:11:10","valueSize":1},{"declaration":1220,"isOffset":false,"isSlot":false,"src":"1426:11:10","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"1259:1:10","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"1419:1:10","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"1253:1:10","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"1279:1:10","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"1422:1:10","valueSize":1},{"declaration":1223,"isOffset":false,"isSlot":false,"src":"1406:1:10","valueSize":1}],"id":1225,"nodeType":"InlineAssembly","src":"1078:370:10"}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"666:227:10","text":"@param x Fixed point number in 1e18 format.\n @param y Fixed point number in 1e18 format.\n @param denominator Fixed point number in 1e18 format.\n @return z The result of x * y / denominator rounded down."},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivDown","nameLocation":"907:10:10","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"x","nameLocation":"935:1:10","nodeType":"VariableDeclaration","scope":1227,"src":"927:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"y","nameLocation":"954:1:10","nodeType":"VariableDeclaration","scope":1227,"src":"946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"denominator","nameLocation":"973:11:10","nodeType":"VariableDeclaration","scope":1227,"src":"965:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"917:73:10"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"z","nameLocation":"1022:1:10","nodeType":"VariableDeclaration","scope":1227,"src":"1014:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1013:11:10"},"scope":1966,"src":"898:556:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"1681:47:10","statements":[{"expression":{"components":[{"arguments":[{"id":1238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1710:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1239,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"1713:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1240,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1716:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1237,"name":"mulDivDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1699:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1699:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1236,"id":1243,"nodeType":"Return","src":"1691:30:10"}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"1460:145:10","text":"@param a Fixed point number in 1e18 format.\n @param b Fixed point number in 1e18 format.\n @return Result of a * b rounded down."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"mulDown","nameLocation":"1619:7:10","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"a","nameLocation":"1635:1:10","nodeType":"VariableDeclaration","scope":1245,"src":"1627:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1627:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"b","nameLocation":"1646:1:10","nodeType":"VariableDeclaration","scope":1245,"src":"1638:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1626:22:10"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1245,"src":"1672:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1672:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1671:9:10"},"scope":1966,"src":"1610:118:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"1955:93:10","statements":[{"expression":{"components":[{"arguments":[{"id":1256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"1984:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1257,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1987:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1992:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1255,"name":"mulDivDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1973:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1973:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1972:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1254,"id":1261,"nodeType":"Return","src":"1965:30:10"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1734:145:10","text":"@param a Fixed point number in 1e18 format.\n @param b Fixed point number in 1e18 format.\n @return Result of a / b rounded down."},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nameLocation":"1893:7:10","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"a","nameLocation":"1909:1:10","nodeType":"VariableDeclaration","scope":1263,"src":"1901:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1901:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"b","nameLocation":"1920:1:10","nodeType":"VariableDeclaration","scope":1263,"src":"1912:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:22:10"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1263,"src":"1946:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1945:9:10"},"scope":1966,"src":"1884:164:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1276,"nodeType":"Block","src":"2409:623:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2471:555:10","statements":[{"body":{"nodeType":"YulBlock","src":"2684:44:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2709:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2712:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2702:6:10"},"nodeType":"YulFunctionCall","src":"2702:12:10"},"nodeType":"YulExpressionStatement","src":"2702:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"2613:11:10"},{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2637:1:10"},{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2643:1:10"},{"arguments":[{"name":"MAX_UINT256","nodeType":"YulIdentifier","src":"2650:11:10"},{"name":"y","nodeType":"YulIdentifier","src":"2663:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2646:3:10"},"nodeType":"YulFunctionCall","src":"2646:19:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2640:2:10"},"nodeType":"YulFunctionCall","src":"2640:26:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2633:3:10"},"nodeType":"YulFunctionCall","src":"2633:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2626:6:10"},"nodeType":"YulFunctionCall","src":"2626:42:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2609:3:10"},"nodeType":"YulFunctionCall","src":"2609:60:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2585:6:10"},"nodeType":"YulFunctionCall","src":"2585:98:10"},"nodeType":"YulIf","src":"2582:146:10"},{"nodeType":"YulAssignment","src":"2897:119:10","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2934:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2937:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2930:3:10"},"nodeType":"YulFunctionCall","src":"2930:9:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"2941:11:10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2926:3:10"},"nodeType":"YulFunctionCall","src":"2926:27:10"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:10","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2923:2:10"},"nodeType":"YulFunctionCall","src":"2923:34:10"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2983:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2986:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2979:3:10"},"nodeType":"YulFunctionCall","src":"2979:9:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"2990:11:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2975:3:10"},"nodeType":"YulFunctionCall","src":"2975:27:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:10"},"nodeType":"YulFunctionCall","src":"2902:114:10"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"2897:1:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1213,"isOffset":false,"isSlot":false,"src":"2650:11:10","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"2613:11:10","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"2941:11:10","valueSize":1},{"declaration":1270,"isOffset":false,"isSlot":false,"src":"2990:11:10","valueSize":1},{"declaration":1266,"isOffset":false,"isSlot":false,"src":"2643:1:10","valueSize":1},{"declaration":1266,"isOffset":false,"isSlot":false,"src":"2934:1:10","valueSize":1},{"declaration":1266,"isOffset":false,"isSlot":false,"src":"2983:1:10","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2637:1:10","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2663:1:10","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2937:1:10","valueSize":1},{"declaration":1268,"isOffset":false,"isSlot":false,"src":"2986:1:10","valueSize":1},{"declaration":1273,"isOffset":false,"isSlot":false,"src":"2897:1:10","valueSize":1}],"id":1275,"nodeType":"InlineAssembly","src":"2462:564:10"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"2054:225:10","text":"@param x Fixed point number in 1e18 format.\n @param y Fixed point number in 1e18 format.\n @param denominator Fixed point number in 1e18 format.\n @return z The result of x * y / denominator rounded up."},"id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivUp","nameLocation":"2293:8:10","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"x","nameLocation":"2319:1:10","nodeType":"VariableDeclaration","scope":1277,"src":"2311:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"y","nameLocation":"2338:1:10","nodeType":"VariableDeclaration","scope":1277,"src":"2330:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"denominator","nameLocation":"2357:11:10","nodeType":"VariableDeclaration","scope":1277,"src":"2349:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2349:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:73:10"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"z","nameLocation":"2406:1:10","nodeType":"VariableDeclaration","scope":1277,"src":"2398:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2398:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2397:11:10"},"scope":1966,"src":"2284:748:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"3259:45:10","statements":[{"expression":{"components":[{"arguments":[{"id":1288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"3286:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3289:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1290,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3292:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"mulDivUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3277:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3277:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3276:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1286,"id":1293,"nodeType":"Return","src":"3269:28:10"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"3038:147:10","text":"@param a Fixed point number in 1e18 format.\n @param b Fixed point number in 1e18 format.\n @return The result of a * b rounded up."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"mulUp","nameLocation":"3199:5:10","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"a","nameLocation":"3213:1:10","nodeType":"VariableDeclaration","scope":1295,"src":"3205:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3205:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"b","nameLocation":"3224:1:10","nodeType":"VariableDeclaration","scope":1295,"src":"3216:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3216:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3204:22:10"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"3250:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3250:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3249:9:10"},"scope":1966,"src":"3190:114:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1312,"nodeType":"Block","src":"3531:45:10","statements":[{"expression":{"components":[{"arguments":[{"id":1306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3558:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1307,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3561:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3566:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"mulDivUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3549:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3549:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3548:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1304,"id":1311,"nodeType":"Return","src":"3541:28:10"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"3310:147:10","text":"@param a Fixed point number in 1e18 format.\n @param b Fixed point number in 1e18 format.\n @return The result of a / b rounded up."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"divUp","nameLocation":"3471:5:10","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"a","nameLocation":"3485:1:10","nodeType":"VariableDeclaration","scope":1313,"src":"3477:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3477:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"b","nameLocation":"3496:1:10","nodeType":"VariableDeclaration","scope":1313,"src":"3488:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3488:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3476:22:10"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"3522:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3522:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3521:9:10"},"scope":1966,"src":"3462:114:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1369,"nodeType":"Block","src":"3878:777:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"3935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3940:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3935:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1329,"nodeType":"IfStatement","src":"3931:47:10","trueBody":{"id":1328,"nodeType":"Block","src":"3943:35:10","statements":[{"expression":{"id":1326,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3964:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1322,"id":1327,"nodeType":"Return","src":"3957:10:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1330,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"4031:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4036:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4031:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1336,"nodeType":"IfStatement","src":"4027:45:10","trueBody":{"id":1335,"nodeType":"Block","src":"4039:33:10","statements":[{"expression":{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4060:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1322,"id":1334,"nodeType":"Return","src":"4053:8:10"}]}},{"assignments":[1338],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"y_int256","nameLocation":"4217:8:10","nodeType":"VariableDeclaration","scope":1369,"src":"4210:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1337,"name":"int256","nodeType":"ElementaryTypeName","src":"4210:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1339,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4228:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4230:8:10","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":2138,"src":"4228:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4228:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4210:30:10"},{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"lnx","nameLocation":"4409:3:10","nodeType":"VariableDeclaration","scope":1369,"src":"4402:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1343,"name":"int256","nodeType":"ElementaryTypeName","src":"4402:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1350,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1346,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"4418:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4420:8:10","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":2138,"src":"4418:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4418:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1345,"name":"ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"4415:2:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4415:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4402:29:10"},{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"ylnx","nameLocation":"4448:4:10","nodeType":"VariableDeclaration","scope":1369,"src":"4441:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1351,"name":"int256","nodeType":"ElementaryTypeName","src":"4441:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1353,"nodeType":"VariableDeclarationStatement","src":"4441:11:10"},{"AST":{"nodeType":"YulBlock","src":"4487:50:10","statements":[{"nodeType":"YulAssignment","src":"4501:26:10","value":{"arguments":[{"name":"y_int256","nodeType":"YulIdentifier","src":"4513:8:10"},{"name":"lnx","nodeType":"YulIdentifier","src":"4523:3:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4509:3:10"},"nodeType":"YulFunctionCall","src":"4509:18:10"},"variableNames":[{"name":"ylnx","nodeType":"YulIdentifier","src":"4501:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1344,"isOffset":false,"isSlot":false,"src":"4523:3:10","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"4513:8:10","valueSize":1},{"declaration":1352,"isOffset":false,"isSlot":false,"src":"4501:4:10","valueSize":1}],"flags":["memory-safe"],"id":1354,"nodeType":"InlineAssembly","src":"4462:75:10"},{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1355,"name":"ylnx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4546:4:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"arguments":[{"id":1358,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"4561:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4554:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1356,"name":"int256","nodeType":"ElementaryTypeName","src":"4554:6:10","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4546:19:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1361,"nodeType":"ExpressionStatement","src":"4546:19:10"},{"expression":{"arguments":[{"arguments":[{"id":1365,"name":"ylnx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4642:4:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1364,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"4638:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4630:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"4630:7:10","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1322,"id":1368,"nodeType":"Return","src":"4623:25:10"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"3582:224:10","text":"@dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\n @param x Fixed point number in 1e18 format.\n @param y Fixed point number in 1e18 format.\n @return The result of x^y."},"id":1370,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"3820:3:10","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"x","nameLocation":"3832:1:10","nodeType":"VariableDeclaration","scope":1370,"src":"3824:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"3824:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"y","nameLocation":"3843:1:10","nodeType":"VariableDeclaration","scope":1370,"src":"3835:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3835:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3823:22:10"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1370,"src":"3869:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"3869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3868:9:10"},"scope":1966,"src":"3811:844:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1566,"nodeType":"Block","src":"4963:3246:10","statements":[{"id":1565,"nodeType":"UncheckedBlock","src":"4973:3230:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"5130:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5135:21:10","subExpression":{"hexValue":"3432313339363738383534343532373637353531","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5136:20:10","typeDescriptions":{"typeIdentifier":"t_rational_42139678854452767551_by_1","typeString":"int_const 42139678854452767551"},"value":"42139678854452767551"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_42139678854452767551_by_1","typeString":"int_const -42139678854452767551"}},"src":"5130:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1384,"nodeType":"IfStatement","src":"5126:40:10","trueBody":{"expression":{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5165:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1377,"id":1383,"nodeType":"Return","src":"5158:8:10"}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"5360:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313335333035393939333638383933323331353839","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5365:21:10","typeDescriptions":{"typeIdentifier":"t_rational_135305999368893231589_by_1","typeString":"int_const 135305999368893231589"},"value":"135305999368893231589"},"src":"5360:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"IfStatement","src":"5356:87:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1388,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"5411:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5423:18:10","memberName":"ExpInvalidExponent","nodeType":"MemberAccess","referencedDeclaration":330,"src":"5411:30:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5411:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"RevertStatement","src":"5404:39:10"}},{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1394,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"5700:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"5705:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3738","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:2:10","typeDescriptions":{"typeIdentifier":"t_rational_78_by_1","typeString":"int_const 78"},"value":"78"},"src":"5705:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5704:9:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3814697265625_by_1","typeString":"int_const 3814697265625"},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5716:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5721:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"5716:7:10","typeDescriptions":{"typeIdentifier":"t_rational_3814697265625_by_1","typeString":"int_const 3814697265625"}},"src":"5704:19:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5700:23:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1404,"nodeType":"ExpressionStatement","src":"5700:23:10"},{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"k","nameLocation":"6059:1:10","nodeType":"VariableDeclaration","scope":1565,"src":"6052:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1405,"name":"int256","nodeType":"ElementaryTypeName","src":"6052:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1420,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6065:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6070:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6065:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6064:9:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3534393136373737343637373037343733333531313431343731313238","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6076:29:10","typeDescriptions":{"typeIdentifier":"t_rational_54916777467707473351141471128_by_1","typeString":"int_const 54916777467707473351141471128"},"value":"54916777467707473351141471128"},"src":"6064:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_rational_39614081257132168796771975168_by_1","typeString":"int_const 39614081257132168796771975168"},"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6108:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3935","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:2:10","typeDescriptions":{"typeIdentifier":"t_rational_95_by_1","typeString":"int_const 95"},"value":"95"},"src":"6108:7:10","typeDescriptions":{"typeIdentifier":"t_rational_39614081257132168796771975168_by_1","typeString":"int_const 39614081257132168796771975168"}},"src":"6064:51:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6063:53:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6136:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6063:75:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6052:86:10"},{"expression":{"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1421,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6152:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6156:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"6160:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3534393136373737343637373037343733333531313431343731313238","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6164:29:10","typeDescriptions":{"typeIdentifier":"t_rational_54916777467707473351141471128_by_1","typeString":"int_const 54916777467707473351141471128"},"value":"54916777467707473351141471128"},"src":"6160:33:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6156:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6152:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1428,"nodeType":"ExpressionStatement","src":"6152:41:10"},{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"y","nameLocation":"6401:1:10","nodeType":"VariableDeclaration","scope":1565,"src":"6394:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1429,"name":"int256","nodeType":"ElementaryTypeName","src":"6394:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1434,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6405:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31333436333836363136353435373936343738393230393530373733333238","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6409:31:10","typeDescriptions":{"typeIdentifier":"t_rational_1346386616545796478920950773328_by_1","typeString":"int_const 1346386616545796478920950773328"},"value":"1346386616545796478920950773328"},"src":"6405:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6394:46:10"},{"expression":{"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6454:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6460:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1437,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6464:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6460:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6459:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6470:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6459:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6458:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3537313535343231323237353532333531303832323234333039373538343432","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6476:32:10","typeDescriptions":{"typeIdentifier":"t_rational_57155421227552351082224309758442_by_1","typeString":"int_const 57155421227552351082224309758442"},"value":"57155421227552351082224309758442"},"src":"6458:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6454:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1446,"nodeType":"ExpressionStatement","src":"6454:54:10"},{"assignments":[1448],"declarations":[{"constant":false,"id":1448,"mutability":"mutable","name":"p","nameLocation":"6529:1:10","nodeType":"VariableDeclaration","scope":1565,"src":"6522:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1447,"name":"int256","nodeType":"ElementaryTypeName","src":"6522:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1454,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6533:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1450,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6537:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6533:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3934323031353439313934353530343932323534333536303432353034383132","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6541:32:10","typeDescriptions":{"typeIdentifier":"t_rational_94201549194550492254356042504812_by_1","typeString":"int_const 94201549194550492254356042504812"},"value":"94201549194550492254356042504812"},"src":"6533:40:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6522:51:10"},{"expression":{"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1455,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6587:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6593:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1457,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6597:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6593:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6592:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6603:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6592:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6591:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3238373139303231363434303239373236313533393536393434363830343132323430","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6609:35:10","typeDescriptions":{"typeIdentifier":"t_rational_28719021644029726153956944680412240_by_1","typeString":"int_const 2871...(27 digits omitted)...2240"},"value":"28719021644029726153956944680412240"},"src":"6591:53:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6587:57:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1466,"nodeType":"ExpressionStatement","src":"6587:57:10"},{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1467,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6658:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6662:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6666:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6662:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1","typeString":"int_const 3474...(55 digits omitted)...0736"},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"34333835323732353231343534383437393034363539303736393835363933323736","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:34:10","typeDescriptions":{"typeIdentifier":"t_rational_4385272521454847904659076985693276_by_1","typeString":"int_const 4385...(26 digits omitted)...3276"},"value":"4385272521454847904659076985693276"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6709:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6671:40:10","typeDescriptions":{"typeIdentifier":"t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1","typeString":"int_const 3474...(55 digits omitted)...0736"}}],"id":1474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6670:42:10","typeDescriptions":{"typeIdentifier":"t_rational_347437083999162433888837515002539729507623920905942392673140736_by_1","typeString":"int_const 3474...(55 digits omitted)...0736"}},"src":"6662:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6658:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1477,"nodeType":"ExpressionStatement","src":"6658:54:10"},{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"q","nameLocation":"6831:1:10","nodeType":"VariableDeclaration","scope":1565,"src":"6824:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1478,"name":"int256","nodeType":"ElementaryTypeName","src":"6824:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1483,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1480,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6835:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32383535393839333934393037323233323633393336343834303539393030","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6839:31:10","typeDescriptions":{"typeIdentifier":"t_rational_2855989394907223263936484059900_by_1","typeString":"int_const 2855989394907223263936484059900"},"value":"2855989394907223263936484059900"},"src":"6835:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"6824:46:10"},{"expression":{"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6884:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1485,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6890:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1486,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6894:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6890:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6889:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6889:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6888:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3530303230363033363532353335373833303139393631383331383831393435","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6906:32:10","typeDescriptions":{"typeIdentifier":"t_rational_50020603652535783019961831881945_by_1","typeString":"int_const 50020603652535783019961831881945"},"value":"50020603652535783019961831881945"},"src":"6888:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6884:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1495,"nodeType":"ExpressionStatement","src":"6884:54:10"},{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1496,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6952:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"6958:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1498,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"6962:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6958:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6957:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6968:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6957:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6956:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"353333383435303333353833343236373033323833363333343333373235333830","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6974:33:10","typeDescriptions":{"typeIdentifier":"t_rational_533845033583426703283633433725380_by_1","typeString":"int_const 5338...(25 digits omitted)...5380"},"value":"533845033583426703283633433725380"},"src":"6956:51:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"6952:55:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1507,"nodeType":"ExpressionStatement","src":"6952:55:10"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1508,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7021:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7027:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1510,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"7031:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7027:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7026:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7037:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"7026:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7025:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"33363034383537323536393330363935343237303733363531393138303931343239","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7043:34:10","typeDescriptions":{"typeIdentifier":"t_rational_3604857256930695427073651918091429_by_1","typeString":"int_const 3604...(26 digits omitted)...1429"},"value":"3604857256930695427073651918091429"},"src":"7025:52:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7021:56:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1519,"nodeType":"ExpressionStatement","src":"7021:56:10"},{"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1520,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7091:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7097:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"7101:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7097:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7096:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7107:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"7096:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7095:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3134343233363038353637333530343633313830383837333732393632383037353733","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7113:35:10","typeDescriptions":{"typeIdentifier":"t_rational_14423608567350463180887372962807573_by_1","typeString":"int_const 1442...(27 digits omitted)...7573"},"value":"14423608567350463180887372962807573"},"src":"7095:53:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7091:57:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1531,"nodeType":"ExpressionStatement","src":"7091:57:10"},{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1532,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7162:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"7168:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1534,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"7172:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7168:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7167:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7178:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"7167:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7166:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3236343439313838343938333535353838333339393334383033373233393736303233","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7184:35:10","typeDescriptions":{"typeIdentifier":"t_rational_26449188498355588339934803723976023_by_1","typeString":"int_const 2644...(27 digits omitted)...6023"},"value":"26449188498355588339934803723976023"},"src":"7166:53:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"7162:57:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1543,"nodeType":"ExpressionStatement","src":"7162:57:10"},{"AST":{"nodeType":"YulBlock","src":"7290:318:10","statements":[{"nodeType":"YulAssignment","src":"7579:15:10","value":{"arguments":[{"name":"p","nodeType":"YulIdentifier","src":"7589:1:10"},{"name":"q","nodeType":"YulIdentifier","src":"7592:1:10"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"7584:4:10"},"nodeType":"YulFunctionCall","src":"7584:10:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7579:1:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1448,"isOffset":false,"isSlot":false,"src":"7589:1:10","valueSize":1},{"declaration":1479,"isOffset":false,"isSlot":false,"src":"7592:1:10","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"7579:1:10","valueSize":1}],"id":1544,"nodeType":"InlineAssembly","src":"7281:327:10"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"8059:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1548,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"8073:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:10","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33383232383333303734393633323336343533303432373338323538393032313538303033313535343136363135363637","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:49:10","typeDescriptions":{"typeIdentifier":"t_rational_3822833074963236453042738258902158003155416615667_by_1","typeString":"int_const 3822...(41 digits omitted)...5667"},"value":"3822833074963236453042738258902158003155416615667"},"src":"8065:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8064:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313935","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8172:3:10","typeDescriptions":{"typeIdentifier":"t_rational_195_by_1","typeString":"int_const 195"},"value":"195"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1556,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"8178:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8172:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8164:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"8164:7:10","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8164:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8064:116:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8063:118:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8182:8:10","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":2138,"src":"8063:127:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8063:129:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8059:133:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1564,"nodeType":"ExpressionStatement","src":"8059:133:10"}]}]},"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"4661:241:10","text":"@dev Computes e^x in 1e18 fixed point.\n @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\n @param x Fixed point number in 1e18 format.\n @return r The result of e^x."},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"exp","nameLocation":"4916:3:10","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"x","nameLocation":"4927:1:10","nodeType":"VariableDeclaration","scope":1567,"src":"4920:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1372,"name":"int256","nodeType":"ElementaryTypeName","src":"4920:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4919:10:10"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"r","nameLocation":"4960:1:10","nodeType":"VariableDeclaration","scope":1567,"src":"4953:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1375,"name":"int256","nodeType":"ElementaryTypeName","src":"4953:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4952:10:10"},"scope":1966,"src":"4907:3302:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1788,"nodeType":"Block","src":"8563:3791:10","statements":[{"id":1787,"nodeType":"UncheckedBlock","src":"8573:3775:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"8601:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8606:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8601:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1584,"nodeType":"IfStatement","src":"8597:80:10","trueBody":{"id":1583,"nodeType":"Block","src":"8609:68:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1578,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8634:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8646:14:10","memberName":"LnInvalidInput","nodeType":"MemberAccess","referencedDeclaration":369,"src":"8634:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8634:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"RevertStatement","src":"8627:35:10"}]}},{"AST":{"nodeType":"YulBlock","src":"9256:489:10","statements":[{"nodeType":"YulAssignment","src":"9274:54:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9283:1:10","type":"","value":"7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9289:34:10","type":"","value":"0xffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"9325:1:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9286:2:10"},"nodeType":"YulFunctionCall","src":"9286:41:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9279:3:10"},"nodeType":"YulFunctionCall","src":"9279:49:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9274:1:10"}]},{"nodeType":"YulAssignment","src":"9345:53:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9353:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9360:1:10","type":"","value":"6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9366:18:10","type":"","value":"0xffffffffffffffff"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9390:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9393:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9386:3:10"},"nodeType":"YulFunctionCall","src":"9386:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9363:2:10"},"nodeType":"YulFunctionCall","src":"9363:33:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9356:3:10"},"nodeType":"YulFunctionCall","src":"9356:41:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9350:2:10"},"nodeType":"YulFunctionCall","src":"9350:48:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9345:1:10"}]},{"nodeType":"YulAssignment","src":"9415:45:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9423:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9430:1:10","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9436:10:10","type":"","value":"0xffffffff"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9452:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9455:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9448:3:10"},"nodeType":"YulFunctionCall","src":"9448:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9433:2:10"},"nodeType":"YulFunctionCall","src":"9433:25:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9426:3:10"},"nodeType":"YulFunctionCall","src":"9426:33:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9420:2:10"},"nodeType":"YulFunctionCall","src":"9420:40:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9415:1:10"}]},{"nodeType":"YulAssignment","src":"9477:41:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9485:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9492:1:10","type":"","value":"4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9498:6:10","type":"","value":"0xffff"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9510:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9513:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9506:3:10"},"nodeType":"YulFunctionCall","src":"9506:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9495:2:10"},"nodeType":"YulFunctionCall","src":"9495:21:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9488:3:10"},"nodeType":"YulFunctionCall","src":"9488:29:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9482:2:10"},"nodeType":"YulFunctionCall","src":"9482:36:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9477:1:10"}]},{"nodeType":"YulAssignment","src":"9535:39:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9543:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9550:1:10","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9556:4:10","type":"","value":"0xff"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9566:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9569:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9562:3:10"},"nodeType":"YulFunctionCall","src":"9562:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9553:2:10"},"nodeType":"YulFunctionCall","src":"9553:19:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9546:3:10"},"nodeType":"YulFunctionCall","src":"9546:27:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9540:2:10"},"nodeType":"YulFunctionCall","src":"9540:34:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9535:1:10"}]},{"nodeType":"YulAssignment","src":"9591:38:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9599:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9606:1:10","type":"","value":"2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9612:3:10","type":"","value":"0xf"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9621:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9624:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9617:3:10"},"nodeType":"YulFunctionCall","src":"9617:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9609:2:10"},"nodeType":"YulFunctionCall","src":"9609:18:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9602:3:10"},"nodeType":"YulFunctionCall","src":"9602:26:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9596:2:10"},"nodeType":"YulFunctionCall","src":"9596:33:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9591:1:10"}]},{"nodeType":"YulAssignment","src":"9646:38:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9654:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9661:1:10","type":"","value":"1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9667:3:10","type":"","value":"0x3"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9676:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9679:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9672:3:10"},"nodeType":"YulFunctionCall","src":"9672:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9664:2:10"},"nodeType":"YulFunctionCall","src":"9664:18:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9657:3:10"},"nodeType":"YulFunctionCall","src":"9657:26:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9651:2:10"},"nodeType":"YulFunctionCall","src":"9651:33:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9646:1:10"}]},{"nodeType":"YulAssignment","src":"9701:30:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9709:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9715:3:10","type":"","value":"0x1"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"9724:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"9727:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9720:3:10"},"nodeType":"YulFunctionCall","src":"9720:9:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9712:2:10"},"nodeType":"YulFunctionCall","src":"9712:18:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9706:2:10"},"nodeType":"YulFunctionCall","src":"9706:25:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9701:1:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9274:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9345:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9353:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9390:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9415:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9423:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9452:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9477:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9485:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9510:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9535:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9543:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9566:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9591:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9599:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9621:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9646:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9654:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9676:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9701:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9709:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"9724:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9325:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9393:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9455:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9513:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9569:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9624:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9679:1:10","valueSize":1},{"declaration":1570,"isOffset":false,"isSlot":false,"src":"9727:1:10","valueSize":1}],"id":1585,"nodeType":"InlineAssembly","src":"9247:498:10"},{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"k","nameLocation":"9864:1:10","nodeType":"VariableDeclaration","scope":1787,"src":"9857:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1586,"name":"int256","nodeType":"ElementaryTypeName","src":"9857:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1591,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"9868:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3936","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9872:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"9868:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"9857:17:10"},{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1592,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9888:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313539","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9902:3:10","typeDescriptions":{"typeIdentifier":"t_rational_159_by_1","typeString":"int_const 159"},"value":"159"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1596,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"9908:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9902:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9894:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:10","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9894:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:22:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1600,"nodeType":"ExpressionStatement","src":"9888:22:10"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9924:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1604,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9937:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"9929:7:10","typeDescriptions":{}}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313539","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9943:3:10","typeDescriptions":{"typeIdentifier":"t_rational_159_by_1","typeString":"int_const 159"},"value":"159"},"src":"9929:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9928:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9948:8:10","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":2138,"src":"9928:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9928:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"9924:34:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1612,"nodeType":"ExpressionStatement","src":"9924:34:10"},{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"p","nameLocation":"10122:1:10","nodeType":"VariableDeclaration","scope":1787,"src":"10115:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1613,"name":"int256","nodeType":"ElementaryTypeName","src":"10115:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1618,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10126:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"33323733323835343539363338353233383438363332323534303636323936","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10130:31:10","typeDescriptions":{"typeIdentifier":"t_rational_3273285459638523848632254066296_by_1","typeString":"int_const 3273285459638523848632254066296"},"value":"3273285459638523848632254066296"},"src":"10126:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10115:46:10"},{"expression":{"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1619,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10175:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10181:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1621,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10185:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10181:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10180:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10191:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10180:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10179:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3234383238313537303831383333313633383932363538303839343435353234","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10197:32:10","typeDescriptions":{"typeIdentifier":"t_rational_24828157081833163892658089445524_by_1","typeString":"int_const 24828157081833163892658089445524"},"value":"24828157081833163892658089445524"},"src":"10179:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10175:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1630,"nodeType":"ExpressionStatement","src":"10175:54:10"},{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1631,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10243:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10249:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1633,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10253:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10249:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10248:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10259:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10248:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10247:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3433343536343835373235373339303337393538373430333735373433333933","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10265:32:10","typeDescriptions":{"typeIdentifier":"t_rational_43456485725739037958740375743393_by_1","typeString":"int_const 43456485725739037958740375743393"},"value":"43456485725739037958740375743393"},"src":"10247:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10243:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1642,"nodeType":"ExpressionStatement","src":"10243:54:10"},{"expression":{"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1643,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10311:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10317:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10321:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10317:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10316:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10327:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10316:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10315:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3131313131353039313039343430393637303532303233383535353236393637","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10333:32:10","typeDescriptions":{"typeIdentifier":"t_rational_11111509109440967052023855526967_by_1","typeString":"int_const 11111509109440967052023855526967"},"value":"11111509109440967052023855526967"},"src":"10315:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10311:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1654,"nodeType":"ExpressionStatement","src":"10311:54:10"},{"expression":{"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1655,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10379:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10385:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1657,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10389:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10385:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10384:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10395:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10384:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10383:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3435303233373039363637323534303633373633333336353334353135383537","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10401:32:10","typeDescriptions":{"typeIdentifier":"t_rational_45023709667254063763336534515857_by_1","typeString":"int_const 45023709667254063763336534515857"},"value":"45023709667254063763336534515857"},"src":"10383:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10379:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1666,"nodeType":"ExpressionStatement","src":"10379:54:10"},{"expression":{"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1667,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10447:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10453:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1669,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10457:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10453:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10452:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10463:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10452:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10451:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3134373036373733343137333738363038373836373034363336313834353236","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10469:32:10","typeDescriptions":{"typeIdentifier":"t_rational_14706773417378608786704636184526_by_1","typeString":"int_const 14706773417378608786704636184526"},"value":"14706773417378608786704636184526"},"src":"10451:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10447:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1678,"nodeType":"ExpressionStatement","src":"10447:54:10"},{"expression":{"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1679,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10515:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"10519:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1681,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10523:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10519:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_62999401287715976015676079709131874438408901006995465699328_by_1","typeString":"int_const 6299...(51 digits omitted)...9328"},"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"373935313634323335363531333530343236323538323439373837343938","id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10528:30:10","typeDescriptions":{"typeIdentifier":"t_rational_795164235651350426258249787498_by_1","typeString":"int_const 795164235651350426258249787498"},"value":"795164235651350426258249787498"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10528:36:10","typeDescriptions":{"typeIdentifier":"t_rational_62999401287715976015676079709131874438408901006995465699328_by_1","typeString":"int_const 6299...(51 digits omitted)...9328"}}],"id":1686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10527:38:10","typeDescriptions":{"typeIdentifier":"t_rational_62999401287715976015676079709131874438408901006995465699328_by_1","typeString":"int_const 6299...(51 digits omitted)...9328"}},"src":"10519:46:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10515:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1689,"nodeType":"ExpressionStatement","src":"10515:50:10"},{"assignments":[1691],"declarations":[{"constant":false,"id":1691,"mutability":"mutable","name":"q","nameLocation":"10725:1:10","nodeType":"VariableDeclaration","scope":1787,"src":"10718:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1690,"name":"int256","nodeType":"ElementaryTypeName","src":"10718:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1695,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1692,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10729:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"35353733303335323333343430363733343636333030343531383133393336","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10733:31:10","typeDescriptions":{"typeIdentifier":"t_rational_5573035233440673466300451813936_by_1","typeString":"int_const 5573035233440673466300451813936"},"value":"5573035233440673466300451813936"},"src":"10729:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10718:46:10"},{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1696,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10778:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1697,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10784:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1698,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10788:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10784:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10783:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10794:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10783:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10782:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3731363934383734373939333137383833373634303930353631343534393538","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10800:32:10","typeDescriptions":{"typeIdentifier":"t_rational_71694874799317883764090561454958_by_1","typeString":"int_const 71694874799317883764090561454958"},"value":"71694874799317883764090561454958"},"src":"10782:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10778:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1707,"nodeType":"ExpressionStatement","src":"10778:54:10"},{"expression":{"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1708,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10846:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10852:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1710,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10856:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10852:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10851:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10862:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10851:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10850:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323833343437303336313732393234353735373237313936343531333036393536","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10868:33:10","typeDescriptions":{"typeIdentifier":"t_rational_283447036172924575727196451306956_by_1","typeString":"int_const 2834...(25 digits omitted)...6956"},"value":"283447036172924575727196451306956"},"src":"10850:51:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10846:55:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1719,"nodeType":"ExpressionStatement","src":"10846:55:10"},{"expression":{"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1720,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10915:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10921:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1722,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10925:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10921:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10920:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10931:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10920:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10919:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"343031363836363930333934303237363633363531363234323038373639353533","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10937:33:10","typeDescriptions":{"typeIdentifier":"t_rational_401686690394027663651624208769553_by_1","typeString":"int_const 4016...(25 digits omitted)...9553"},"value":"401686690394027663651624208769553"},"src":"10919:51:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10915:55:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1731,"nodeType":"ExpressionStatement","src":"10915:55:10"},{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1732,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10984:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"10990:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1734,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"10994:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10990:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10989:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"10989:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10988:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323034303438343537353930333932303132333632343835303631383136363232","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11006:33:10","typeDescriptions":{"typeIdentifier":"t_rational_204048457590392012362485061816622_by_1","typeString":"int_const 2040...(25 digits omitted)...6622"},"value":"204048457590392012362485061816622"},"src":"10988:51:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10984:55:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1743,"nodeType":"ExpressionStatement","src":"10984:55:10"},{"expression":{"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"11053:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"11059:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1746,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"11063:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11059:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11058:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11069:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"11058:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11057:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331383533383939363938353031353731343032363533333539343237313338","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11075:32:10","typeDescriptions":{"typeIdentifier":"t_rational_31853899698501571402653359427138_by_1","typeString":"int_const 31853899698501571402653359427138"},"value":"31853899698501571402653359427138"},"src":"11057:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11053:54:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1755,"nodeType":"ExpressionStatement","src":"11053:54:10"},{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1756,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"11121:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"11127:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1758,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"11131:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11127:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11126:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3936","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11137:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"11126:13:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11125:15:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"393039343239393731323434333837333030323737333736353538333735","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11143:30:10","typeDescriptions":{"typeIdentifier":"t_rational_909429971244387300277376558375_by_1","typeString":"int_const 909429971244387300277376558375"},"value":"909429971244387300277376558375"},"src":"11125:48:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11121:52:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1767,"nodeType":"ExpressionStatement","src":"11121:52:10"},{"AST":{"nodeType":"YulBlock","src":"11243:295:10","statements":[{"nodeType":"YulAssignment","src":"11509:15:10","value":{"arguments":[{"name":"p","nodeType":"YulIdentifier","src":"11519:1:10"},{"name":"q","nodeType":"YulIdentifier","src":"11522:1:10"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"11514:4:10"},"nodeType":"YulFunctionCall","src":"11514:10:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11509:1:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1614,"isOffset":false,"isSlot":false,"src":"11519:1:10","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"11522:1:10","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"11509:1:10","valueSize":1}],"id":1768,"nodeType":"InlineAssembly","src":"11234:304:10"},{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1769,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11899:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"31363737323032313130393936373138353838333432383230393637303637343433393633353136313636","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11904:43:10","typeDescriptions":{"typeIdentifier":"t_rational_1677202110996718588342820967067443963516166_by_1","typeString":"int_const 1677...(35 digits omitted)...6166"},"value":"1677202110996718588342820967067443963516166"},"src":"11899:48:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1772,"nodeType":"ExpressionStatement","src":"11899:48:10"},{"expression":{"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12006:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136353937353737353532363835363134323231343837323835393538313933393437343639313933383230353539323139383738313737393038303933343939323038333731","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12027:71:10","typeDescriptions":{"typeIdentifier":"t_rational_16597577552685614221487285958193947469193820559219878177908093499208371_by_1","typeString":"int_const 1659...(63 digits omitted)...8371"},"value":"16597577552685614221487285958193947469193820559219878177908093499208371"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1775,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"12117:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12027:91:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"12006:112:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1778,"nodeType":"ExpressionStatement","src":"12006:112:10"},{"expression":{"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1779,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12186:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"363030393230313739383239373331383631373336373032373739333231363231343539353935343732323538303439303734313031353637333737383833303230303138333038","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12191:72:10","typeDescriptions":{"typeIdentifier":"t_rational_600920179829731861736702779321621459595472258049074101567377883020018308_by_1","typeString":"int_const 6009...(64 digits omitted)...8308"},"value":"600920179829731861736702779321621459595472258049074101567377883020018308"},"src":"12186:77:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1782,"nodeType":"ExpressionStatement","src":"12186:77:10"},{"expression":{"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1783,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"12328:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313734","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12334:3:10","typeDescriptions":{"typeIdentifier":"t_rational_174_by_1","typeString":"int_const 174"},"value":"174"},"src":"12328:9:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1786,"nodeType":"ExpressionStatement","src":"12328:9:10"}]}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"8215:288:10","text":"@dev Computes ln(x) in 1e18 fixed point.\n @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\n @dev Reverts if x is negative or zero.\n @param x Fixed point number in 1e18 format.\n @return r Result of ln(x)."},"id":1789,"implemented":true,"kind":"function","modifiers":[],"name":"ln","nameLocation":"8517:2:10","nodeType":"FunctionDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"x","nameLocation":"8527:1:10","nodeType":"VariableDeclaration","scope":1789,"src":"8520:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1569,"name":"int256","nodeType":"ElementaryTypeName","src":"8520:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8519:10:10"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"r","nameLocation":"8560:1:10","nodeType":"VariableDeclaration","scope":1789,"src":"8553:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1572,"name":"int256","nodeType":"ElementaryTypeName","src":"8553:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8552:10:10"},"scope":1966,"src":"8508:3846:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"12923:1933:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"_deltaWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"13006:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13006:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1811,"nodeType":"IfStatement","src":"13002:63:10","trueBody":{"id":1810,"nodeType":"Block","src":"13025:40:10","statements":[{"expression":{"id":1808,"name":"_average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"13046:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1804,"id":1809,"nodeType":"Return","src":"13039:15:10"}]}},{"condition":{"id":1812,"name":"_isAdding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"13323:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1873,"nodeType":"Block","src":"14512:338:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"_totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"14530:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1849,"name":"_deltaWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14546:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14530:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"nodeType":"IfStatement","src":"14526:75:10","trueBody":{"id":1853,"nodeType":"Block","src":"14560:41:10","statements":[{"expression":{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14585:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1804,"id":1852,"nodeType":"Return","src":"14578:8:10"}]}},{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1855,"name":"average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14677:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"_totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"14794:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1868,"name":"_deltaWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14809:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14794:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1858,"name":"_average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"14709:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1856,"name":"_totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"14688:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14701:7:10","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"14688:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14688:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1862,"name":"_delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"14756:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1860,"name":"_deltaWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"14737:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14750:5:10","memberName":"mulUp","nodeType":"MemberAccess","referencedDeclaration":1295,"src":"14737:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14737:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14688:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14687:77:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14765:7:10","memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"14687:85:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:152:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14677:162:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"14677:162:10"}]},"id":1874,"nodeType":"IfStatement","src":"13319:1531:10","trueBody":{"id":1847,"nodeType":"Block","src":"13334:913:10","statements":[{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1813,"name":"average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"_totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"13529:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1826,"name":"_deltaWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"13544:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13529:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1816,"name":"_average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"13442:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1814,"name":"_totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"13421:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13434:7:10","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"13421:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1820,"name":"_delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"13491:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1818,"name":"_deltaWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"13470:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13483:7:10","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"13470:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13470:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13421:77:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13420:79:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13500:7:10","memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"13420:87:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13420:154:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13410:164:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1830,"nodeType":"ExpressionStatement","src":"13410:164:10"},{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"minAverage","nameLocation":"14111:10:10","nodeType":"VariableDeclaration","scope":1847,"src":"14103:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"14103:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1837,"initialValue":{"arguments":[{"id":1835,"name":"_average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"14135:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1833,"name":"_delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"14124:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14131:3:10","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":1894,"src":"14124:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14124:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14103:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14162:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1839,"name":"minAverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"14172:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14162:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"14158:79:10","trueBody":{"id":1845,"nodeType":"Block","src":"14184:53:10","statements":[{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"average","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14202:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1842,"name":"minAverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"14212:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14202:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1844,"nodeType":"ExpressionStatement","src":"14202:20:10"}]}}]}}]},"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"12360:347:10","text":"@dev Updates a weighted average by adding or removing a weighted delta.\n @param _totalWeight The total weight before the update.\n @param _deltaWeight The weight of the new value.\n @param _average The weighted average before the update.\n @param _delta The new value.\n @return average The new weighted average."},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"updateWeightedAverage","nameLocation":"12721:21:10","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"_average","nameLocation":"12760:8:10","nodeType":"VariableDeclaration","scope":1876,"src":"12752:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"12752:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"_totalWeight","nameLocation":"12786:12:10","nodeType":"VariableDeclaration","scope":1876,"src":"12778:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"12778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"_delta","nameLocation":"12816:6:10","nodeType":"VariableDeclaration","scope":1876,"src":"12808:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"12808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"_deltaWeight","nameLocation":"12840:12:10","nodeType":"VariableDeclaration","scope":1876,"src":"12832:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"12832:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"_isAdding","nameLocation":"12867:9:10","nodeType":"VariableDeclaration","scope":1876,"src":"12862:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1799,"name":"bool","nodeType":"ElementaryTypeName","src":"12862:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12742:140:10"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"average","nameLocation":"12914:7:10","nodeType":"VariableDeclaration","scope":1876,"src":"12906:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"12906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12905:17:10"},"scope":1966,"src":"12712:2144:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"15096:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"15113:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"15117:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15113:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"15125:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15113:13:10","trueExpression":{"id":1889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"15121:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1885,"id":1892,"nodeType":"Return","src":"15106:20:10"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"14862:162:10","text":"@dev Calculates the minimum of two values.\n @param a The first value.\n @param b The second value.\n @return The minimum of the two values."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"15038:3:10","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"a","nameLocation":"15050:1:10","nodeType":"VariableDeclaration","scope":1894,"src":"15042:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"15042:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"b","nameLocation":"15061:1:10","nodeType":"VariableDeclaration","scope":1894,"src":"15053:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"15053:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15041:22:10"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"15087:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"15087:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15086:9:10"},"scope":1966,"src":"15029:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"15373:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"15390:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"15394:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15390:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"15402:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15390:13:10","trueExpression":{"id":1907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"15398:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1903,"id":1910,"nodeType":"Return","src":"15383:20:10"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"15139:162:10","text":"@dev Calculates the maximum of two values.\n @param a The first value.\n @param b The second value.\n @return The maximum of the two values."},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"15315:3:10","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"a","nameLocation":"15327:1:10","nodeType":"VariableDeclaration","scope":1912,"src":"15319:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"15319:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"b","nameLocation":"15338:1:10","nodeType":"VariableDeclaration","scope":1912,"src":"15330:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"15330:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15318:22:10"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"15364:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"15364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15363:9:10"},"scope":1966,"src":"15306:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1929,"nodeType":"Block","src":"15647:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"15664:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15668:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15664:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"15676:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15664:13:10","trueExpression":{"id":1925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15672:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1921,"id":1928,"nodeType":"Return","src":"15657:20:10"}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"15416:162:10","text":"@dev Calculates the minimum of two values.\n @param a The first value.\n @param b The second value.\n @return The minimum of the two values."},"id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"15592:3:10","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"a","nameLocation":"15603:1:10","nodeType":"VariableDeclaration","scope":1930,"src":"15596:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1914,"name":"int256","nodeType":"ElementaryTypeName","src":"15596:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"b","nameLocation":"15613:1:10","nodeType":"VariableDeclaration","scope":1930,"src":"15606:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1916,"name":"int256","nodeType":"ElementaryTypeName","src":"15606:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15595:20:10"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"15639:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1919,"name":"int256","nodeType":"ElementaryTypeName","src":"15639:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15638:8:10"},"scope":1966,"src":"15583:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1947,"nodeType":"Block","src":"15921:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"15938:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"15942:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15938:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1944,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"15950:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15938:13:10","trueExpression":{"id":1943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"15946:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1939,"id":1946,"nodeType":"Return","src":"15931:20:10"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"15690:162:10","text":"@dev Calculates the maximum of two values.\n @param a The first value.\n @param b The second value.\n @return The maximum of the two values."},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"15866:3:10","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"a","nameLocation":"15877:1:10","nodeType":"VariableDeclaration","scope":1948,"src":"15870:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1932,"name":"int256","nodeType":"ElementaryTypeName","src":"15870:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"b","nameLocation":"15887:1:10","nodeType":"VariableDeclaration","scope":1948,"src":"15880:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1934,"name":"int256","nodeType":"ElementaryTypeName","src":"15880:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15869:20:10"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"15913:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1937,"name":"int256","nodeType":"ElementaryTypeName","src":"15913:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15912:8:10"},"scope":1966,"src":"15857:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"16152:38:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"16169:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16173:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16169:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"16182:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16169:14:10","trueExpression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"16177:2:10","subExpression":{"id":1959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"16178:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1955,"id":1963,"nodeType":"Return","src":"16162:21:10"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"15964:129:10","text":"@dev Calculates the absolute value of an int256.\n @param a The value.\n @return The absolute value of the input."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"16107:3:10","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"a","nameLocation":"16118:1:10","nodeType":"VariableDeclaration","scope":1965,"src":"16111:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1950,"name":"int256","nodeType":"ElementaryTypeName","src":"16111:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16110:10:10"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1965,"src":"16144:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1953,"name":"int256","nodeType":"ElementaryTypeName","src":"16144:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16143:8:10"},"scope":1966,"src":"16098:92:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1967,"src":"507:15685:10","usedErrors":[],"usedEvents":[]}],"src":"40:16153:10"},"id":10},"contracts/src/libraries/SafeCast.sol":{"ast":{"absolutePath":"contracts/src/libraries/SafeCast.sol","exportedSymbols":{"IHyperdrive":[462],"SafeCast":[2139]},"id":2140,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1968,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"40:23:11"},{"absolutePath":"contracts/src/interfaces/IHyperdrive.sol","file":"../interfaces/IHyperdrive.sol","id":1970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2140,"sourceUnit":463,"src":"65:60:11","symbolAliases":[{"foreign":{"id":1969,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"74:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"127:216:11","text":"@notice Safe unsigned integer casting library that reverts on overflow.\n @author Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)"},"fullyImplemented":true,"id":2139,"linearizedBaseContracts":[2139],"name":"SafeCast","nameLocation":"351:8:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2000,"nodeType":"Block","src":"591:132:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"605:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1981,"name":"uint112","nodeType":"ElementaryTypeName","src":"614:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":1980,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"609:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"609:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"623:3:11","memberName":"max","nodeType":"MemberAccess","src":"609:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"605:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"IfStatement","src":"601:92:11","trueBody":{"id":1991,"nodeType":"Block","src":"628:65:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1986,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"649:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"661:19:11","memberName":"UnsafeCastToUint112","nodeType":"MemberAccess","referencedDeclaration":416,"src":"649:31:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"649:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1990,"nodeType":"RevertStatement","src":"642:40:11"}]}},{"expression":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1993,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"702:1:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1996,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"714:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"706:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":1994,"name":"uint112","nodeType":"ElementaryTypeName","src":"706:7:11","typeDescriptions":{}}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"706:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"702:14:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":1999,"nodeType":"ExpressionStatement","src":"702:14:11"}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"366:156:11","text":"@notice This function safely casts a uint256 to a uint112.\n @param x The uint256 to cast to uint112.\n @return y The uint112 casted from x."},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"536:9:11","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"x","nameLocation":"554:1:11","nodeType":"VariableDeclaration","scope":2001,"src":"546:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"545:11:11"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"y","nameLocation":"588:1:11","nodeType":"VariableDeclaration","scope":2001,"src":"580:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1976,"name":"uint112","nodeType":"ElementaryTypeName","src":"580:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"579:11:11"},"scope":2139,"src":"527:196:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"954:132:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"968:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"977:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2011,"name":"uint128","nodeType":"ElementaryTypeName","src":"977:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":2010,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"972:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"986:3:11","memberName":"max","nodeType":"MemberAccess","src":"972:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"968:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2022,"nodeType":"IfStatement","src":"964:92:11","trueBody":{"id":2021,"nodeType":"Block","src":"991:65:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2016,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1012:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1024:19:11","memberName":"UnsafeCastToUint128","nodeType":"MemberAccess","referencedDeclaration":419,"src":"1012:31:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1012:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"RevertStatement","src":"1005:40:11"}]}},{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2023,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1065:1:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2026,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1077:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1069:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2024,"name":"uint128","nodeType":"ElementaryTypeName","src":"1069:7:11","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1069:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"1065:14:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2029,"nodeType":"ExpressionStatement","src":"1065:14:11"}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"729:156:11","text":"@notice This function safely casts a uint256 to a uint128.\n @param x The uint256 to cast to uint128.\n @return y The uint128 casted from x."},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"899:9:11","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"x","nameLocation":"917:1:11","nodeType":"VariableDeclaration","scope":2031,"src":"909:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"908:11:11"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"y","nameLocation":"951:1:11","nodeType":"VariableDeclaration","scope":2031,"src":"943:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2006,"name":"uint128","nodeType":"ElementaryTypeName","src":"943:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"942:11:11"},"scope":2139,"src":"890:196:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2066,"nodeType":"Block","src":"1314:146:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1328:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1345:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2043,"name":"int128","nodeType":"ElementaryTypeName","src":"1345:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1340:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1340:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1353:3:11","memberName":"max","nodeType":"MemberAccess","src":"1340:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1332:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2040,"name":"uint128","nodeType":"ElementaryTypeName","src":"1332:7:11","typeDescriptions":{}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1332:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"1328:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"1324:99:11","trueBody":{"id":2054,"nodeType":"Block","src":"1359:64:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2049,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1380:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1392:18:11","memberName":"UnsafeCastToInt128","nodeType":"MemberAccess","referencedDeclaration":422,"src":"1380:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"RevertStatement","src":"1373:39:11"}]}},{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2056,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1432:1:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2061,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1450:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1443:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2059,"name":"int256","nodeType":"ElementaryTypeName","src":"1443:6:11","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1443:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1436:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2057,"name":"int128","nodeType":"ElementaryTypeName","src":"1436:6:11","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1436:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"1432:21:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":2065,"nodeType":"ExpressionStatement","src":"1432:21:11"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"1092:155:11","text":"@notice This function safely casts an uint256 to an int128.\n @param x The uint256 to cast to int128.\n @return y The int128 casted from x."},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"1261:8:11","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"x","nameLocation":"1278:1:11","nodeType":"VariableDeclaration","scope":2067,"src":"1270:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:11:11"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"y","nameLocation":"1311:1:11","nodeType":"VariableDeclaration","scope":2067,"src":"1304:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2036,"name":"int128","nodeType":"ElementaryTypeName","src":"1304:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"1303:10:11"},"scope":2139,"src":"1252:208:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2104,"nodeType":"Block","src":"1685:153:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1699:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1708:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2077,"name":"int128","nodeType":"ElementaryTypeName","src":"1708:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1703:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1703:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1716:3:11","memberName":"min","nodeType":"MemberAccess","src":"1703:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"1699:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2082,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1723:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1732:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2084,"name":"int128","nodeType":"ElementaryTypeName","src":"1732:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"}],"id":2083,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1727:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int128","typeString":"type(int128)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1740:3:11","memberName":"max","nodeType":"MemberAccess","src":"1727:16:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"1723:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1699:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2096,"nodeType":"IfStatement","src":"1695:114:11","trueBody":{"id":2095,"nodeType":"Block","src":"1745:64:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2090,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"1766:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1778:18:11","memberName":"UnsafeCastToInt128","nodeType":"MemberAccess","referencedDeclaration":422,"src":"1766:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2094,"nodeType":"RevertStatement","src":"1759:39:11"}]}},{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2097,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"1818:1:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2100,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1829:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1822:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":2098,"name":"int128","nodeType":"ElementaryTypeName","src":"1822:6:11","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"1818:13:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":2103,"nodeType":"ExpressionStatement","src":"1818:13:11"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"1466:153:11","text":"@notice This function safely casts an int256 to an int128.\n @param x The int256 to cast to int128.\n @return y The int128 casted from x."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"1633:8:11","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"x","nameLocation":"1649:1:11","nodeType":"VariableDeclaration","scope":2105,"src":"1642:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2069,"name":"int256","nodeType":"ElementaryTypeName","src":"1642:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1641:10:11"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"y","nameLocation":"1682:1:11","nodeType":"VariableDeclaration","scope":2105,"src":"1675:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":2072,"name":"int128","nodeType":"ElementaryTypeName","src":"1675:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"1674:10:11"},"scope":2139,"src":"1624:214:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"2066:138:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"2080:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2097:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2117,"name":"int256","nodeType":"ElementaryTypeName","src":"2097:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2092:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2105:3:11","memberName":"max","nodeType":"MemberAccess","src":"2092:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2084:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2084:7:11","typeDescriptions":{}}},"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2080:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2129,"nodeType":"IfStatement","src":"2076:99:11","trueBody":{"id":2128,"nodeType":"Block","src":"2111:64:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2123,"name":"IHyperdrive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2132:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHyperdrive_$462_$","typeString":"type(contract IHyperdrive)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2144:18:11","memberName":"UnsafeCastToInt256","nodeType":"MemberAccess","referencedDeclaration":425,"src":"2132:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2132:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2127,"nodeType":"RevertStatement","src":"2125:39:11"}]}},{"expression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"2184:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2133,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"2195:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2188:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2131,"name":"int256","nodeType":"ElementaryTypeName","src":"2188:6:11","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2188:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2184:13:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2136,"nodeType":"ExpressionStatement","src":"2184:13:11"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"1844:155:11","text":"@notice This function safely casts an uint256 to an int256.\n @param x The uint256 to cast to int256.\n @return y The int256 casted from x."},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"2013:8:11","nodeType":"FunctionDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"x","nameLocation":"2030:1:11","nodeType":"VariableDeclaration","scope":2138,"src":"2022:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2022:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2021:11:11"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"y","nameLocation":"2063:1:11","nodeType":"VariableDeclaration","scope":2138,"src":"2056:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2110,"name":"int256","nodeType":"ElementaryTypeName","src":"2056:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2055:10:11"},"scope":2139,"src":"2004:200:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2140,"src":"343:1863:11","usedErrors":[],"usedEvents":[]}],"src":"40:2167:11"},"id":11},"contracts/test/ERC20Mintable.sol":{"ast":{"absolutePath":"contracts/test/ERC20Mintable.sol","exportedSymbols":{"Authority":[2777],"ERC20":[3470],"ERC20Mintable":[2286],"MultiRolesAuthority":[3082]},"id":2287,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2141,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:12"},{"absolutePath":"solmate/auth/Auth.sol","file":"solmate/auth/Auth.sol","id":2143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":2778,"src":"64:50:12","symbolAliases":[{"foreign":{"id":2142,"name":"Authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"73:9:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"solmate/auth/authorities/MultiRolesAuthority.sol","file":"solmate/auth/authorities/MultiRolesAuthority.sol","id":2145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":3083,"src":"115:87:12","symbolAliases":[{"foreign":{"id":2144,"name":"MultiRolesAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"124:19:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"solmate/tokens/ERC20.sol","file":"solmate/tokens/ERC20.sol","id":2147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":3471,"src":"203:49:12","symbolAliases":[{"foreign":{"id":2146,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"212:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2148,"name":"ERC20","nameLocations":["280:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"280:5:12"},"id":2149,"nodeType":"InheritanceSpecifier","src":"280:5:12"},{"baseName":{"id":2150,"name":"MultiRolesAuthority","nameLocations":["287:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":3082,"src":"287:19:12"},"id":2151,"nodeType":"InheritanceSpecifier","src":"287:19:12"}],"canonicalName":"ERC20Mintable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2286,"linearizedBaseContracts":[2286,3082,2777,2764,3470],"name":"ERC20Mintable","nameLocation":"263:13:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"7a8c63b5","id":2153,"mutability":"immutable","name":"isCompetitionMode","nameLocation":"335:17:12","nodeType":"VariableDeclaration","scope":2286,"src":"313:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2152,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"239c70ae","id":2155,"mutability":"immutable","name":"maxMintAmount","nameLocation":"383:13:12","nodeType":"VariableDeclaration","scope":2286,"src":"358:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"358:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":2195,"nodeType":"Block","src":"703:95:12","statements":[{"expression":{"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2187,"name":"isCompetitionMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"713:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2188,"name":"isCompetitionMode_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"733:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"713:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2190,"nodeType":"ExpressionStatement","src":"713:38:12"},{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2191,"name":"maxMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"761:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2192,"name":"maxMintAmount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"777:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"761:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"761:30:12"}]},"id":2196,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2170,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"605:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2171,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"611:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2172,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"619:8:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2173,"kind":"baseConstructorSpecifier","modifierName":{"id":2169,"name":"ERC20","nameLocations":["599:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"599:5:12"},"nodeType":"ModifierInvocation","src":"599:29:12"},{"arguments":[{"id":2175,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"657:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"arguments":[{"id":2181,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"690:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Mintable_$2286","typeString":"contract ERC20Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Mintable_$2286","typeString":"contract ERC20Mintable"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"682:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:12","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"682:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"674:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:12","typeDescriptions":{}}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"674:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2176,"name":"Authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"664:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Authority_$2777_$","typeString":"type(contract Authority)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"664:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"id":2185,"kind":"baseConstructorSpecifier","modifierName":{"id":2174,"name":"MultiRolesAuthority","nameLocations":["637:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":3082,"src":"637:19:12"},"nodeType":"ModifierInvocation","src":"637:61:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"name","nameLocation":"438:4:12","nodeType":"VariableDeclaration","scope":2196,"src":"424:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2156,"name":"string","nodeType":"ElementaryTypeName","src":"424:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"symbol","nameLocation":"466:6:12","nodeType":"VariableDeclaration","scope":2196,"src":"452:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"452:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"decimals","nameLocation":"488:8:12","nodeType":"VariableDeclaration","scope":2196,"src":"482:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2160,"name":"uint8","nodeType":"ElementaryTypeName","src":"482:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"admin","nameLocation":"514:5:12","nodeType":"VariableDeclaration","scope":2196,"src":"506:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"isCompetitionMode_","nameLocation":"534:18:12","nodeType":"VariableDeclaration","scope":2196,"src":"529:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2164,"name":"bool","nodeType":"ElementaryTypeName","src":"529:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"maxMintAmount_","nameLocation":"570:14:12","nodeType":"VariableDeclaration","scope":2196,"src":"562:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"414:176:12"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"703:0:12"},"scope":2286,"src":"403:395:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2212,"nodeType":"Block","src":"845:196:12","statements":[{"condition":{"id":2198,"name":"isCompetitionMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"859:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2210,"nodeType":"IfStatement","src":"855:169:12","trueBody":{"id":2209,"nodeType":"Block","src":"878:146:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"930:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"934:6:12","memberName":"sender","nodeType":"MemberAccess","src":"930:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"942:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"946:3:12","memberName":"sig","nodeType":"MemberAccess","src":"942:7:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2200,"name":"isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"917:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"917:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332304d696e7461626c653a206e6f7420617574686f72697a6564","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"968:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457","typeString":"literal_string \"ERC20Mintable: not authorized\""},"value":"ERC20Mintable: not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457","typeString":"literal_string \"ERC20Mintable: not authorized\""}],"id":2199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"892:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:121:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"892:121:12"}]}},{"id":2211,"nodeType":"PlaceholderStatement","src":"1033:1:12"}]},"id":2213,"name":"requiresAuthDuringCompetition","nameLocation":"813:29:12","nodeType":"ModifierDefinition","parameters":{"id":2197,"nodeType":"ParameterList","parameters":[],"src":"842:2:12"},"src":"804:237:12","virtual":false,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"1116:120:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"1134:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2222,"name":"maxMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"1144:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1134:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1159:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc","typeString":"literal_string \"MockERC4626: Invalid mint amount\""},"value":"MockERC4626: Invalid mint amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc","typeString":"literal_string \"MockERC4626: Invalid mint amount\""}],"id":2220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1126:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"1126:68:12"},{"expression":{"arguments":[{"expression":{"id":2228,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1210:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1214:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1210:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"1222:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2227,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"1204:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2232,"nodeType":"ExpressionStatement","src":"1204:25:12"}]},"functionSelector":"a0712d68","id":2234,"implemented":true,"kind":"function","modifiers":[{"id":2218,"kind":"modifierInvocation","modifierName":{"id":2217,"name":"requiresAuthDuringCompetition","nameLocations":["1086:29:12"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"1086:29:12"},"nodeType":"ModifierInvocation","src":"1086:29:12"}],"name":"mint","nameLocation":"1056:4:12","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"amount","nameLocation":"1069:6:12","nodeType":"VariableDeclaration","scope":2234,"src":"1061:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1060:16:12"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[],"src":"1116:0:12"},"scope":2286,"src":"1047:189:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2255,"nodeType":"Block","src":"1354:121:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1372:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2245,"name":"maxMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"1382:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1372:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1397:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc","typeString":"literal_string \"MockERC4626: Invalid mint amount\""},"value":"MockERC4626: Invalid mint amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc","typeString":"literal_string \"MockERC4626: Invalid mint amount\""}],"id":2243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1364:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"1364:68:12"},{"expression":{"arguments":[{"id":2251,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"1448:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1461:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2250,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"1442:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2254,"nodeType":"ExpressionStatement","src":"1442:26:12"}]},"functionSelector":"40c10f19","id":2256,"implemented":true,"kind":"function","modifiers":[{"id":2241,"kind":"modifierInvocation","modifierName":{"id":2240,"name":"requiresAuthDuringCompetition","nameLocations":["1324:29:12"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"1324:29:12"},"nodeType":"ModifierInvocation","src":"1324:29:12"}],"name":"mint","nameLocation":"1251:4:12","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"destination","nameLocation":"1273:11:12","nodeType":"VariableDeclaration","scope":2256,"src":"1265:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"amount","nameLocation":"1302:6:12","nodeType":"VariableDeclaration","scope":2256,"src":"1294:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1255:59:12"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[],"src":"1354:0:12"},"scope":2286,"src":"1242:233:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2269,"nodeType":"Block","src":"1550:42:12","statements":[{"expression":{"arguments":[{"expression":{"id":2264,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1566:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1570:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1566:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1578:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2263,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"1560:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1560:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2268,"nodeType":"ExpressionStatement","src":"1560:25:12"}]},"functionSelector":"42966c68","id":2270,"implemented":true,"kind":"function","modifiers":[{"id":2261,"kind":"modifierInvocation","modifierName":{"id":2260,"name":"requiresAuthDuringCompetition","nameLocations":["1520:29:12"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"1520:29:12"},"nodeType":"ModifierInvocation","src":"1520:29:12"}],"name":"burn","nameLocation":"1490:4:12","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"amount","nameLocation":"1503:6:12","nodeType":"VariableDeclaration","scope":2270,"src":"1495:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1494:16:12"},"returnParameters":{"id":2262,"nodeType":"ParameterList","parameters":[],"src":"1550:0:12"},"scope":2286,"src":"1481:111:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2284,"nodeType":"Block","src":"1710:43:12","statements":[{"expression":{"arguments":[{"id":2280,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1726:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2281,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"1739:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2279,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"1720:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1720:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2283,"nodeType":"ExpressionStatement","src":"1720:26:12"}]},"functionSelector":"9dc29fac","id":2285,"implemented":true,"kind":"function","modifiers":[{"id":2277,"kind":"modifierInvocation","modifierName":{"id":2276,"name":"requiresAuthDuringCompetition","nameLocations":["1680:29:12"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"1680:29:12"},"nodeType":"ModifierInvocation","src":"1680:29:12"}],"name":"burn","nameLocation":"1607:4:12","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"destination","nameLocation":"1629:11:12","nodeType":"VariableDeclaration","scope":2285,"src":"1621:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"amount","nameLocation":"1658:6:12","nodeType":"VariableDeclaration","scope":2285,"src":"1650:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1650:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:59:12"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[],"src":"1710:0:12"},"scope":2286,"src":"1598:155:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2287,"src":"254:1501:12","usedErrors":[],"usedEvents":[2614,2621,2795,2801,2809,2816,3093,3101]}],"src":"39:1717:12"},"id":12},"contracts/test/MockRocketPool.sol":{"ast":{"absolutePath":"contracts/test/MockRocketPool.sol","exportedSymbols":{"ERC20Mintable":[2286],"FixedPointMath":[1966],"MockRocketPool":[2605],"MultiRolesAuthority":[3082]},"id":2606,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2288,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"39:23:13"},{"absolutePath":"solmate/auth/authorities/MultiRolesAuthority.sol","file":"solmate/auth/authorities/MultiRolesAuthority.sol","id":2290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2606,"sourceUnit":3083,"src":"64:87:13","symbolAliases":[{"foreign":{"id":2289,"name":"MultiRolesAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"73:19:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/src/libraries/FixedPointMath.sol","file":"../src/libraries/FixedPointMath.sol","id":2292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2606,"sourceUnit":1967,"src":"152:69:13","symbolAliases":[{"foreign":{"id":2291,"name":"FixedPointMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"161:14:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/test/ERC20Mintable.sol","file":"./ERC20Mintable.sol","id":2294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2606,"sourceUnit":2287,"src":"222:52:13","symbolAliases":[{"foreign":{"id":2293,"name":"ERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"231:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2296,"name":"MultiRolesAuthority","nameLocations":["838:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":3082,"src":"838:19:13"},"id":2297,"nodeType":"InheritanceSpecifier","src":"838:19:13"},{"baseName":{"id":2298,"name":"ERC20Mintable","nameLocations":["859:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2286,"src":"859:13:13"},"id":2299,"nodeType":"InheritanceSpecifier","src":"859:13:13"}],"canonicalName":"MockRocketPool","contractDependencies":[],"contractKind":"contract","documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"276:535:13","text":"@author DELV\n @title MockRocketPool\n @notice This mock yield source will accrue interest at a specified rate\n         Every stateful interaction will accrue interest, so the interest\n         accrual will approximate continuous compounding as the contract\n         is called more frequently.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."},"fullyImplemented":true,"id":2605,"linearizedBaseContracts":[2605,2286,3082,2777,2764,3470],"name":"MockRocketPool","nameLocation":"820:14:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2302,"libraryName":{"id":2300,"name":"FixedPointMath","nameLocations":["885:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":1966,"src":"885:14:13"},"nodeType":"UsingForDirective","src":"879:33:13","typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2304,"mutability":"mutable","name":"_rate","nameLocation":"957:5:13","nodeType":"VariableDeclaration","scope":2605,"src":"940:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"_lastUpdated","nameLocation":"985:12:13","nodeType":"VariableDeclaration","scope":2605,"src":"968:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"totalPooledEther","nameLocation":"1030:16:13","nodeType":"VariableDeclaration","scope":2605,"src":"1022:24:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"totalShares","nameLocation":"1060:11:13","nodeType":"VariableDeclaration","scope":2605,"src":"1052:19:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"1397:77:13","statements":[{"expression":{"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2329,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1407:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2330,"name":"_initialRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"1415:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1407:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"nodeType":"ExpressionStatement","src":"1407:20:13"},{"expression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2333,"name":"_lastUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"1437:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2334,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1452:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1458:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"1452:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1437:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"nodeType":"ExpressionStatement","src":"1437:30:13"}]},"id":2339,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"526f636b6574506f6f6c20455448","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1250:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a8ab2737ef3326d6bf7b70d82b2ab9e0d91036691c1082ab64bf8f8450cc35e","typeString":"literal_string \"RocketPool ETH\""},"value":"RocketPool ETH"},{"hexValue":"52455448","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1280:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d162eeaf9b98174ea2bea04e3b95942e6a6d6c33d589564dec4022dc1ab3f38c","typeString":"literal_string \"RETH\""},"value":"RETH"},{"hexValue":"3138","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1300:2:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},{"id":2324,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"1316:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2325,"name":"_isCompetitionMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"1336:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2326,"name":"_maxMintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"1368:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2327,"kind":"baseConstructorSpecifier","modifierName":{"id":2320,"name":"ERC20Mintable","nameLocations":["1223:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2286,"src":"1223:13:13"},"nodeType":"ModifierInvocation","src":"1223:169:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"_initialRate","nameLocation":"1107:12:13","nodeType":"VariableDeclaration","scope":2339,"src":"1099:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"_admin","nameLocation":"1137:6:13","nodeType":"VariableDeclaration","scope":2339,"src":"1129:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"_isCompetitionMode","nameLocation":"1158:18:13","nodeType":"VariableDeclaration","scope":2339,"src":"1153:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2315,"name":"bool","nodeType":"ElementaryTypeName","src":"1153:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"_maxMintAmount","nameLocation":"1194:14:13","nodeType":"VariableDeclaration","scope":2339,"src":"1186:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1089:125:13"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[],"src":"1397:0:13"},"scope":2605,"src":"1078:396:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2405,"nodeType":"Block","src":"1563:719:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2347,"name":"_accrue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"1601:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1601:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"ExpressionStatement","src":"1601:9:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2350,"name":"getTotalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1683:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1703:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2375,"nodeType":"IfStatement","src":"1679:189:13","trueBody":{"id":2374,"nodeType":"Block","src":"1706:162:13","statements":[{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2354,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"1720:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1734:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1738:5:13","memberName":"value","nodeType":"MemberAccess","src":"1734:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2358,"nodeType":"ExpressionStatement","src":"1720:23:13"},{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2359,"name":"totalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"1757:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1776:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:5:13","memberName":"value","nodeType":"MemberAccess","src":"1776:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1757:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"1757:28:13"},{"expression":{"arguments":[{"expression":{"id":2365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1805:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1809:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1805:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1817:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1821:5:13","memberName":"value","nodeType":"MemberAccess","src":"1817:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2364,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"1799:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1799:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"1799:28:13"},{"expression":{"expression":{"id":2371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1848:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:5:13","memberName":"value","nodeType":"MemberAccess","src":"1848:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2346,"id":2373,"nodeType":"Return","src":"1841:16:13"}]}},{"assignments":[2377],"declarations":[{"constant":false,"id":2377,"mutability":"mutable","name":"shares","nameLocation":"1957:6:13","nodeType":"VariableDeclaration","scope":2405,"src":"1949:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2386,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2381,"name":"getTotalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2000:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2383,"name":"getTotalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2030:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2030:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1966:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1970:5:13","memberName":"value","nodeType":"MemberAccess","src":"1966:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1976:10:13","memberName":"mulDivDown","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"1966:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1966:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1949:112:13"},{"expression":{"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2387,"name":"totalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"2106:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2388,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2126:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2130:5:13","memberName":"value","nodeType":"MemberAccess","src":"2126:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2106:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2391,"nodeType":"ExpressionStatement","src":"2106:29:13"},{"expression":{"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2392,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"2145:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2393,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2160:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2145:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2395,"nodeType":"ExpressionStatement","src":"2145:21:13"},{"expression":{"arguments":[{"expression":{"id":2397,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2229:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2233:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2229:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2241:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2245:5:13","memberName":"value","nodeType":"MemberAccess","src":"2241:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"2223:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2223:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2402,"nodeType":"ExpressionStatement","src":"2223:28:13"},{"expression":{"id":2403,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"2269:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2346,"id":2404,"nodeType":"Return","src":"2262:13:13"}]},"documentation":{"id":2340,"nodeType":"StructuredDocumentation","src":"1480:18:13","text":"Overrides ///"},"functionSelector":"a1903eab","id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"submit","nameLocation":"1512:6:13","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"1519:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:9:13"},"returnParameters":{"id":2346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"1554:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1554:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1553:9:13"},"scope":2605,"src":"1503:779:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2435,"nodeType":"Block","src":"2404:373:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2415,"name":"_accrue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2442:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"ExpressionStatement","src":"2442:9:13"},{"assignments":[2419],"declarations":[{"constant":false,"id":2419,"mutability":"mutable","name":"tokenAmount","nameLocation":"2540:11:13","nodeType":"VariableDeclaration","scope":2435,"src":"2532:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2532:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2427,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2422,"name":"getTotalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2592:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2424,"name":"getTotalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2627:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2627:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2420,"name":"_sharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"2554:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2568:10:13","memberName":"mulDivDown","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"2554:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2554:99:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2532:121:13"},{"expression":{"arguments":[{"id":2429,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"2717:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2430,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2729:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2428,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"2708:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"ExpressionStatement","src":"2708:33:13"},{"expression":{"id":2433,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"2759:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2414,"id":2434,"nodeType":"Return","src":"2752:18:13"}]},"functionSelector":"8fcb4e5b","id":2436,"implemented":true,"kind":"function","modifiers":[],"name":"transferShares","nameLocation":"2297:14:13","nodeType":"FunctionDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"_recipient","nameLocation":"2329:10:13","nodeType":"VariableDeclaration","scope":2436,"src":"2321:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"_sharesAmount","nameLocation":"2357:13:13","nodeType":"VariableDeclaration","scope":2436,"src":"2349:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2349:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2311:65:13"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2436,"src":"2395:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:9:13"},"scope":2605,"src":"2288:489:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2468,"nodeType":"Block","src":"2928:386:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2447,"name":"_accrue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2966:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2966:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"2966:9:13"},{"assignments":[2451],"declarations":[{"constant":false,"id":2451,"mutability":"mutable","name":"tokenAmount","nameLocation":"3064:11:13","nodeType":"VariableDeclaration","scope":2468,"src":"3056:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3056:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2459,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2454,"name":"getTotalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"3116:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2456,"name":"getTotalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3151:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3151:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2452,"name":"_sharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"3078:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:10:13","memberName":"mulDivDown","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"3078:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3078:99:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3056:121:13"},{"expression":{"arguments":[{"id":2461,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"3245:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2462,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"3254:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2463,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"3266:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"3232:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"nodeType":"ExpressionStatement","src":"3232:46:13"},{"expression":{"id":2466,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"3296:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2446,"id":2467,"nodeType":"Return","src":"3289:18:13"}]},"functionSelector":"6d780459","id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"transferSharesFrom","nameLocation":"2792:18:13","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"_sender","nameLocation":"2828:7:13","nodeType":"VariableDeclaration","scope":2469,"src":"2820:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"2820:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"_recipient","nameLocation":"2853:10:13","nodeType":"VariableDeclaration","scope":2469,"src":"2845:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"2845:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"_sharesAmount","nameLocation":"2881:13:13","nodeType":"VariableDeclaration","scope":2469,"src":"2873:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2810:90:13"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2469,"src":"2919:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2918:9:13"},"scope":2605,"src":"2783:531:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2479,"nodeType":"Block","src":"3381:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2474,"name":"totalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"3398:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2475,"name":"_getAccruedInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"3417:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3398:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2473,"id":2478,"nodeType":"Return","src":"3391:47:13"}]},"functionSelector":"37cfdaca","id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalPooledEther","nameLocation":"3329:19:13","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[],"src":"3348:2:13"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"3372:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3372:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3371:9:13"},"scope":2605,"src":"3320:125:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2487,"nodeType":"Block","src":"3507:35:13","statements":[{"expression":{"id":2485,"name":"totalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"3524:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2484,"id":2486,"nodeType":"Return","src":"3517:18:13"}]},"functionSelector":"d5002f2e","id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalShares","nameLocation":"3460:14:13","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"3474:2:13"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"3498:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3497:9:13"},"scope":2605,"src":"3451:91:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2504,"nodeType":"Block","src":"3652:87:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2498,"name":"getTotalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"3692:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2500,"name":"getTotalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3715:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3715:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2496,"name":"_rethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"3669:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3681:10:13","memberName":"mulDivDown","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"3669:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3669:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2495,"id":2503,"nodeType":"Return","src":"3662:70:13"}]},"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"3548:25:13","text":"IRocketTokenRETH ///"},"functionSelector":"8b32fa23","id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"getEthValue","nameLocation":"3587:11:13","nodeType":"FunctionDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"_rethAmount","nameLocation":"3607:11:13","nodeType":"VariableDeclaration","scope":2505,"src":"3599:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3599:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3598:21:13"},"returnParameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2505,"src":"3643:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3642:9:13"},"scope":2605,"src":"3578:161:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2520,"nodeType":"Block","src":"3819:86:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2514,"name":"getTotalShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3858:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2516,"name":"getTotalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"3876:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3876:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2512,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"3836:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3847:10:13","memberName":"mulDivDown","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"3836:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3836:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2511,"id":2519,"nodeType":"Return","src":"3829:69:13"}]},"functionSelector":"4346f03e","id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"getRethValue","nameLocation":"3754:12:13","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"_ethAmount","nameLocation":"3775:10:13","nodeType":"VariableDeclaration","scope":2521,"src":"3767:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3767:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3766:20:13"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"3810:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3809:9:13"},"scope":2605,"src":"3745:160:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2536,"nodeType":"Block","src":"4001:50:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2529,"name":"_accrue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"4011:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4011:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2531,"nodeType":"ExpressionStatement","src":"4011:9:13"},{"expression":{"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2532,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"4030:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2533,"name":"_rate_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"4038:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4030:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2535,"nodeType":"ExpressionStatement","src":"4030:14:13"}]},"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"3911:13:13","text":"Mock ///"},"functionSelector":"34fcf437","id":2537,"implemented":true,"kind":"function","modifiers":[{"id":2527,"kind":"modifierInvocation","modifierName":{"id":2526,"name":"requiresAuthDuringCompetition","nameLocations":["3971:29:13"],"nodeType":"IdentifierPath","referencedDeclaration":2213,"src":"3971:29:13"},"nodeType":"ModifierInvocation","src":"3971:29:13"}],"name":"setRate","nameLocation":"3938:7:13","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"_rate_","nameLocation":"3954:6:13","nodeType":"VariableDeclaration","scope":2537,"src":"3946:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3945:16:13"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"4001:0:13"},"scope":2605,"src":"3929:122:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2544,"nodeType":"Block","src":"4108:29:13","statements":[{"expression":{"id":2542,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"4125:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2541,"id":2543,"nodeType":"Return","src":"4118:12:13"}]},"functionSelector":"679aefce","id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"4066:7:13","nodeType":"FunctionDefinition","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[],"src":"4073:2:13"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2545,"src":"4099:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:13"},"scope":2605,"src":"4057:80:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2567,"nodeType":"Block","src":"4171:177:13","statements":[{"assignments":[2549],"declarations":[{"constant":false,"id":2549,"mutability":"mutable","name":"interest","nameLocation":"4189:8:13","nodeType":"VariableDeclaration","scope":2567,"src":"4181:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"4181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2550,"name":"_getAccruedInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"4200:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4200:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4181:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"4235:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4235:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2561,"nodeType":"IfStatement","src":"4231:71:13","trueBody":{"id":2560,"nodeType":"Block","src":"4249:53:13","statements":[{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2556,"name":"totalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"4263:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2557,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"4283:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4263:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"4263:28:13"}]}},{"expression":{"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"_lastUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4311:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2563,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4326:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4332:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4326:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4311:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2566,"nodeType":"ExpressionStatement","src":"4311:30:13"}]},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"_accrue","nameLocation":"4152:7:13","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[],"src":"4159:2:13"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"4171:0:13"},"scope":2605,"src":"4143:205:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2603,"nodeType":"Block","src":"4417:327:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"4431:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4440:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4431:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"nodeType":"IfStatement","src":"4427:49:13","trueBody":{"id":2578,"nodeType":"Block","src":"4443:33:13","statements":[{"expression":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4464:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2572,"id":2577,"nodeType":"Return","src":"4457:8:13"}]}},{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"timeElapsed","nameLocation":"4547:11:13","nodeType":"VariableDeclaration","scope":2603,"src":"4539:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2590,"initialValue":{"arguments":[{"hexValue":"333635","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4615:8:13","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2582,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4562:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"4562:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2584,"name":"_lastUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"4580:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4562:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4561:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:7:13","memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"4561:40:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4539:94:13"},{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"accrued","nameLocation":"4651:7:13","nodeType":"VariableDeclaration","scope":2603,"src":"4643:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"arguments":[{"id":2597,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"4700:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2595,"name":"_rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"4686:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4692:7:13","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"4686:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2593,"name":"totalPooledEther","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"4661:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4678:7:13","memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"4661:24:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4643:70:13"},{"expression":{"id":2601,"name":"accrued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"4730:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2572,"id":2602,"nodeType":"Return","src":"4723:14:13"}]},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccruedInterest","nameLocation":"4363:19:13","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[],"src":"4382:2:13"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"4408:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4408:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4407:9:13"},"scope":2605,"src":"4354:390:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2606,"src":"811:3935:13","usedErrors":[],"usedEvents":[2614,2621,2795,2801,2809,2816,3093,3101]}],"src":"39:4708:13"},"id":13},"solmate/auth/Auth.sol":{"ast":{"absolutePath":"solmate/auth/Auth.sol","exportedSymbols":{"Auth":[2764],"Authority":[2777]},"id":2778,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2607,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Auth","contractDependencies":[],"contractKind":"contract","documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"68:301:14","text":"@notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\n @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)"},"fullyImplemented":true,"id":2764,"linearizedBaseContracts":[2764],"name":"Auth","nameLocation":"387:4:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2614,"name":"OwnershipTransferred","nameLocation":"404:20:14","nodeType":"EventDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"441:4:14","nodeType":"VariableDeclaration","scope":2614,"src":"425:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"463:8:14","nodeType":"VariableDeclaration","scope":2614,"src":"447:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2611,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:48:14"},"src":"398:75:14"},{"anonymous":false,"eventSelector":"a3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b76389980198","id":2621,"name":"AuthorityUpdated","nameLocation":"485:16:14","nodeType":"EventDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"518:4:14","nodeType":"VariableDeclaration","scope":2621,"src":"502:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2619,"indexed":true,"mutability":"mutable","name":"newAuthority","nameLocation":"542:12:14","nodeType":"VariableDeclaration","scope":2621,"src":"524:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2618,"nodeType":"UserDefinedTypeName","pathNode":{"id":2617,"name":"Authority","nameLocations":["524:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"524:9:14"},"referencedDeclaration":2777,"src":"524:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"src":"501:54:14"},"src":"479:77:14"},{"constant":false,"functionSelector":"8da5cb5b","id":2623,"mutability":"mutable","name":"owner","nameLocation":"577:5:14","nodeType":"VariableDeclaration","scope":2764,"src":"562:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bf7e214f","id":2626,"mutability":"mutable","name":"authority","nameLocation":"606:9:14","nodeType":"VariableDeclaration","scope":2764,"src":"589:26:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2625,"nodeType":"UserDefinedTypeName","pathNode":{"id":2624,"name":"Authority","nameLocations":["589:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"589:9:14"},"referencedDeclaration":2777,"src":"589:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"public"},{"body":{"id":2654,"nodeType":"Block","src":"672:174:14","statements":[{"expression":{"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2634,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"682:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2635,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"690:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"682:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2637,"nodeType":"ExpressionStatement","src":"682:14:14"},{"expression":{"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"706:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2639,"name":"_authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"718:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"src":"706:22:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"id":2641,"nodeType":"ExpressionStatement","src":"706:22:14"},{"eventCall":{"arguments":[{"expression":{"id":2643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"765:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"769:6:14","memberName":"sender","nodeType":"MemberAccess","src":"765:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2645,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"777:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2642,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"744:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"744:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"EmitStatement","src":"739:45:14"},{"eventCall":{"arguments":[{"expression":{"id":2649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"816:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"820:6:14","memberName":"sender","nodeType":"MemberAccess","src":"816:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2651,"name":"_authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"828:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}],"id":2648,"name":"AuthorityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"799:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_contract$_Authority_$2777_$returns$__$","typeString":"function (address,contract Authority)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"799:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2653,"nodeType":"EmitStatement","src":"794:45:14"}]},"id":2655,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"_owner","nameLocation":"642:6:14","nodeType":"VariableDeclaration","scope":2655,"src":"634:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"_authority","nameLocation":"660:10:14","nodeType":"VariableDeclaration","scope":2655,"src":"650:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2630,"nodeType":"UserDefinedTypeName","pathNode":{"id":2629,"name":"Authority","nameLocations":["650:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"650:9:14"},"referencedDeclaration":2777,"src":"650:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"src":"633:38:14"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[],"src":"672:0:14"},"scope":2764,"src":"622:224:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"884:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2659,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"915:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"919:6:14","memberName":"sender","nodeType":"MemberAccess","src":"915:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2661,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"927:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:3:14","memberName":"sig","nodeType":"MemberAccess","src":"927:7:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2658,"name":"isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"902:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"554e415554484f52495a4544","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"937:14:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","typeString":"literal_string \"UNAUTHORIZED\""},"value":"UNAUTHORIZED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528","typeString":"literal_string \"UNAUTHORIZED\""}],"id":2657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"894:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"894:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2666,"nodeType":"ExpressionStatement","src":"894:58:14"},{"id":2667,"nodeType":"PlaceholderStatement","src":"963:1:14"}]},"id":2669,"name":"requiresAuth","nameLocation":"861:12:14","nodeType":"ModifierDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[],"src":"873:2:14"},"src":"852:119:14","virtual":true,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"1070:447:14","statements":[{"assignments":[2680],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"auth","nameLocation":"1090:4:14","nodeType":"VariableDeclaration","scope":2708,"src":"1080:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2679,"nodeType":"UserDefinedTypeName","pathNode":{"id":2678,"name":"Authority","nameLocations":["1080:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"1080:9:14"},"referencedDeclaration":2777,"src":"1080:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"id":2682,"initialValue":{"id":2681,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1097:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"nodeType":"VariableDeclarationStatement","src":"1080:26:14"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2685,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1423:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1415:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2683,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:14","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1415:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1440:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1432:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:14","typeDescriptions":{}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1432:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1415:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":2694,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1459:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2697,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1473:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Auth_$2764","typeString":"contract Auth"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Auth_$2764","typeString":"contract Auth"}],"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1465:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:14","typeDescriptions":{}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1465:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2699,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"1480:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2692,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"1446:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:7:14","memberName":"canCall","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"1446:12:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,address,bytes4) view external returns (bool)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1446:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1415:77:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1414:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1497:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2704,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1505:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1497:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1414:96:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2677,"id":2707,"nodeType":"Return","src":"1407:103:14"}]},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"isAuthorized","nameLocation":"986:12:14","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"user","nameLocation":"1007:4:14","nodeType":"VariableDeclaration","scope":2709,"src":"999:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"functionSig","nameLocation":"1020:11:14","nodeType":"VariableDeclaration","scope":2709,"src":"1013:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2672,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1013:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"998:34:14"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"1064:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"1064:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1063:6:14"},"scope":2764,"src":"977:540:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2744,"nodeType":"Block","src":"1584:373:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1780:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1784:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1780:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1794:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1780:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":2722,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1821:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1821:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2726,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1841:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Auth_$2764","typeString":"contract Auth"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Auth_$2764","typeString":"contract Auth"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1833:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:14","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1833:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1848:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:3:14","memberName":"sig","nodeType":"MemberAccess","src":"1848:7:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2720,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1803:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1813:7:14","memberName":"canCall","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"1803:17:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,address,bytes4) view external returns (bool)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1780:76:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:85:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2733,"nodeType":"ExpressionStatement","src":"1772:85:14"},{"expression":{"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2734,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1868:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2735,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"1880:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"src":"1868:24:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"id":2737,"nodeType":"ExpressionStatement","src":"1868:24:14"},{"eventCall":{"arguments":[{"expression":{"id":2739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1925:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1929:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1925:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2741,"name":"newAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"1937:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}],"id":2738,"name":"AuthorityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1908:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_contract$_Authority_$2777_$returns$__$","typeString":"function (address,contract Authority)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2743,"nodeType":"EmitStatement","src":"1903:47:14"}]},"functionSelector":"7a9e5e4b","id":2745,"implemented":true,"kind":"function","modifiers":[],"name":"setAuthority","nameLocation":"1532:12:14","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"newAuthority","nameLocation":"1555:12:14","nodeType":"VariableDeclaration","scope":2745,"src":"1545:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2711,"nodeType":"UserDefinedTypeName","pathNode":{"id":2710,"name":"Authority","nameLocations":["1545:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"1545:9:14"},"referencedDeclaration":2777,"src":"1545:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"src":"1544:24:14"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"1584:0:14"},"scope":2764,"src":"1523:434:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2762,"nodeType":"Block","src":"2036:91:14","statements":[{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2046:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2753,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"2054:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2046:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2755,"nodeType":"ExpressionStatement","src":"2046:16:14"},{"eventCall":{"arguments":[{"expression":{"id":2757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2099:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2099:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2759,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"2111:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2756,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"2078:20:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2078:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2761,"nodeType":"EmitStatement","src":"2073:47:14"}]},"functionSelector":"f2fde38b","id":2763,"implemented":true,"kind":"function","modifiers":[{"id":2750,"kind":"modifierInvocation","modifierName":{"id":2749,"name":"requiresAuth","nameLocations":["2023:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2669,"src":"2023:12:14"},"nodeType":"ModifierInvocation","src":"2023:12:14"}],"name":"transferOwnership","nameLocation":"1972:17:14","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"newOwner","nameLocation":"1998:8:14","nodeType":"VariableDeclaration","scope":2763,"src":"1990:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1989:18:14"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"2036:0:14"},"scope":2764,"src":"1963:164:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2778,"src":"369:1760:14","usedErrors":[],"usedEvents":[2614,2621]},{"abstract":false,"baseContracts":[],"canonicalName":"Authority","contractDependencies":[],"contractKind":"interface","documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"2131:291:14","text":"@notice A generic interface for a contract which provides authorization data to an Auth instance.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\n @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)"},"fullyImplemented":false,"id":2777,"linearizedBaseContracts":[2777],"name":"Authority","nameLocation":"2432:9:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b7009613","id":2776,"implemented":false,"kind":"function","modifiers":[],"name":"canCall","nameLocation":"2457:7:14","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"user","nameLocation":"2482:4:14","nodeType":"VariableDeclaration","scope":2776,"src":"2474:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"target","nameLocation":"2504:6:14","nodeType":"VariableDeclaration","scope":2776,"src":"2496:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"functionSig","nameLocation":"2527:11:14","nodeType":"VariableDeclaration","scope":2776,"src":"2520:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2770,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2520:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2464:80:14"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2776,"src":"2568:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2773,"name":"bool","nodeType":"ElementaryTypeName","src":"2568:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2567:6:14"},"scope":2777,"src":"2448:126:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2778,"src":"2422:154:14","usedErrors":[],"usedEvents":[]}],"src":"42:2535:14"},"id":14},"solmate/auth/authorities/MultiRolesAuthority.sol":{"ast":{"absolutePath":"solmate/auth/authorities/MultiRolesAuthority.sol","exportedSymbols":{"Auth":[2764],"Authority":[2777],"MultiRolesAuthority":[3082]},"id":3083,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2779,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:15"},{"absolutePath":"solmate/auth/Auth.sol","file":"../Auth.sol","id":2782,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3083,"sourceUnit":2778,"src":"68:44:15","symbolAliases":[{"foreign":{"id":2780,"name":"Auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"76:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2781,"name":"Authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"82:9:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2784,"name":"Auth","nameLocations":["359:4:15"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"359:4:15"},"id":2785,"nodeType":"InheritanceSpecifier","src":"359:4:15"},{"baseName":{"id":2786,"name":"Authority","nameLocations":["365:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"365:9:15"},"id":2787,"nodeType":"InheritanceSpecifier","src":"365:9:15"}],"canonicalName":"MultiRolesAuthority","contractDependencies":[],"contractKind":"contract","documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"114:213:15","text":"@notice Flexible and target agnostic role based Authority that supports up to 256 roles.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)"},"fullyImplemented":true,"id":3082,"linearizedBaseContracts":[3082,2777,2764],"name":"MultiRolesAuthority","nameLocation":"336:19:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf2","id":2795,"name":"UserRoleUpdated","nameLocation":"566:15:15","nodeType":"EventDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"598:4:15","nodeType":"VariableDeclaration","scope":2795,"src":"582:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2791,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"618:4:15","nodeType":"VariableDeclaration","scope":2795,"src":"604:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2790,"name":"uint8","nodeType":"ElementaryTypeName","src":"604:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2793,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"629:7:15","nodeType":"VariableDeclaration","scope":2795,"src":"624:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2792,"name":"bool","nodeType":"ElementaryTypeName","src":"624:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"581:56:15"},"src":"560:78:15"},{"anonymous":false,"eventSelector":"36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103","id":2801,"name":"PublicCapabilityUpdated","nameLocation":"650:23:15","nodeType":"EventDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"indexed":true,"mutability":"mutable","name":"functionSig","nameLocation":"689:11:15","nodeType":"VariableDeclaration","scope":2801,"src":"674:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2796,"name":"bytes4","nodeType":"ElementaryTypeName","src":"674:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":2799,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"707:7:15","nodeType":"VariableDeclaration","scope":2801,"src":"702:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2798,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"673:42:15"},"src":"644:72:15"},{"anonymous":false,"eventSelector":"bfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b151","id":2809,"name":"RoleCapabilityUpdated","nameLocation":"728:21:15","nodeType":"EventDefinition","parameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"764:4:15","nodeType":"VariableDeclaration","scope":2809,"src":"750:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2802,"name":"uint8","nodeType":"ElementaryTypeName","src":"750:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2805,"indexed":true,"mutability":"mutable","name":"functionSig","nameLocation":"785:11:15","nodeType":"VariableDeclaration","scope":2809,"src":"770:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2804,"name":"bytes4","nodeType":"ElementaryTypeName","src":"770:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":2807,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"803:7:15","nodeType":"VariableDeclaration","scope":2809,"src":"798:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2806,"name":"bool","nodeType":"ElementaryTypeName","src":"798:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"749:62:15"},"src":"722:90:15"},{"anonymous":false,"eventSelector":"a4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff2065","id":2816,"name":"TargetCustomAuthorityUpdated","nameLocation":"824:28:15","nodeType":"EventDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"869:6:15","nodeType":"VariableDeclaration","scope":2816,"src":"853:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2814,"indexed":true,"mutability":"mutable","name":"authority","nameLocation":"895:9:15","nodeType":"VariableDeclaration","scope":2816,"src":"877:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2813,"nodeType":"UserDefinedTypeName","pathNode":{"id":2812,"name":"Authority","nameLocations":["877:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"877:9:15"},"referencedDeclaration":2777,"src":"877:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"src":"852:53:15"},"src":"818:88:15"},{"body":{"id":2828,"nodeType":"Block","src":"1169:2:15","statements":[]},"id":2829,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2824,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"1149:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2825,"name":"_authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1157:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"id":2826,"kind":"baseConstructorSpecifier","modifierName":{"id":2823,"name":"Auth","nameLocations":["1144:4:15"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"1144:4:15"},"nodeType":"ModifierInvocation","src":"1144:24:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"_owner","nameLocation":"1114:6:15","nodeType":"VariableDeclaration","scope":2829,"src":"1106:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"_authority","nameLocation":"1132:10:15","nodeType":"VariableDeclaration","scope":2829,"src":"1122:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2820,"nodeType":"UserDefinedTypeName","pathNode":{"id":2819,"name":"Authority","nameLocations":["1122:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"1122:9:15"},"referencedDeclaration":2777,"src":"1122:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"src":"1105:38:15"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"1169:0:15"},"scope":3082,"src":"1094:77:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"c53a3985","id":2834,"mutability":"mutable","name":"getTargetCustomAuthority","nameLocation":"1406:24:15","nodeType":"VariableDeclaration","scope":3082,"src":"1369:61:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_Authority_$2777_$","typeString":"mapping(address => contract Authority)"},"typeName":{"id":2833,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"1377:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1369:29:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_Authority_$2777_$","typeString":"mapping(address => contract Authority)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2832,"nodeType":"UserDefinedTypeName","pathNode":{"id":2831,"name":"Authority","nameLocations":["1388:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"1388:9:15"},"referencedDeclaration":2777,"src":"1388:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}},"visibility":"public"},{"constant":false,"functionSelector":"06a36aee","id":2838,"mutability":"mutable","name":"getUserRoles","nameLocation":"1657:12:15","nodeType":"VariableDeclaration","scope":3082,"src":"1622:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":2837,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1622:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1641:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"0bade8a4","id":2842,"mutability":"mutable","name":"isCapabilityPublic","nameLocation":"1707:18:15","nodeType":"VariableDeclaration","scope":3082,"src":"1676:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":2841,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2839,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1684:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"1676:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2840,"name":"bool","nodeType":"ElementaryTypeName","src":"1694:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ed0d0efb","id":2846,"mutability":"mutable","name":"getRolesWithCapability","nameLocation":"1766:22:15","nodeType":"VariableDeclaration","scope":3082,"src":"1732:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bytes32_$","typeString":"mapping(bytes4 => bytes32)"},"typeName":{"id":2845,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2843,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1740:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"1732:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bytes32_$","typeString":"mapping(bytes4 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1750:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"body":{"id":2869,"nodeType":"Block","src":"1882:70:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2857,"name":"getUserRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"1908:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2859,"indexExpression":{"id":2858,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1921:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1908:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1900:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:15","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1900:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2861,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1931:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1900:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1899:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1939:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1899:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1899:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2854,"id":2868,"nodeType":"Return","src":"1892:53:15"}]},"functionSelector":"ea7ca276","id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"doesUserHaveRole","nameLocation":"1804:16:15","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"user","nameLocation":"1829:4:15","nodeType":"VariableDeclaration","scope":2870,"src":"1821:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"1821:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"role","nameLocation":"1841:4:15","nodeType":"VariableDeclaration","scope":2870,"src":"1835:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2849,"name":"uint8","nodeType":"ElementaryTypeName","src":"1835:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1820:26:15"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"1876:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2852,"name":"bool","nodeType":"ElementaryTypeName","src":"1876:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1875:6:15"},"scope":3082,"src":"1795:157:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2893,"nodeType":"Block","src":"2057:87:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2881,"name":"getRolesWithCapability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"2083:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bytes32_$","typeString":"mapping(bytes4 => bytes32)"}},"id":2883,"indexExpression":{"id":2882,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2106:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2083:35:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2075:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:15","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2075:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2885,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"2123:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2075:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2074:54:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2131:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2074:58:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2136:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2074:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2878,"id":2892,"nodeType":"Return","src":"2067:70:15"}]},"functionSelector":"e688747b","id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"doesRoleHaveCapability","nameLocation":"1967:22:15","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"role","nameLocation":"1996:4:15","nodeType":"VariableDeclaration","scope":2894,"src":"1990:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2871,"name":"uint8","nodeType":"ElementaryTypeName","src":"1990:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"functionSig","nameLocation":"2009:11:15","nodeType":"VariableDeclaration","scope":2894,"src":"2002:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2873,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2002:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1989:32:15"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2894,"src":"2051:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2876,"name":"bool","nodeType":"ElementaryTypeName","src":"2051:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2050:6:15"},"scope":3082,"src":"1958:186:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2776],"body":{"id":2947,"nodeType":"Block","src":"2477:324:15","statements":[{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"customAuthority","nameLocation":"2497:15:15","nodeType":"VariableDeclaration","scope":2947,"src":"2487:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2907,"nodeType":"UserDefinedTypeName","pathNode":{"id":2906,"name":"Authority","nameLocations":["2487:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"2487:9:15"},"referencedDeclaration":2777,"src":"2487:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"id":2912,"initialValue":{"baseExpression":{"id":2909,"name":"getTargetCustomAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"2515:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_Authority_$2777_$","typeString":"mapping(address => contract Authority)"}},"id":2911,"indexExpression":{"id":2910,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2540:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2515:32:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"nodeType":"VariableDeclarationStatement","src":"2487:60:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2915,"name":"customAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"2570:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2562:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2913,"name":"address","nodeType":"ElementaryTypeName","src":"2562:7:15","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2562:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2598:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2590:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"2590:7:15","typeDescriptions":{}}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2562:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"nodeType":"IfStatement","src":"2558:101:15","trueBody":{"expression":{"arguments":[{"id":2924,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2633:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2925,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2639:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2926,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2647:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2922,"name":"customAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"2609:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2625:7:15","memberName":"canCall","nodeType":"MemberAccess","referencedDeclaration":2776,"src":"2609:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,address,bytes4) view external returns (bool)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2609:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2905,"id":2928,"nodeType":"Return","src":"2602:57:15"}},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2930,"name":"isCapabilityPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"2689:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":2932,"indexExpression":{"id":2931,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2708:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2689:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2732:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2724:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2724:7:15","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2937,"name":"getUserRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"2738:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2939,"indexExpression":{"id":2938,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2751:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2738:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"baseExpression":{"id":2940,"name":"getRolesWithCapability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"2759:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bytes32_$","typeString":"mapping(bytes4 => bytes32)"}},"id":2942,"indexExpression":{"id":2941,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2782:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2759:35:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2738:56:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2724:70:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2689:105:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2905,"id":2946,"nodeType":"Return","src":"2670:124:15"}]},"functionSelector":"b7009613","id":2948,"implemented":true,"kind":"function","modifiers":[],"name":"canCall","nameLocation":"2345:7:15","nodeType":"FunctionDefinition","overrides":{"id":2902,"nodeType":"OverrideSpecifier","overrides":[],"src":"2453:8:15"},"parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"user","nameLocation":"2370:4:15","nodeType":"VariableDeclaration","scope":2948,"src":"2362:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"target","nameLocation":"2392:6:15","nodeType":"VariableDeclaration","scope":2948,"src":"2384:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"functionSig","nameLocation":"2415:11:15","nodeType":"VariableDeclaration","scope":2948,"src":"2408:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2899,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2408:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2352:80:15"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2948,"src":"2471:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2903,"name":"bool","nodeType":"ElementaryTypeName","src":"2471:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2470:6:15"},"scope":3082,"src":"2336:465:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2969,"nodeType":"Block","src":"3111:136:15","statements":[{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2958,"name":"getTargetCustomAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"3121:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_Authority_$2777_$","typeString":"mapping(address => contract Authority)"}},"id":2960,"indexExpression":{"id":2959,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"3146:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3121:32:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2961,"name":"customAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"3156:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"src":"3121:50:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"id":2963,"nodeType":"ExpressionStatement","src":"3121:50:15"},{"eventCall":{"arguments":[{"id":2965,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"3216:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2966,"name":"customAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"3224:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}],"id":2964,"name":"TargetCustomAuthorityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"3187:28:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_contract$_Authority_$2777_$returns$__$","typeString":"function (address,contract Authority)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3187:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2968,"nodeType":"EmitStatement","src":"3182:58:15"}]},"functionSelector":"728b952b","id":2970,"implemented":true,"kind":"function","modifiers":[{"id":2956,"kind":"modifierInvocation","modifierName":{"id":2955,"name":"requiresAuth","nameLocations":["3098:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2669,"src":"3098:12:15"},"nodeType":"ModifierInvocation","src":"3098:12:15"}],"name":"setTargetCustomAuthority","nameLocation":"3015:24:15","nodeType":"FunctionDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"target","nameLocation":"3048:6:15","nodeType":"VariableDeclaration","scope":2970,"src":"3040:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"3040:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"customAuthority","nameLocation":"3066:15:15","nodeType":"VariableDeclaration","scope":2970,"src":"3056:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"},"typeName":{"id":2952,"nodeType":"UserDefinedTypeName","pathNode":{"id":2951,"name":"Authority","nameLocations":["3056:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2777,"src":"3056:9:15"},"referencedDeclaration":2777,"src":"3056:9:15","typeDescriptions":{"typeIdentifier":"t_contract$_Authority_$2777","typeString":"contract Authority"}},"visibility":"internal"}],"src":"3039:43:15"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[],"src":"3111:0:15"},"scope":3082,"src":"3006:241:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2990,"nodeType":"Block","src":"3539:119:15","statements":[{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2979,"name":"isCapabilityPublic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"3549:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":2981,"indexExpression":{"id":2980,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3568:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3549:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2982,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"3583:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3549:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2984,"nodeType":"ExpressionStatement","src":"3549:41:15"},{"eventCall":{"arguments":[{"id":2986,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3630:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2987,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"3643:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2985,"name":"PublicCapabilityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"3606:23:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes4_$_t_bool_$returns$__$","typeString":"function (bytes4,bool)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3606:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"EmitStatement","src":"3601:50:15"}]},"functionSelector":"4b5159da","id":2991,"implemented":true,"kind":"function","modifiers":[{"id":2977,"kind":"modifierInvocation","modifierName":{"id":2976,"name":"requiresAuth","nameLocations":["3526:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2669,"src":"3526:12:15"},"nodeType":"ModifierInvocation","src":"3526:12:15"}],"name":"setPublicCapability","nameLocation":"3457:19:15","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"functionSig","nameLocation":"3484:11:15","nodeType":"VariableDeclaration","scope":2991,"src":"3477:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2971,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3477:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"enabled","nameLocation":"3502:7:15","nodeType":"VariableDeclaration","scope":2991,"src":"3497:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2973,"name":"bool","nodeType":"ElementaryTypeName","src":"3497:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3476:34:15"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[],"src":"3539:0:15"},"scope":3082,"src":"3448:210:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3035,"nodeType":"Block","src":"3972:218:15","statements":[{"condition":{"id":3002,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"3986:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3027,"nodeType":"Block","src":"4066:66:15","statements":[{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3015,"name":"getUserRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4080:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":3017,"indexExpression":{"id":3016,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"4093:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"4102:19:15","subExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3021,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4116:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4111:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4103:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4103:7:15","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4080:41:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3026,"nodeType":"ExpressionStatement","src":"4080:41:15"}]},"id":3028,"nodeType":"IfStatement","src":"3982:150:15","trueBody":{"id":3014,"nodeType":"Block","src":"3995:65:15","statements":[{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3003,"name":"getUserRoles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4009:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":3005,"indexExpression":{"id":3004,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"4022:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4009:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4039:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3009,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4044:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4039:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4031:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4031:7:15","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4009:40:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3013,"nodeType":"ExpressionStatement","src":"4009:40:15"}]}},{"eventCall":{"arguments":[{"id":3030,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"4163:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3031,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4169:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3032,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4175:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3029,"name":"UserRoleUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4147:15:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$returns$__$","typeString":"function (address,uint8,bool)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4147:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"EmitStatement","src":"4142:41:15"}]},"functionSelector":"67aff484","id":3036,"implemented":true,"kind":"function","modifiers":[{"id":3000,"kind":"modifierInvocation","modifierName":{"id":2999,"name":"requiresAuth","nameLocations":["3959:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2669,"src":"3959:12:15"},"nodeType":"ModifierInvocation","src":"3959:12:15"}],"name":"setUserRole","nameLocation":"3862:11:15","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"user","nameLocation":"3891:4:15","nodeType":"VariableDeclaration","scope":3036,"src":"3883:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"3883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"role","nameLocation":"3911:4:15","nodeType":"VariableDeclaration","scope":3036,"src":"3905:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2994,"name":"uint8","nodeType":"ElementaryTypeName","src":"3905:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"enabled","nameLocation":"3930:7:15","nodeType":"VariableDeclaration","scope":3036,"src":"3925:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2996,"name":"bool","nodeType":"ElementaryTypeName","src":"3925:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3873:70:15"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[],"src":"3972:0:15"},"scope":3082,"src":"3853:337:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3080,"nodeType":"Block","src":"4521:265:15","statements":[{"condition":{"id":3047,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"4535:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3072,"nodeType":"Block","src":"4632:83:15","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3060,"name":"getRolesWithCapability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"4646:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bytes32_$","typeString":"mapping(bytes4 => bytes32)"}},"id":3062,"indexExpression":{"id":3061,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4669:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4646:35:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"&=","rightHandSide":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"4685:19:15","subExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4694:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3066,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"4699:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4694:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:15","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4646:58:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3071,"nodeType":"ExpressionStatement","src":"4646:58:15"}]},"id":3073,"nodeType":"IfStatement","src":"4531:184:15","trueBody":{"id":3059,"nodeType":"Block","src":"4544:82:15","statements":[{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3048,"name":"getRolesWithCapability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"4558:22:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bytes32_$","typeString":"mapping(bytes4 => bytes32)"}},"id":3050,"indexExpression":{"id":3049,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4581:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4558:35:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4605:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3054,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"4610:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4605:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4597:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4597:7:15","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4597:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4558:57:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3058,"nodeType":"ExpressionStatement","src":"4558:57:15"}]}},{"eventCall":{"arguments":[{"id":3075,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"4752:4:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3076,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4758:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3077,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"4771:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3074,"name":"RoleCapabilityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"4730:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$_t_bytes4_$_t_bool_$returns$__$","typeString":"function (uint8,bytes4,bool)"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3079,"nodeType":"EmitStatement","src":"4725:54:15"}]},"functionSelector":"0ea9b75b","id":3081,"implemented":true,"kind":"function","modifiers":[{"id":3045,"kind":"modifierInvocation","modifierName":{"id":3044,"name":"requiresAuth","nameLocations":["4508:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2669,"src":"4508:12:15"},"nodeType":"ModifierInvocation","src":"4508:12:15"}],"name":"setRoleCapability","nameLocation":"4399:17:15","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"role","nameLocation":"4432:4:15","nodeType":"VariableDeclaration","scope":3081,"src":"4426:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3037,"name":"uint8","nodeType":"ElementaryTypeName","src":"4426:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"functionSig","nameLocation":"4453:11:15","nodeType":"VariableDeclaration","scope":3081,"src":"4446:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3039,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4446:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"enabled","nameLocation":"4479:7:15","nodeType":"VariableDeclaration","scope":3081,"src":"4474:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3041,"name":"bool","nodeType":"ElementaryTypeName","src":"4474:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4416:76:15"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[],"src":"4521:0:15"},"scope":3082,"src":"4390:396:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3083,"src":"327:4461:15","usedErrors":[],"usedEvents":[2614,2621,2795,2801,2809,2816]}],"src":"42:4747:15"},"id":15},"solmate/tokens/ERC20.sol":{"ast":{"absolutePath":"solmate/tokens/ERC20.sol","exportedSymbols":{"ERC20":[3470]},"id":3471,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3084,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"68:406:16","text":"@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."},"fullyImplemented":true,"id":3470,"linearizedBaseContracts":[3470],"name":"ERC20","nameLocation":"492:5:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3093,"name":"Transfer","nameLocation":"689:8:16","nodeType":"EventDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"714:4:16","nodeType":"VariableDeclaration","scope":3093,"src":"698:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3089,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"736:2:16","nodeType":"VariableDeclaration","scope":3093,"src":"720:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"720:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3091,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"748:6:16","nodeType":"VariableDeclaration","scope":3093,"src":"740:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:58:16"},"src":"683:73:16"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3101,"name":"Approval","nameLocation":"768:8:16","nodeType":"EventDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"793:5:16","nodeType":"VariableDeclaration","scope":3101,"src":"777:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3094,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3097,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"816:7:16","nodeType":"VariableDeclaration","scope":3101,"src":"800:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3099,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"833:6:16","nodeType":"VariableDeclaration","scope":3101,"src":"825:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:64:16"},"src":"762:79:16"},{"constant":false,"functionSelector":"06fdde03","id":3103,"mutability":"mutable","name":"name","nameLocation":"1045:4:16","nodeType":"VariableDeclaration","scope":3470,"src":"1031:18:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3102,"name":"string","nodeType":"ElementaryTypeName","src":"1031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":3105,"mutability":"mutable","name":"symbol","nameLocation":"1070:6:16","nodeType":"VariableDeclaration","scope":3470,"src":"1056:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3104,"name":"string","nodeType":"ElementaryTypeName","src":"1056:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":3107,"mutability":"immutable","name":"decimals","nameLocation":"1106:8:16","nodeType":"VariableDeclaration","scope":3470,"src":"1083:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3106,"name":"uint8","nodeType":"ElementaryTypeName","src":"1083:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":3109,"mutability":"mutable","name":"totalSupply","nameLocation":"1319:11:16","nodeType":"VariableDeclaration","scope":3470,"src":"1304:26:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":3113,"mutability":"mutable","name":"balanceOf","nameLocation":"1372:9:16","nodeType":"VariableDeclaration","scope":3470,"src":"1337:44:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3112,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1337:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":3119,"mutability":"mutable","name":"allowance","nameLocation":"1443:9:16","nodeType":"VariableDeclaration","scope":3470,"src":"1388:64:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":3118,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"1396:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1388:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3117,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1407:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":3121,"mutability":"immutable","name":"INITIAL_CHAIN_ID","nameLocation":"1670:16:16","nodeType":"VariableDeclaration","scope":3470,"src":"1643:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"immutable","name":"INITIAL_DOMAIN_SEPARATOR","nameLocation":"1720:24:16","nodeType":"VariableDeclaration","scope":3470,"src":"1693:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1693:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"functionSelector":"7ecebe00","id":3127,"mutability":"mutable","name":"nonces","nameLocation":"1786:6:16","nodeType":"VariableDeclaration","scope":3470,"src":"1751:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3126,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"1759:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1751:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":3158,"nodeType":"Block","src":"2084:189:16","statements":[{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3136,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"2094:4:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3137,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2101:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2094:12:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3139,"nodeType":"ExpressionStatement","src":"2094:12:16"},{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"2116:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3141,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"2125:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2116:16:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3143,"nodeType":"ExpressionStatement","src":"2116:16:16"},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"2142:8:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3145,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"2153:9:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2142:20:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3147,"nodeType":"ExpressionStatement","src":"2142:20:16"},{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3148,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2173:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3149,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2192:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2198:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"2192:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3152,"nodeType":"ExpressionStatement","src":"2173:32:16"},{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3153,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"2215:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3154,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2242:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2215:51:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3157,"nodeType":"ExpressionStatement","src":"2215:51:16"}]},"id":3159,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"_name","nameLocation":"2016:5:16","nodeType":"VariableDeclaration","scope":3159,"src":"2002:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3128,"name":"string","nodeType":"ElementaryTypeName","src":"2002:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"_symbol","nameLocation":"2045:7:16","nodeType":"VariableDeclaration","scope":3159,"src":"2031:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3130,"name":"string","nodeType":"ElementaryTypeName","src":"2031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"_decimals","nameLocation":"2068:9:16","nodeType":"VariableDeclaration","scope":3159,"src":"2062:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3132,"name":"uint8","nodeType":"ElementaryTypeName","src":"2062:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1992:91:16"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[],"src":"2084:0:16"},"scope":3470,"src":"1981:292:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"2541:131:16","statements":[{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3168,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"2551:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3172,"indexExpression":{"expression":{"id":3169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:21:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3173,"indexExpression":{"id":3171,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"2573:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2551:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3174,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"2584:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"2551:39:16"},{"eventCall":{"arguments":[{"expression":{"id":3178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2615:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2619:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2615:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3180,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"2627:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"2636:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"2606:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"EmitStatement","src":"2601:42:16"},{"expression":{"hexValue":"74727565","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2661:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3167,"id":3185,"nodeType":"Return","src":"2654:11:16"}]},"functionSelector":"095ea7b3","id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2470:7:16","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"spender","nameLocation":"2486:7:16","nodeType":"VariableDeclaration","scope":3187,"src":"2478:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3160,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3163,"mutability":"mutable","name":"amount","nameLocation":"2503:6:16","nodeType":"VariableDeclaration","scope":3187,"src":"2495:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2495:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:33:16"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"2535:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3165,"name":"bool","nodeType":"ElementaryTypeName","src":"2535:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2534:6:16"},"scope":3470,"src":"2461:211:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3219,"nodeType":"Block","src":"2754:297:16","statements":[{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3196,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"2764:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3199,"indexExpression":{"expression":{"id":3197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2774:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2774:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2764:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3200,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"2789:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2764:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"2764:31:16"},{"id":3209,"nodeType":"UncheckedBlock","src":"2917:58:16","statements":[{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3203,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"2941:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3205,"indexExpression":{"id":3204,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2951:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2941:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"2958:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2941:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"nodeType":"ExpressionStatement","src":"2941:23:16"}]},{"eventCall":{"arguments":[{"expression":{"id":3211,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2999:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2999:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3213,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3011:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3214,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"3015:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3210,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"2990:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3216,"nodeType":"EmitStatement","src":"2985:37:16"},{"expression":{"hexValue":"74727565","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3040:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3195,"id":3218,"nodeType":"Return","src":"3033:11:16"}]},"functionSelector":"a9059cbb","id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2687:8:16","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"to","nameLocation":"2704:2:16","nodeType":"VariableDeclaration","scope":3220,"src":"2696:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"amount","nameLocation":"2716:6:16","nodeType":"VariableDeclaration","scope":3220,"src":"2708:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2695:28:16"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3220,"src":"2748:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3193,"name":"bool","nodeType":"ElementaryTypeName","src":"2748:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2747:6:16"},"scope":3470,"src":"2678:373:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3280,"nodeType":"Block","src":"3181:468:16","statements":[{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"allowed","nameLocation":"3199:7:16","nodeType":"VariableDeclaration","scope":3280,"src":"3191:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3191:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3239,"initialValue":{"baseExpression":{"baseExpression":{"id":3233,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"3209:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3235,"indexExpression":{"id":3234,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3219:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3238,"indexExpression":{"expression":{"id":3236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3225:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3229:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3225:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3209:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3191:45:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"3287:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3303:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3298:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3298:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3312:3:16","memberName":"max","nodeType":"MemberAccess","src":"3298:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3287:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"nodeType":"IfStatement","src":"3283:80:16","trueBody":{"expression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3247,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"3317:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3251,"indexExpression":{"id":3248,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3327:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3252,"indexExpression":{"expression":{"id":3249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3333:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3337:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3333:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3317:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"3347:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3254,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3357:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3257,"nodeType":"ExpressionStatement","src":"3317:46:16"}},{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3259,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"3374:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3261,"indexExpression":{"id":3260,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3384:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3374:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3262,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3393:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3374:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3264,"nodeType":"ExpressionStatement","src":"3374:25:16"},{"id":3271,"nodeType":"UncheckedBlock","src":"3521:58:16","statements":[{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3265,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"3545:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3267,"indexExpression":{"id":3266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"3555:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3545:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3268,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3562:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3545:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3270,"nodeType":"ExpressionStatement","src":"3545:23:16"}]},{"eventCall":{"arguments":[{"id":3273,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3603:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"3609:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3275,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3613:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3272,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"3594:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3277,"nodeType":"EmitStatement","src":"3589:31:16"},{"expression":{"hexValue":"74727565","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3638:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3230,"id":3279,"nodeType":"Return","src":"3631:11:16"}]},"functionSelector":"23b872dd","id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3066:12:16","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"from","nameLocation":"3096:4:16","nodeType":"VariableDeclaration","scope":3281,"src":"3088:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"to","nameLocation":"3118:2:16","nodeType":"VariableDeclaration","scope":3281,"src":"3110:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"amount","nameLocation":"3138:6:16","nodeType":"VariableDeclaration","scope":3281,"src":"3130:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3130:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3078:72:16"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3281,"src":"3175:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3228,"name":"bool","nodeType":"ElementaryTypeName","src":"3175:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:6:16"},"scope":3470,"src":"3057:592:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3367,"nodeType":"Block","src":"4027:1294:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4045:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3300,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4057:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4063:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"4057:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4045:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""},"value":"PERMIT_DEADLINE_EXPIRED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e","typeString":"literal_string \"PERMIT_DEADLINE_EXPIRED\""}],"id":3298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4037:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3305,"nodeType":"ExpressionStatement","src":"4037:63:16"},{"id":3360,"nodeType":"UncheckedBlock","src":"4241:1027:16","statements":[{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"recoveredAddress","nameLocation":"4273:16:16","nodeType":"VariableDeclaration","scope":3360,"src":"4265:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3337,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"1901","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4392:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":3313,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4428:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4428:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4602:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":3318,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4555:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:165:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3321,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"4754:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3322,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"4793:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"4834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4873:15:16","subExpression":{"baseExpression":{"id":3324,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"4873:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3326,"indexExpression":{"id":3325,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"4880:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4873:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3328,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4922:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3316,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4511:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4515:6:16","memberName":"encode","nodeType":"MemberAccess","src":"4511:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:449:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3315,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4472:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:514:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3310,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4350:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4354:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"4350:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4350:658:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3309,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4319:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:707:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3333,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"5044:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3334,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"5063:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3335,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"5082:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3308,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"4292:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:805:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4265:832:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5120:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5148:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5140:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"5140:7:16","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5120:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5154:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3346,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5174:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5154:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5120:59:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494e56414c49445f5349474e4552","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5181:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""},"value":"INVALID_SIGNER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c","typeString":"literal_string \"INVALID_SIGNER\""}],"id":3338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5112:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3351,"nodeType":"ExpressionStatement","src":"5112:86:16"},{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3352,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"5213:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3355,"indexExpression":{"id":3353,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5223:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5213:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3356,"indexExpression":{"id":3354,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5241:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5213:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"5252:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5213:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"5213:44:16"}]},{"eventCall":{"arguments":[{"id":3362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5292:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3363,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5299:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"5308:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"5283:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3366,"nodeType":"EmitStatement","src":"5278:36:16"}]},"functionSelector":"d505accf","id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3847:6:16","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"owner","nameLocation":"3871:5:16","nodeType":"VariableDeclaration","scope":3368,"src":"3863:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"3863:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"spender","nameLocation":"3894:7:16","nodeType":"VariableDeclaration","scope":3368,"src":"3886:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"3886:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"value","nameLocation":"3919:5:16","nodeType":"VariableDeclaration","scope":3368,"src":"3911:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"deadline","nameLocation":"3942:8:16","nodeType":"VariableDeclaration","scope":3368,"src":"3934:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"v","nameLocation":"3966:1:16","nodeType":"VariableDeclaration","scope":3368,"src":"3960:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3290,"name":"uint8","nodeType":"ElementaryTypeName","src":"3960:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"r","nameLocation":"3985:1:16","nodeType":"VariableDeclaration","scope":3368,"src":"3977:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3977:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"s","nameLocation":"4004:1:16","nodeType":"VariableDeclaration","scope":3368,"src":"3996:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3996:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3853:158:16"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[],"src":"4027:0:16"},"scope":3470,"src":"3838:1483:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3382,"nodeType":"Block","src":"5393:111:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3373,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5410:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5416:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"5410:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3375,"name":"INITIAL_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"5427:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5410:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3378,"name":"computeDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5473:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5473:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5410:87:16","trueExpression":{"id":3377,"name":"INITIAL_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"5446:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3372,"id":3381,"nodeType":"Return","src":"5403:94:16"}]},"functionSelector":"3644e515","id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"5336:16:16","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[],"src":"5352:2:16"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"5384:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5384:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5383:9:16"},"scope":3470,"src":"5327:177:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3412,"nodeType":"Block","src":"5584:372:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5682:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5672:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5672:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":3397,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5805:4:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3395,"name":"bytes","nodeType":"ElementaryTypeName","src":"5799:5:16","typeDescriptions":{}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":3394,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5789:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"31","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5843:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":3400,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5833:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3403,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5869:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"5869:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3407,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5912:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$3470","typeString":"contract ERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20_$3470","typeString":"contract ERC20"}],"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5904:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3405,"name":"address","nodeType":"ElementaryTypeName","src":"5904:7:16","typeDescriptions":{}}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5904:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3389,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5640:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5644:6:16","memberName":"encode","nodeType":"MemberAccess","src":"5640:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:295:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3388,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5613:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:336:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3387,"id":3411,"nodeType":"Return","src":"5594:355:16"}]},"id":3413,"implemented":true,"kind":"function","modifiers":[],"name":"computeDomainSeparator","nameLocation":"5519:22:16","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[],"src":"5541:2:16"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3413,"src":"5575:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5575:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5574:9:16"},"scope":3470,"src":"5510:446:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3440,"nodeType":"Block","src":"6210:265:16","statements":[{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"6220:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3421,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6235:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6220:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"nodeType":"ExpressionStatement","src":"6220:21:16"},{"id":3430,"nodeType":"UncheckedBlock","src":"6363:58:16","statements":[{"expression":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3424,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"6387:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3426,"indexExpression":{"id":3425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6397:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6387:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3427,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6404:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6387:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3429,"nodeType":"ExpressionStatement","src":"6387:23:16"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6453:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6445:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"6445:7:16","typeDescriptions":{}}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6445:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"6457:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3437,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"6461:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3431,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6436:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"EmitStatement","src":"6431:37:16"}]},"id":3441,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6159:5:16","nodeType":"FunctionDefinition","parameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"to","nameLocation":"6173:2:16","nodeType":"VariableDeclaration","scope":3441,"src":"6165:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3414,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"amount","nameLocation":"6185:6:16","nodeType":"VariableDeclaration","scope":3441,"src":"6177:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:28:16"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[],"src":"6210:0:16"},"scope":3470,"src":"6150:325:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3468,"nodeType":"Block","src":"6543:266:16","statements":[{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3448,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"6553:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3450,"indexExpression":{"id":3449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"6563:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6553:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3451,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"6572:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6553:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"6553:25:16"},{"id":3458,"nodeType":"UncheckedBlock","src":"6697:56:16","statements":[{"expression":{"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3454,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"6721:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"6736:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6721:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3457,"nodeType":"ExpressionStatement","src":"6721:21:16"}]},{"eventCall":{"arguments":[{"id":3460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"6777:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:16","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3465,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"6795:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3459,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"6768:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3467,"nodeType":"EmitStatement","src":"6763:39:16"}]},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6490:5:16","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"from","nameLocation":"6504:4:16","nodeType":"VariableDeclaration","scope":3469,"src":"6496:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"amount","nameLocation":"6518:6:16","nodeType":"VariableDeclaration","scope":3469,"src":"6510:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6495:30:16"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[],"src":"6543:0:16"},"scope":3470,"src":"6481:328:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3471,"src":"474:6337:16","usedErrors":[],"usedEvents":[3093,3101]}],"src":"42:6770:16"},"id":16}},"contracts":{"contracts/src/interfaces/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens."},"returns":{"_0":"The allowance of the spender for the owner."}},"approve(address,uint256)":{"params":{"amount":"The new allowance of the spender.","spender":"The account with the allowance."},"returns":{"_0":"A flag indicating whether or not the approval succeeded."}},"balanceOf(address)":{"params":{"account":"The owner of the tokens."},"returns":{"_0":"The account's balance."}},"decimals()":{"returns":{"_0":"The token's decimals."}},"name()":{"returns":{"_0":"The token's name."}},"symbol()":{"returns":{"_0":"The token's symbol."}},"totalSupply()":{"returns":{"_0":"The token's total supply."}},"transfer(address,uint256)":{"params":{"amount":"The amount of tokens that will be transferred.","to":"The recipient of the tokens."},"returns":{"_0":"A flag indicating whether or not the transfer succeeded."}},"transferFrom(address,address,uint256)":{"params":{"amount":"The amount of tokens that will be transferred.","from":"The owner of the tokens.","to":"The recipient of the tokens."},"returns":{"_0":"A flag indicating whether or not the transfer succeeded."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\"},\"returns\":{\"_0\":\"The allowance of the spender for the owner.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The new allowance of the spender.\",\"spender\":\"The account with the allowance.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the approval succeeded.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"The account's balance.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The token's decimals.\"}},\"name()\":{\"returns\":{\"_0\":\"The token's name.\"}},\"symbol()\":{\"returns\":{\"_0\":\"The token's symbol.\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The token's total supply.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens that will be transferred.\",\"to\":\"The recipient of the tokens.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the transfer succeeded.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens that will be transferred.\",\"from\":\"The owner of the tokens.\",\"to\":\"The recipient of the tokens.\"},\"returns\":{\"_0\":\"A flag indicating whether or not the transfer succeeded.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an owner changes the approval for a spender.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Gets the allowance of a spender for an owner.\"},\"approve(address,uint256)\":{\"notice\":\"Updates the allowance of a spender on behalf of the sender.\"},\"balanceOf(address)\":{\"notice\":\"Gets the balance of an account.\"},\"decimals()\":{\"notice\":\"Gets the token's decimals.\"},\"name()\":{\"notice\":\"Gets the token's name.\"},\"symbol()\":{\"notice\":\"Gets the token's symbol.\"},\"totalSupply()\":{\"notice\":\"Gets the token's total supply.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers tokens from the sender's account to another account.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers tokens from an owner to a recipient. This draws from         the sender's allowance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Approval(address,address,uint256)":{"notice":"Emitted when an owner changes the approval for a spender."},"Transfer(address,address,uint256)":{"notice":"Emitted when tokens are transferred from one account to another."}},"kind":"user","methods":{"allowance(address,address)":{"notice":"Gets the allowance of a spender for an owner."},"approve(address,uint256)":{"notice":"Updates the allowance of a spender on behalf of the sender."},"balanceOf(address)":{"notice":"Gets the balance of an account."},"decimals()":{"notice":"Gets the token's decimals."},"name()":{"notice":"Gets the token's name."},"symbol()":{"notice":"Gets the token's symbol."},"totalSupply()":{"notice":"Gets the token's total supply."},"transfer(address,uint256)":{"notice":"Transfers tokens from the sender's account to another account."},"transferFrom(address,address,uint256)":{"notice":"Transfers tokens from an owner to a recipient. This draws from         the sender's allowance."}},"version":1}}},"contracts/src/interfaces/IHyperdrive.sol":{"IHyperdrive":{"abi":[{"inputs":[],"name":"BatchInputLengthMismatch","type":"error"},{"inputs":[],"name":"BelowMinimumContribution","type":"error"},{"inputs":[],"name":"DecreasedPresentValueWhenAddingLiquidity","type":"error"},{"inputs":[],"name":"DistributeExcessIdleFailed","type":"error"},{"inputs":[],"name":"ExpInvalidExponent","type":"error"},{"inputs":[],"name":"ExpiredDeadline","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InsufficientLiquidity","type":"error"},{"inputs":[],"name":"InvalidApr","type":"error"},{"inputs":[],"name":"InvalidCheckpointTime","type":"error"},{"inputs":[],"name":"InvalidERC20Bridge","type":"error"},{"inputs":[],"name":"InvalidFeeDestination","type":"error"},{"inputs":[],"name":"InvalidInitialVaultSharePrice","type":"error"},{"inputs":[],"name":"InvalidLPSharePrice","type":"error"},{"inputs":[],"name":"InvalidPresentValue","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"InvalidTimestamp","type":"error"},{"inputs":[],"name":"LnInvalidInput","type":"error"},{"inputs":[],"name":"MinimumSharePrice","type":"error"},{"inputs":[],"name":"MinimumTransactionAmount","type":"error"},{"inputs":[],"name":"NotPayable","type":"error"},{"inputs":[],"name":"OutputLimit","type":"error"},{"inputs":[],"name":"PoolAlreadyInitialized","type":"error"},{"inputs":[],"name":"PoolIsPaused","type":"error"},{"inputs":[],"name":"RestrictedZeroAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"ReturnData","type":"error"},{"inputs":[],"name":"SweepFailed","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"inputs":[],"name":"UnexpectedSuccess","type":"error"},{"inputs":[],"name":"UnsafeCastToInt128","type":"error"},{"inputs":[],"name":"UnsafeCastToInt256","type":"error"},{"inputs":[],"name":"UnsafeCastToUint112","type":"error"},{"inputs":[],"name":"UnsafeCastToUint128","type":"error"},{"inputs":[],"name":"UnsupportedToken","type":"error"},{"inputs":[],"name":"UpdateLiquidityFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"lpAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"lpSharePrice","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"CloseLong","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"basePayment","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"CloseShort","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collector","type":"address"},{"indexed":false,"internalType":"uint256","name":"fees","type":"uint256"}],"name":"CollectGovernanceFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"checkpointTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"checkpointVaultSharePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultSharePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturedShorts","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturedLongs","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpSharePrice","type":"uint256"}],"name":"CreateCheckpoint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newFeeCollector","type":"address"}],"name":"FeeCollectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newGovernance","type":"address"}],"name":"GovernanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"lpAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"apr","type":"uint256"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"OpenLong","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"baseProceeds","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"OpenShort","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newPauser","type":"address"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"PauserUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawalShareAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"}],"name":"RedeemWithdrawalShares","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":false,"internalType":"uint256","name":"lpAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"withdrawalShareAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpSharePrice","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collector","type":"address"},{"indexed":true,"internalType":"address","name":"target","type":"address"}],"name":"Sweep","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newSweepCollector","type":"address"}],"name":"SweepCollectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contribution","type":"uint256"},{"internalType":"uint256","name":"_minLpSharePrice","type":"uint256"},{"internalType":"uint256","name":"_minApr","type":"uint256"},{"internalType":"uint256","name":"_maxApr","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"lpShares","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"batchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_checkpointTime","type":"uint256"},{"internalType":"uint256","name":"_maxIterations","type":"uint256"}],"name":"checkpoint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maturityTime","type":"uint256"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_minOutput","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"closeLong","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maturityTime","type":"uint256"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_minOutput","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"closeShort","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"collectGovernanceFee","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_checkpointTime","type":"uint256"}],"name":"getCheckpoint","outputs":[{"components":[{"internalType":"uint128","name":"vaultSharePrice","type":"uint128"}],"internalType":"struct IHyperdrive.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_checkpointTime","type":"uint256"}],"name":"getCheckpointExposure","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketState","outputs":[{"components":[{"internalType":"uint128","name":"shareReserves","type":"uint128"},{"internalType":"uint128","name":"bondReserves","type":"uint128"},{"internalType":"uint128","name":"longExposure","type":"uint128"},{"internalType":"uint128","name":"longsOutstanding","type":"uint128"},{"internalType":"int128","name":"shareAdjustment","type":"int128"},{"internalType":"uint128","name":"shortsOutstanding","type":"uint128"},{"internalType":"uint128","name":"longAverageMaturityTime","type":"uint128"},{"internalType":"uint128","name":"shortAverageMaturityTime","type":"uint128"},{"internalType":"bool","name":"isInitialized","type":"bool"},{"internalType":"bool","name":"isPaused","type":"bool"},{"internalType":"uint112","name":"zombieBaseProceeds","type":"uint112"},{"internalType":"uint128","name":"zombieShareReserves","type":"uint128"}],"internalType":"struct IHyperdrive.MarketState","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfig","outputs":[{"components":[{"internalType":"contract IERC20","name":"baseToken","type":"address"},{"internalType":"contract IERC20","name":"vaultSharesToken","type":"address"},{"internalType":"address","name":"linkerFactory","type":"address"},{"internalType":"bytes32","name":"linkerCodeHash","type":"bytes32"},{"internalType":"uint256","name":"initialVaultSharePrice","type":"uint256"},{"internalType":"uint256","name":"minimumShareReserves","type":"uint256"},{"internalType":"uint256","name":"minimumTransactionAmount","type":"uint256"},{"internalType":"uint256","name":"positionDuration","type":"uint256"},{"internalType":"uint256","name":"checkpointDuration","type":"uint256"},{"internalType":"uint256","name":"timeStretch","type":"uint256"},{"internalType":"address","name":"governance","type":"address"},{"internalType":"address","name":"feeCollector","type":"address"},{"internalType":"address","name":"sweepCollector","type":"address"},{"components":[{"internalType":"uint256","name":"curve","type":"uint256"},{"internalType":"uint256","name":"flat","type":"uint256"},{"internalType":"uint256","name":"governanceLP","type":"uint256"},{"internalType":"uint256","name":"governanceZombie","type":"uint256"}],"internalType":"struct IHyperdrive.Fees","name":"fees","type":"tuple"}],"internalType":"struct IHyperdrive.PoolConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolInfo","outputs":[{"components":[{"internalType":"uint256","name":"shareReserves","type":"uint256"},{"internalType":"int256","name":"shareAdjustment","type":"int256"},{"internalType":"uint256","name":"zombieBaseProceeds","type":"uint256"},{"internalType":"uint256","name":"zombieShareReserves","type":"uint256"},{"internalType":"uint256","name":"bondReserves","type":"uint256"},{"internalType":"uint256","name":"lpTotalSupply","type":"uint256"},{"internalType":"uint256","name":"vaultSharePrice","type":"uint256"},{"internalType":"uint256","name":"longsOutstanding","type":"uint256"},{"internalType":"uint256","name":"longAverageMaturityTime","type":"uint256"},{"internalType":"uint256","name":"shortsOutstanding","type":"uint256"},{"internalType":"uint256","name":"shortAverageMaturityTime","type":"uint256"},{"internalType":"uint256","name":"withdrawalSharesReadyToWithdraw","type":"uint256"},{"internalType":"uint256","name":"withdrawalSharesProceeds","type":"uint256"},{"internalType":"uint256","name":"lpSharePrice","type":"uint256"},{"internalType":"uint256","name":"longExposure","type":"uint256"}],"internalType":"struct IHyperdrive.PoolInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUncollectedGovernanceFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWithdrawPool","outputs":[{"components":[{"internalType":"uint128","name":"readyToWithdraw","type":"uint128"},{"internalType":"uint128","name":"proceeds","type":"uint128"}],"internalType":"struct IHyperdrive.WithdrawPool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contribution","type":"uint256"},{"internalType":"uint256","name":"_apr","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"initialize","outputs":[{"internalType":"uint256","name":"lpShares","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_slots","type":"uint256[]"}],"name":"load","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_minOutput","type":"uint256"},{"internalType":"uint256","name":"_minVaultSharePrice","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"openLong","outputs":[{"internalType":"uint256","name":"maturityTime","type":"uint256"},{"internalType":"uint256","name":"bondProceeds","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_maxDeposit","type":"uint256"},{"internalType":"uint256","name":"_minVaultSharePrice","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"openShort","outputs":[{"internalType":"uint256","name":"maturityTime","type":"uint256"},{"internalType":"uint256","name":"deposit","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"perTokenApprovals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_withdrawalShares","type":"uint256"},{"internalType":"uint256","name":"_minOutputPerShare","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"redeemWithdrawalShares","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"},{"internalType":"uint256","name":"withdrawalSharesRedeemed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lpShares","type":"uint256"},{"internalType":"uint256","name":"_minOutputPerShare","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"},{"internalType":"uint256","name":"withdrawalShares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"setApprovalBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"setFeeCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"setSweepCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_target","type":"address"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"target0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"target1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"target2","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"target3","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"target4","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"transferFromBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vaultSharesToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"PERMIT_TYPEHASH()":{"returns":{"_0":"The EIP712 permit typehash of the MultiToken."}},"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_contribution":"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_maxApr":"The maximum APR at which the LP is willing to supply.","_minApr":"The minimum APR at which the LP is willing to supply.","_minLpSharePrice":"The minimum LP share price the LP is willing        to accept for their shares. LPs incur negative slippage when        adding liquidity if there is a net curve position in the market,        so this allows LPs to protect themselves from high levels of        slippage. The units of this quantity are either base or vault        shares, depending on the value of `_options.asBase`.","_options":"The options that configure how the operation is settled."},"returns":{"lpShares":"The LP shares received by the LP."}},"balanceOf(uint256,address)":{"params":{"owner":"The owner of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The balance of the owner."}},"baseToken()":{"returns":{"_0":"The base token."}},"batchTransferFrom(address,address,uint256[],uint256[])":{"params":{"from":"The source account.","ids":"The array of token ids of the asset to transfer.","to":"The destination account.","values":"The amount of each token to transfer."}},"checkpoint(uint256,uint256)":{"params":{"_checkpointTime":"The time of the checkpoint to create.","_maxIterations":"The number of iterations to use in the Newton's        method component of `_distributeExcessIdleSafe`. This defaults to        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is        smaller than the constant."}},"closeLong(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_bondAmount":"The amount of longs to close.","_maturityTime":"The maturity time of the long.","_minOutput":"The minimum proceeds the trader will accept. The units        of this quantity are either base or vault shares, depending on        the value of `_options.asBase`.","_options":"The options that configure how the trade is settled."},"returns":{"proceeds":"The proceeds the user receives. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`."}},"closeShort(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_bondAmount":"The amount of shorts to close.","_maturityTime":"The maturity time of the short.","_minOutput":"The minimum output of this trade. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_options":"The options that configure how the trade is settled."},"returns":{"proceeds":"The proceeds of closing this short. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`."}},"collectGovernanceFee((address,bool,bytes))":{"params":{"_options":"The options that configure how the fees are settled."},"returns":{"proceeds":"The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`."}},"decimals()":{"returns":{"_0":"The decimals of the MultiToken."}},"domainSeparator()":{"returns":{"_0":"The EIP712 domain separator of the MultiToken."}},"getCheckpoint(uint256)":{"params":{"_checkpointTime":"The checkpoint time."},"returns":{"_0":"The checkpoint."}},"getCheckpointExposure(uint256)":{"params":{"_checkpointTime":"The checkpoint time."},"returns":{"_0":"The checkpoint exposure."}},"getMarketState()":{"returns":{"_0":"The market state."}},"getPoolConfig()":{"returns":{"_0":"The pool configuration."}},"getPoolInfo()":{"returns":{"_0":"The pool info."}},"getUncollectedGovernanceFees()":{"returns":{"_0":"The amount of uncollected governance fees."}},"getWithdrawPool()":{"returns":{"_0":"The withdrawal pool information."}},"initialize(uint256,uint256,(address,bool,bytes))":{"params":{"_apr":"The target APR.","_contribution":"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_options":"The options that configure how the operation is settled."},"returns":{"lpShares":"The initial number of LP shares created."}},"isApprovedForAll(address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens."},"returns":{"_0":"The approval-for-all status of the spender for the owner."}},"isPauser(address)":{"params":{"_account":"The account to check."},"returns":{"_0":"The account's pauser status."}},"load(uint256[])":{"details":"This serves as a generalized getter that allows consumers to create      custom getters to suit their purposes.","params":{"_slots":"The storage slots to load."},"returns":{"_0":"The values at the specified slots."}},"name()":{"returns":{"_0":"The instance's name."}},"name(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The name of the MultiToken."}},"nonces(address)":{"params":{"owner":"The owner of the tokens."},"returns":{"_0":"The permit nonce of the owner."}},"openLong(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_amount":"The amount of capital provided to open the long. The        units of this quantity are either base or vault shares, depending        on the value of `_options.asBase`.","_minOutput":"The minimum number of bonds to receive.","_minVaultSharePrice":"The minimum vault share price at which to        open the long. This allows traders to protect themselves from        opening a long in a checkpoint where negative interest has        accrued.","_options":"The options that configure how the trade is settled."},"returns":{"bondProceeds":"The amount of bonds the user received.","maturityTime":"The maturity time of the bonds."}},"openShort(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_bondAmount":"The amount of bonds to short.","_maxDeposit":"The most the user expects to deposit for this trade.        The units of this quantity are either base or vault shares,        depending on the value of `_options.asBase`.","_minVaultSharePrice":"The minimum vault share price at which to open        the short. This allows traders to protect themselves from opening        a short in a checkpoint where negative interest has accrued.","_options":"The options that configure how the trade is settled."},"returns":{"deposit":"The amount the user deposited for this trade. The units         of this quantity are either base or vault shares, depending on         the value of `_options.asBase`.","maturityTime":"The maturity time of the short."}},"pause(bool)":{"params":{"_status":"True to pause all deposits and false to unpause them."}},"perTokenApprovals(uint256,address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The allowance of the spender for the owner."}},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.","params":{"_approved":"A boolean of the approval status to set to.","deadline":"The timestamp which the signature must be submitted by        to be valid.","owner":"The owner of the account which is having the new approval set.","r":"The r component of the ECDSA signature.","s":"The s component of the ECDSA signature.","spender":"The address which will be allowed to spend owner's tokens.","v":"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28."}},"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))":{"params":{"_minOutputPerShare":"The minimum amount the LP expects to        receive for each withdrawal share that is burned. The units of        this quantity are either base or vault shares, depending on the        value of `_options.asBase`.","_options":"The options that configure how the operation is settled.","_withdrawalShares":"The withdrawal shares to redeem."},"returns":{"proceeds":"The amount the LP received. The units of this quantity         are either base or vault shares, depending on the value of         `_options.asBase`.","withdrawalSharesRedeemed":"The amount of withdrawal shares that         were redeemed."}},"removeLiquidity(uint256,uint256,(address,bool,bytes))":{"params":{"_lpShares":"The LP shares to burn.","_minOutputPerShare":"The minimum amount the LP expects to receive        for each withdrawal share that is burned. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_options":"The options that configure how the operation is settled."},"returns":{"proceeds":"The amount the LP removing liquidity receives. The         units of this quantity are either base or vault shares,         depending on the value of `_options.asBase`.","withdrawalShares":"The base that the LP receives buys out some of         their LP shares, but it may not be sufficient to fully buy the         LP out. In this case, the LP receives withdrawal shares equal in         value to the present value they are owed. As idle capital         becomes available, the pool will buy back these shares."}},"setApproval(uint256,address,uint256)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalBridge(uint256,address,uint256,address)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].","caller":"The eth address which called the linking contract.","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalForAll(address,bool)":{"params":{"approved":"True to approve, false to remove approval.","operator":"The eth address which can access the caller's assets."}},"setFeeCollector(address)":{"params":{"_who":"The new fee collector address."}},"setGovernance(address)":{"params":{"_who":"The new governance address."}},"setPauser(address,bool)":{"params":{"status":"The new pauser status.","who":"The address to change."}},"setSweepCollector(address)":{"params":{"_who":"The new sweep collector address."}},"sweep(address)":{"details":"WARN: It is unlikely but possible that there is a selector overlap      with 'transferFrom'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.","params":{"_target":"The target token to sweep."}},"symbol(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The symbol of the MultiToken."}},"target0()":{"returns":{"_0":"The target0 address."}},"target1()":{"returns":{"_0":"The target1 address."}},"target2()":{"returns":{"_0":"The target2 address."}},"target3()":{"returns":{"_0":"The target3 address."}},"target4()":{"returns":{"_0":"The target4 address."}},"totalSupply(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The total supply of the MultiToken."}},"transferFrom(uint256,address,address,uint256)":{"params":{"amount":"The amount of token to move.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}},"transferFromBridge(uint256,address,address,uint256,address)":{"params":{"amount":"The amount of token to move.","caller":"The msg.sender or the caller of the ERC20Forwarder.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}},"vaultSharesToken()":{"returns":{"_0":"The vault shares token."}},"version()":{"returns":{"_0":"The instance's version."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"PERMIT_TYPEHASH()":"30adf81f","addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))":"4c2ac1d9","balanceOf(uint256,address)":"3656eec2","baseToken()":"c55dae63","batchTransferFrom(address,address,uint256[],uint256[])":"17fad7fc","checkpoint(uint256,uint256)":"414f826d","closeLong(uint256,uint256,uint256,(address,bool,bytes))":"ded06231","closeShort(uint256,uint256,uint256,(address,bool,bytes))":"29b23fc1","collectGovernanceFee((address,bool,bytes))":"3e691db9","decimals()":"313ce567","domainSeparator()":"f698da25","getCheckpoint(uint256)":"20fc4881","getCheckpointExposure(uint256)":"cf210e65","getMarketState()":"d8165743","getPoolConfig()":"b0d96580","getPoolInfo()":"60246c88","getUncollectedGovernanceFees()":"c69e16ad","getWithdrawPool()":"fba56008","initialize(uint256,uint256,(address,bool,bytes))":"77d05ff4","isApprovedForAll(address,address)":"e985e9c5","isPauser(address)":"46fbf68e","load(uint256[])":"becee9c3","name()":"06fdde03","name(uint256)":"00ad800c","nonces(address)":"7ecebe00","openLong(uint256,uint256,uint256,(address,bool,bytes))":"cba2e58d","openShort(uint256,uint256,uint256,(address,bool,bytes))":"dbbe8070","pause(bool)":"02329a29","perTokenApprovals(uint256,address,address)":"21ff32a9","permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":"9032c726","redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))":"074a6de9","removeLiquidity(uint256,uint256,(address,bool,bytes))":"cbc13434","setApproval(uint256,address,uint256)":"9cd241af","setApprovalBridge(uint256,address,uint256,address)":"4ed2d6ac","setApprovalForAll(address,bool)":"a22cb465","setFeeCollector(address)":"a42dce80","setGovernance(address)":"ab033ea9","setPauser(address,bool)":"7180c8ca","setSweepCollector(address)":"e4af29d1","sweep(address)":"01681a62","symbol(uint256)":"4e41a1fb","target0()":"21b57d53","target1()":"eac3e799","target2()":"a6e8a859","target3()":"d899e112","target4()":"f3f70707","totalSupply(uint256)":"bd85b039","transferFrom(uint256,address,address,uint256)":"1c0f12b6","transferFromBridge(uint256,address,address,uint256,address)":"e44808bc","vaultSharesToken()":"0a4e1493","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BatchInputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BelowMinimumContribution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DecreasedPresentValueWhenAddingLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributeExcessIdleFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpInvalidExponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidApr\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC20Bridge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeDestination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialVaultSharePrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLPSharePrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPresentValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LnInvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumSharePrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RestrictedZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ReturnData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SweepFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedSuccess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToInt128\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToInt256\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToUint112\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToUint128\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpdateLiquidityFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePayment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"CollectGovernanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"checkpointTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"checkpointVaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedShorts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedLongs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"CreateCheckpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"}],\"name\":\"RedeemWithdrawalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Sweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSweepCollector\",\"type\":\"address\"}],\"name\":\"SweepCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minLpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minApr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxApr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxIterations\",\"type\":\"uint256\"}],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutput\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"closeLong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutput\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"closeShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"collectGovernanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"vaultSharePrice\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpointExposure\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"shareReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bondReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longExposure\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"shareAdjustment\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"shortsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint112\"},{\"internalType\":\"uint128\",\"name\":\"zombieShareReserves\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.MarketState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zombieShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesReadyToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longExposure\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncollectedGovernanceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"readyToWithdraw\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"proceeds\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.WithdrawPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_slots\",\"type\":\"uint256[]\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVaultSharePrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"openLong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondProceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVaultSharePrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"openShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutputPerShare\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"redeemWithdrawalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesRedeemed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lpShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutputPerShare\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setApprovalBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setSweepCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"transferFromBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultSharesToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The EIP712 permit typehash of the MultiToken.\"}},\"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_maxApr\":\"The maximum APR at which the LP is willing to supply.\",\"_minApr\":\"The minimum APR at which the LP is willing to supply.\",\"_minLpSharePrice\":\"The minimum LP share price the LP is willing        to accept for their shares. LPs incur negative slippage when        adding liquidity if there is a net curve position in the market,        so this allows LPs to protect themselves from high levels of        slippage. The units of this quantity are either base or vault        shares, depending on the value of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"lpShares\":\"The LP shares received by the LP.\"}},\"balanceOf(uint256,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The balance of the owner.\"}},\"baseToken()\":{\"returns\":{\"_0\":\"The base token.\"}},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"params\":{\"from\":\"The source account.\",\"ids\":\"The array of token ids of the asset to transfer.\",\"to\":\"The destination account.\",\"values\":\"The amount of each token to transfer.\"}},\"checkpoint(uint256,uint256)\":{\"params\":{\"_checkpointTime\":\"The time of the checkpoint to create.\",\"_maxIterations\":\"The number of iterations to use in the Newton's        method component of `_distributeExcessIdleSafe`. This defaults to        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is        smaller than the constant.\"}},\"closeLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of longs to close.\",\"_maturityTime\":\"The maturity time of the long.\",\"_minOutput\":\"The minimum proceeds the trader will accept. The units        of this quantity are either base or vault shares, depending on        the value of `_options.asBase`.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"proceeds\":\"The proceeds the user receives. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"closeShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of shorts to close.\",\"_maturityTime\":\"The maturity time of the short.\",\"_minOutput\":\"The minimum output of this trade. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"proceeds\":\"The proceeds of closing this short. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"collectGovernanceFee((address,bool,bytes))\":{\"params\":{\"_options\":\"The options that configure how the fees are settled.\"},\"returns\":{\"proceeds\":\"The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the MultiToken.\"}},\"domainSeparator()\":{\"returns\":{\"_0\":\"The EIP712 domain separator of the MultiToken.\"}},\"getCheckpoint(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint.\"}},\"getCheckpointExposure(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint exposure.\"}},\"getMarketState()\":{\"returns\":{\"_0\":\"The market state.\"}},\"getPoolConfig()\":{\"returns\":{\"_0\":\"The pool configuration.\"}},\"getPoolInfo()\":{\"returns\":{\"_0\":\"The pool info.\"}},\"getUncollectedGovernanceFees()\":{\"returns\":{\"_0\":\"The amount of uncollected governance fees.\"}},\"getWithdrawPool()\":{\"returns\":{\"_0\":\"The withdrawal pool information.\"}},\"initialize(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\"},\"returns\":{\"_0\":\"The approval-for-all status of the spender for the owner.\"}},\"isPauser(address)\":{\"params\":{\"_account\":\"The account to check.\"},\"returns\":{\"_0\":\"The account's pauser status.\"}},\"load(uint256[])\":{\"details\":\"This serves as a generalized getter that allows consumers to create      custom getters to suit their purposes.\",\"params\":{\"_slots\":\"The storage slots to load.\"},\"returns\":{\"_0\":\"The values at the specified slots.\"}},\"name()\":{\"returns\":{\"_0\":\"The instance's name.\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The name of the MultiToken.\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"The permit nonce of the owner.\"}},\"openLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_amount\":\"The amount of capital provided to open the long. The        units of this quantity are either base or vault shares, depending        on the value of `_options.asBase`.\",\"_minOutput\":\"The minimum number of bonds to receive.\",\"_minVaultSharePrice\":\"The minimum vault share price at which to        open the long. This allows traders to protect themselves from        opening a long in a checkpoint where negative interest has        accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"bondProceeds\":\"The amount of bonds the user received.\",\"maturityTime\":\"The maturity time of the bonds.\"}},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of bonds to short.\",\"_maxDeposit\":\"The most the user expects to deposit for this trade.        The units of this quantity are either base or vault shares,        depending on the value of `_options.asBase`.\",\"_minVaultSharePrice\":\"The minimum vault share price at which to open        the short. This allows traders to protect themselves from opening        a short in a checkpoint where negative interest has accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"deposit\":\"The amount the user deposited for this trade. The units         of this quantity are either base or vault shares, depending on         the value of `_options.asBase`.\",\"maturityTime\":\"The maturity time of the short.\"}},\"pause(bool)\":{\"params\":{\"_status\":\"True to pause all deposits and false to unpause them.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The allowance of the spender for the owner.\"}},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.\",\"params\":{\"_approved\":\"A boolean of the approval status to set to.\",\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\"}},\"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_minOutputPerShare\":\"The minimum amount the LP expects to        receive for each withdrawal share that is burned. The units of        this quantity are either base or vault shares, depending on the        value of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\",\"_withdrawalShares\":\"The withdrawal shares to redeem.\"},\"returns\":{\"proceeds\":\"The amount the LP received. The units of this quantity         are either base or vault shares, depending on the value of         `_options.asBase`.\",\"withdrawalSharesRedeemed\":\"The amount of withdrawal shares that         were redeemed.\"}},\"removeLiquidity(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_lpShares\":\"The LP shares to burn.\",\"_minOutputPerShare\":\"The minimum amount the LP expects to receive        for each withdrawal share that is burned. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"proceeds\":\"The amount the LP removing liquidity receives. The         units of this quantity are either base or vault shares,         depending on the value of `_options.asBase`.\",\"withdrawalShares\":\"The base that the LP receives buys out some of         their LP shares, but it may not be sufficient to fully buy the         LP out. In this case, the LP receives withdrawal shares equal in         value to the present value they are owed. As idle capital         becomes available, the pool will buy back these shares.\"}},\"setApproval(uint256,address,uint256)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalBridge(uint256,address,uint256,address)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].\",\"caller\":\"The eth address which called the linking contract.\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True to approve, false to remove approval.\",\"operator\":\"The eth address which can access the caller's assets.\"}},\"setFeeCollector(address)\":{\"params\":{\"_who\":\"The new fee collector address.\"}},\"setGovernance(address)\":{\"params\":{\"_who\":\"The new governance address.\"}},\"setPauser(address,bool)\":{\"params\":{\"status\":\"The new pauser status.\",\"who\":\"The address to change.\"}},\"setSweepCollector(address)\":{\"params\":{\"_who\":\"The new sweep collector address.\"}},\"sweep(address)\":{\"details\":\"WARN: It is unlikely but possible that there is a selector overlap      with 'transferFrom'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.\",\"params\":{\"_target\":\"The target token to sweep.\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The symbol of the MultiToken.\"}},\"target0()\":{\"returns\":{\"_0\":\"The target0 address.\"}},\"target1()\":{\"returns\":{\"_0\":\"The target1 address.\"}},\"target2()\":{\"returns\":{\"_0\":\"The target2 address.\"}},\"target3()\":{\"returns\":{\"_0\":\"The target3 address.\"}},\"target4()\":{\"returns\":{\"_0\":\"The target4 address.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The total supply of the MultiToken.\"}},\"transferFrom(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"caller\":\"The msg.sender or the caller of the ERC20Forwarder.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"vaultSharesToken()\":{\"returns\":{\"_0\":\"The vault shares token.\"}},\"version()\":{\"returns\":{\"_0\":\"The instance's version.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BatchInputLengthMismatch()\":[{\"notice\":\"Thrown when the inputs to a batch transfer don't match in         length.\"}],\"BelowMinimumContribution()\":[{\"notice\":\"Thrown when the initializer doesn't provide sufficient liquidity         to cover the minimum share reserves and the LP shares that are         burned on initialization.\"}],\"DecreasedPresentValueWhenAddingLiquidity()\":[{\"notice\":\"Thrown when the present value prior to adding liquidity results in a         decrease in present value after liquidity. This is caused by a         shortage in liquidity that prevents all the open positions being         closed on the curve and therefore marked to 1.\"}],\"DistributeExcessIdleFailed()\":[{\"notice\":\"Thrown when the distribute excess idle calculation fails due         to the starting present value calculation failing.\"}],\"ExpInvalidExponent()\":[{\"notice\":\"Thrown when the exponent to `FixedPointMath.exp` would cause the         the result to be larger than the representable scale.\"}],\"ExpiredDeadline()\":[{\"notice\":\"Thrown when a permit signature is expired.\"}],\"InsufficientBalance()\":[{\"notice\":\"Thrown when a user doesn't have a sufficient balance to perform         an action.\"}],\"InsufficientLiquidity()\":[{\"notice\":\"Thrown when the pool doesn't have sufficient liquidity to         complete the trade.\"}],\"InvalidApr()\":[{\"notice\":\"Thrown when the pool's APR is outside the bounds specified by         a LP when they are adding liquidity.\"}],\"InvalidCheckpointTime()\":[{\"notice\":\"Thrown when the checkpoint time provided to `checkpoint` is         larger than the current checkpoint or isn't divisible by the         checkpoint duration.\"}],\"InvalidERC20Bridge()\":[{\"notice\":\"Thrown when the caller of one of MultiToken's bridge-only         functions is not the corresponding bridge.\"}],\"InvalidFeeDestination()\":[{\"notice\":\"Thrown when a destination other than the fee collector is         specified in `collectGovernanceFee`.\"}],\"InvalidInitialVaultSharePrice()\":[{\"notice\":\"Thrown when the initial share price doesn't match the share         price of the underlying yield source on deployment.\"}],\"InvalidLPSharePrice()\":[{\"notice\":\"Thrown when the LP share price couldn't be calculated in a         critical situation.\"}],\"InvalidPresentValue()\":[{\"notice\":\"Thrown when the present value calculation fails.\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when an invalid signature is used provide permit access         to the MultiToken. A signature is considered to be invalid if         it fails to recover to the owner's address.\"}],\"InvalidTimestamp()\":[{\"notice\":\"Thrown when the timestamp used to construct an asset ID exceeds         the uint248 scale.\"}],\"LnInvalidInput()\":[{\"notice\":\"Thrown when the input to `FixedPointMath.ln` is less than or         equal to zero.\"}],\"MinimumSharePrice()\":[{\"notice\":\"Thrown when vault share price is smaller than the minimum share         price. This protects traders from unknowingly opening a long or         short after negative interest has accrued.\"}],\"MinimumTransactionAmount()\":[{\"notice\":\"Thrown when the input or output amount of a trade is smaller         than the minimum transaction amount. This protects traders and         LPs from losses of precision that can occur at small scales.\"}],\"NotPayable()\":[{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"}],\"OutputLimit()\":[{\"notice\":\"Thrown when a slippage guard is violated.\"}],\"PoolAlreadyInitialized()\":[{\"notice\":\"Thrown when the pool is already initialized and a trader calls         `initialize`. This prevents the pool from being reinitialized         after it has been initialized.\"}],\"PoolIsPaused()\":[{\"notice\":\"Thrown when the pool is paused and a trader tries to add         liquidity, open a long, or open a short. Traders can still         close their existing positions while the pool is paused.\"}],\"RestrictedZeroAddress()\":[{\"notice\":\"Thrown when the owner passed to permit is the zero address. This         prevents users from spending the funds in address zero by         sending an invalid signature to ecrecover.\"}],\"ReturnData(bytes)\":[{\"notice\":\"Thrown by a read-only function called by the proxy. Unlike a         normal error, this error actually indicates that a read-only         call succeeded. The data that it wraps is the return data from         the read-only call.\"}],\"SweepFailed()\":[{\"notice\":\"Thrown when an asset is swept from the pool and one of the         pool's depository assets changes.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}],\"Unauthorized()\":[{\"notice\":\"Thrown when an unauthorized user attempts to access admin         functionality.\"}],\"UnexpectedSuccess()\":[{\"notice\":\"Thrown when a read-only call succeeds. The proxy architecture         uses a force-revert delegatecall pattern to ensure that calls         that are intended to be read-only are actually read-only.\"}],\"UnsafeCastToInt128()\":[{\"notice\":\"Thrown when casting a value to a int128 that is outside of the         int128 scale.\"}],\"UnsafeCastToInt256()\":[{\"notice\":\"Thrown when casting a value to a int256 that is outside of the         int256 scale.\"}],\"UnsafeCastToUint112()\":[{\"notice\":\"Thrown when casting a value to a uint112 that is outside of the         uint128 scale.\"}],\"UnsafeCastToUint128()\":[{\"notice\":\"Thrown when casting a value to a uint128 that is outside of the         uint128 scale.\"}],\"UnsupportedToken()\":[{\"notice\":\"Thrown when an unsupported option is passed to a function or         a user attempts to sweep an invalid token. The options and sweep         targets that are supported vary between instances.\"}],\"UpdateLiquidityFailed()\":[{\"notice\":\"Thrown when `LPMath.calculateUpdateLiquidity` fails.\"}]},\"events\":{\"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when an LP adds liquidity to the Hyperdrive pool.\"},\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is closed.\"},\"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is closed.\"},\"CollectGovernanceFee(address,uint256)\":{\"notice\":\"Emitted when governance fees are collected.\"},\"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a checkpoint is created.\"},\"FeeCollectorUpdated(address)\":{\"notice\":\"Emitted when the fee collector address is updated.\"},\"GovernanceUpdated(address)\":{\"notice\":\"Emitted when the governance address is updated.\"},\"Initialize(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when the Hyperdrive pool is initialized.\"},\"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is opened.\"},\"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is opened.\"},\"PauseStatusUpdated(bool)\":{\"notice\":\"Emitted when the pause status is updated.\"},\"PauserUpdated(address,bool)\":{\"notice\":\"Emitted when a pauser is updated.\"},\"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"Emitted when an LP redeems withdrawal shares.\"},\"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when an LP removes liquidity from the Hyperdrive pool.\"},\"Sweep(address,address)\":{\"notice\":\"Emitted when tokens are swept.\"},\"SweepCollectorUpdated(address)\":{\"notice\":\"Emitted when the sweep collector address is updated.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"notice\":\"Gets the EIP712 permit typehash of the MultiToken.\"},\"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows LPs to supply liquidity for LP shares.\"},\"balanceOf(uint256,address)\":{\"notice\":\"Gets the balance of a spender for a sub-token.\"},\"baseToken()\":{\"notice\":\"Gets the Hyperdrive pool's base token.\"},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"notice\":\"Transfers several assets from one account to another.\"},\"checkpoint(uint256,uint256)\":{\"notice\":\"Attempts to mint a checkpoint with the specified checkpoint time.\"},\"closeLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Closes a long position with a specified maturity time.\"},\"closeShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Closes a short position with a specified maturity time.\"},\"collectGovernanceFee((address,bool,bytes))\":{\"notice\":\"This function collects the governance fees accrued by the pool.\"},\"decimals()\":{\"notice\":\"Gets the decimals of the MultiToken.\"},\"domainSeparator()\":{\"notice\":\"Gets the EIP712 domain separator of the MultiToken.\"},\"getCheckpoint(uint256)\":{\"notice\":\"Gets one of the pool's checkpoints.\"},\"getCheckpointExposure(uint256)\":{\"notice\":\"Gets the pool's exposure from a checkpoint. This is the number         of non-netted longs in the checkpoint.\"},\"getMarketState()\":{\"notice\":\"Gets the pool's state relating to the Hyperdrive market.\"},\"getPoolConfig()\":{\"notice\":\"Gets the pool's configuration parameters.\"},\"getPoolInfo()\":{\"notice\":\"Gets info about the pool's reserves and other state that is         important to evaluate potential trades.\"},\"getUncollectedGovernanceFees()\":{\"notice\":\"Gets the amount of governance fees that haven't been collected.\"},\"getWithdrawPool()\":{\"notice\":\"Gets information relating to the pool's withdrawal pool. This         includes the total proceeds underlying the withdrawal pool and         the number of withdrawal shares ready to be redeemed.\"},\"initialize(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows the first LP to initialize the market with a target APR.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval-for-all status of a spender on behalf of an         owner.\"},\"isPauser(address)\":{\"notice\":\"Gets an account's pauser status within the Hyperdrive pool.\"},\"load(uint256[])\":{\"notice\":\"Gets the storage values at the specified slots.\"},\"name()\":{\"notice\":\"Gets the instance's name.\"},\"name(uint256)\":{\"notice\":\"Gets the name of the MultiToken.\"},\"nonces(address)\":{\"notice\":\"Gets the permit nonce for an account.\"},\"openLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a long position.\"},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a short position.\"},\"pause(bool)\":{\"notice\":\"Allows an authorized address to pause this contract.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the allowance of a spender for a sub-token.\"},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature.\"},\"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Redeems withdrawal shares by giving the LP a pro-rata amount of         the withdrawal pool's proceeds. This function redeems the         maximum amount of the specified withdrawal shares given the         amount of withdrawal shares ready to withdraw.\"},\"removeLiquidity(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows an LP to burn shares and withdraw from the pool.\"},\"setApproval(uint256,address,uint256)\":{\"notice\":\"Allows a user to set an approval for an individual asset with         specific amount.\"},\"setApprovalBridge(uint256,address,uint256,address)\":{\"notice\":\"Allows the compatibility linking contract to forward calls to         set asset approvals.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Allows a user to approve an operator to use all of their assets.\"},\"setFeeCollector(address)\":{\"notice\":\"Allows governance to transfer the fee collector role.\"},\"setGovernance(address)\":{\"notice\":\"Allows governance to transfer the governance role.\"},\"setPauser(address,bool)\":{\"notice\":\"Allows governance to change the pauser status of an address.\"},\"setSweepCollector(address)\":{\"notice\":\"Allows governance to transfer the sweep collector role.\"},\"sweep(address)\":{\"notice\":\"Transfers the contract's balance of a target token to the fee         collector address.\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of the MultiToken.\"},\"target0()\":{\"notice\":\"Gets the target0 address.\"},\"target1()\":{\"notice\":\"Gets the target1 address.\"},\"target2()\":{\"notice\":\"Gets the target2 address.\"},\"target3()\":{\"notice\":\"Gets the target3 address.\"},\"target4()\":{\"notice\":\"Gets the target4 address.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of the MultiToken.\"},\"transferFrom(uint256,address,address,uint256)\":{\"notice\":\"Transfers an amount of assets from the source to the destination.\"},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"notice\":\"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge.\"},\"vaultSharesToken()\":{\"notice\":\"Gets the Hyperdrive pool's vault shares token.\"},\"version()\":{\"notice\":\"Gets the instance's version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHyperdrive.sol\":\"IHyperdrive\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdrive.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdriveCore } from \\\"./IHyperdriveCore.sol\\\";\\nimport { IHyperdriveEvents } from \\\"./IHyperdriveEvents.sol\\\";\\nimport { IHyperdriveRead } from \\\"./IHyperdriveRead.sol\\\";\\nimport { IMultiToken } from \\\"./IMultiToken.sol\\\";\\n\\ninterface IHyperdrive is\\n    IHyperdriveEvents,\\n    IHyperdriveRead,\\n    IHyperdriveCore,\\n    IMultiToken\\n{\\n    /// Structs ///\\n\\n    struct MarketState {\\n        /// @dev The pool's share reserves.\\n        uint128 shareReserves;\\n        /// @dev The pool's bond reserves.\\n        uint128 bondReserves;\\n        /// @dev The global exposure of the pool due to open longs\\n        uint128 longExposure;\\n        /// @dev The amount of longs that are still open.\\n        uint128 longsOutstanding;\\n        /// @dev The net amount of shares that have been added and removed from\\n        ///      the share reserves due to flat updates.\\n        int128 shareAdjustment;\\n        /// @dev The amount of shorts that are still open.\\n        uint128 shortsOutstanding;\\n        /// @dev The average maturity time of outstanding long positions.\\n        uint128 longAverageMaturityTime;\\n        /// @dev The average maturity time of outstanding short positions.\\n        uint128 shortAverageMaturityTime;\\n        /// @dev A flag indicating whether or not the pool has been initialized.\\n        bool isInitialized;\\n        /// @dev A flag indicating whether or not the pool is paused.\\n        bool isPaused;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint112 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint128 zombieShareReserves;\\n    }\\n\\n    struct Checkpoint {\\n        /// @dev The vault share price during the first transaction in the\\n        ///      checkpoint. This is used to track the amount of interest\\n        ///      accrued by shorts as well as the vault share price at closing\\n        //       of matured longs and shorts.\\n        uint128 vaultSharePrice;\\n    }\\n\\n    struct WithdrawPool {\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint128 readyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint128 proceeds;\\n    }\\n\\n    struct Fees {\\n        /// @dev The LP fee applied to the curve portion of a trade.\\n        uint256 curve;\\n        /// @dev The LP fee applied to the flat portion of a trade.\\n        uint256 flat;\\n        /// @dev The portion of the LP fee that goes to governance.\\n        uint256 governanceLP;\\n        /// @dev The portion of the zombie interest that goes to governance.\\n        uint256 governanceZombie;\\n    }\\n\\n    struct PoolDeployConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The initial vault share price.\\n        uint256 initialVaultSharePrice;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolInfo {\\n        /// @dev The reserves of shares held by the pool.\\n        uint256 shareReserves;\\n        /// @dev The adjustment applied to the share reserves when pricing\\n        ///      bonds. This is used to ensure that the pricing mechanism is\\n        ///      held invariant under flat updates for security reasons.\\n        int256 shareAdjustment;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint256 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint256 zombieShareReserves;\\n        /// @dev The reserves of bonds held by the pool.\\n        uint256 bondReserves;\\n        /// @dev The total supply of LP shares.\\n        uint256 lpTotalSupply;\\n        /// @dev The current vault share price.\\n        uint256 vaultSharePrice;\\n        /// @dev An amount of bonds representing outstanding unmatured longs.\\n        uint256 longsOutstanding;\\n        /// @dev The average maturity time of the outstanding longs.\\n        uint256 longAverageMaturityTime;\\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\\n        uint256 shortsOutstanding;\\n        /// @dev The average maturity time of the outstanding shorts.\\n        uint256 shortAverageMaturityTime;\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint256 withdrawalSharesReadyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint256 withdrawalSharesProceeds;\\n        /// @dev The share price of LP shares. This can be used to mark LP\\n        ///      shares to market.\\n        uint256 lpSharePrice;\\n        /// @dev The global exposure of the pool due to open positions\\n        uint256 longExposure;\\n    }\\n\\n    struct Options {\\n        /// @dev The address that receives the proceeds of a trade or LP action.\\n        address destination;\\n        /// @dev A boolean indicating that the trade or LP action should be\\n        ///      settled in base if true and in the yield source shares if false.\\n        bool asBase;\\n        /// @dev Additional data that can be used to implement custom logic in\\n        ///      implementation contracts.\\n        bytes extraData;\\n    }\\n\\n    /// Errors ///\\n\\n    /// @notice Thrown when the inputs to a batch transfer don't match in\\n    ///         length.\\n    error BatchInputLengthMismatch();\\n\\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\\n    ///         to cover the minimum share reserves and the LP shares that are\\n    ///         burned on initialization.\\n    error BelowMinimumContribution();\\n\\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\\n    ///         the result to be larger than the representable scale.\\n    error ExpInvalidExponent();\\n\\n    /// @notice Thrown when a permit signature is expired.\\n    error ExpiredDeadline();\\n\\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\\n    ///         an action.\\n    error InsufficientBalance();\\n\\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\\n    ///         complete the trade.\\n    error InsufficientLiquidity();\\n\\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\\n    ///         a LP when they are adding liquidity.\\n    error InvalidApr();\\n\\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\\n    ///         larger than the current checkpoint or isn't divisible by the\\n    ///         checkpoint duration.\\n    error InvalidCheckpointTime();\\n\\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\\n    ///         functions is not the corresponding bridge.\\n    error InvalidERC20Bridge();\\n\\n    /// @notice Thrown when a destination other than the fee collector is\\n    ///         specified in `collectGovernanceFee`.\\n    error InvalidFeeDestination();\\n\\n    /// @notice Thrown when the initial share price doesn't match the share\\n    ///         price of the underlying yield source on deployment.\\n    error InvalidInitialVaultSharePrice();\\n\\n    /// @notice Thrown when the LP share price couldn't be calculated in a\\n    ///         critical situation.\\n    error InvalidLPSharePrice();\\n\\n    /// @notice Thrown when the present value calculation fails.\\n    error InvalidPresentValue();\\n\\n    /// @notice Thrown when an invalid signature is used provide permit access\\n    ///         to the MultiToken. A signature is considered to be invalid if\\n    ///         it fails to recover to the owner's address.\\n    error InvalidSignature();\\n\\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\\n    ///         the uint248 scale.\\n    error InvalidTimestamp();\\n\\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\\n    ///         equal to zero.\\n    error LnInvalidInput();\\n\\n    /// @notice Thrown when vault share price is smaller than the minimum share\\n    ///         price. This protects traders from unknowingly opening a long or\\n    ///         short after negative interest has accrued.\\n    error MinimumSharePrice();\\n\\n    /// @notice Thrown when the input or output amount of a trade is smaller\\n    ///         than the minimum transaction amount. This protects traders and\\n    ///         LPs from losses of precision that can occur at small scales.\\n    error MinimumTransactionAmount();\\n\\n    /// @notice Thrown when the present value prior to adding liquidity results in a\\n    ///         decrease in present value after liquidity. This is caused by a\\n    ///         shortage in liquidity that prevents all the open positions being\\n    ///         closed on the curve and therefore marked to 1.\\n    error DecreasedPresentValueWhenAddingLiquidity();\\n\\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\\n    ///         ether as a deposit asset.\\n    error NotPayable();\\n\\n    /// @notice Thrown when a slippage guard is violated.\\n    error OutputLimit();\\n\\n    /// @notice Thrown when the pool is already initialized and a trader calls\\n    ///         `initialize`. This prevents the pool from being reinitialized\\n    ///         after it has been initialized.\\n    error PoolAlreadyInitialized();\\n\\n    /// @notice Thrown when the pool is paused and a trader tries to add\\n    ///         liquidity, open a long, or open a short. Traders can still\\n    ///         close their existing positions while the pool is paused.\\n    error PoolIsPaused();\\n\\n    /// @notice Thrown when the owner passed to permit is the zero address. This\\n    ///         prevents users from spending the funds in address zero by\\n    ///         sending an invalid signature to ecrecover.\\n    error RestrictedZeroAddress();\\n\\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\\n    ///         normal error, this error actually indicates that a read-only\\n    ///         call succeeded. The data that it wraps is the return data from\\n    ///         the read-only call.\\n    error ReturnData(bytes data);\\n\\n    /// @notice Thrown when an asset is swept from the pool and one of the\\n    ///         pool's depository assets changes.\\n    error SweepFailed();\\n\\n    /// @notice Thrown when the distribute excess idle calculation fails due\\n    ///         to the starting present value calculation failing.\\n    error DistributeExcessIdleFailed();\\n\\n    /// @notice Thrown when an ether transfer fails.\\n    error TransferFailed();\\n\\n    /// @notice Thrown when an unauthorized user attempts to access admin\\n    ///         functionality.\\n    error Unauthorized();\\n\\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\\n    ///         uses a force-revert delegatecall pattern to ensure that calls\\n    ///         that are intended to be read-only are actually read-only.\\n    error UnexpectedSuccess();\\n\\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint112();\\n\\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint128();\\n\\n    /// @notice Thrown when casting a value to a int128 that is outside of the\\n    ///         int128 scale.\\n    error UnsafeCastToInt128();\\n\\n    /// @notice Thrown when casting a value to a int256 that is outside of the\\n    ///         int256 scale.\\n    error UnsafeCastToInt256();\\n\\n    /// @notice Thrown when an unsupported option is passed to a function or\\n    ///         a user attempts to sweep an invalid token. The options and sweep\\n    ///         targets that are supported vary between instances.\\n    error UnsupportedToken();\\n\\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\\n    error UpdateLiquidityFailed();\\n\\n    /// Getters ///\\n\\n    /// @notice Gets the target0 address.\\n    /// @return The target0 address.\\n    function target0() external view returns (address);\\n\\n    /// @notice Gets the target1 address.\\n    /// @return The target1 address.\\n    function target1() external view returns (address);\\n\\n    /// @notice Gets the target2 address.\\n    /// @return The target2 address.\\n    function target2() external view returns (address);\\n\\n    /// @notice Gets the target3 address.\\n    /// @return The target3 address.\\n    function target3() external view returns (address);\\n\\n    /// @notice Gets the target4 address.\\n    /// @return The target4 address.\\n    function target4() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\n\\ninterface IHyperdriveCore is IMultiTokenCore {\\n    /// Longs ///\\n\\n    /// @notice Opens a long position.\\n    /// @param _amount The amount of capital provided to open the long. The\\n    ///        units of this quantity are either base or vault shares, depending\\n    ///        on the value of `_options.asBase`.\\n    /// @param _minOutput The minimum number of bonds to receive.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to\\n    ///        open the long. This allows traders to protect themselves from\\n    ///        opening a long in a checkpoint where negative interest has\\n    ///        accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the bonds.\\n    /// @return bondProceeds The amount of bonds the user received.\\n    function openLong(\\n        uint256 _amount,\\n        uint256 _minOutput,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\\n\\n    /// @notice Closes a long position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the long.\\n    /// @param _bondAmount The amount of longs to close.\\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\\n    ///        of this quantity are either base or vault shares, depending on\\n    ///        the value of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds the user receives. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeLong(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// Shorts ///\\n\\n    /// @notice Opens a short position.\\n    /// @param _bondAmount The amount of bonds to short.\\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\\n    ///        The units of this quantity are either base or vault shares,\\n    ///        depending on the value of `_options.asBase`.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\\n    ///        the short. This allows traders to protect themselves from opening\\n    ///        a short in a checkpoint where negative interest has accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the short.\\n    /// @return deposit The amount the user deposited for this trade. The units\\n    ///         of this quantity are either base or vault shares, depending on\\n    ///         the value of `_options.asBase`.\\n    function openShort(\\n        uint256 _bondAmount,\\n        uint256 _maxDeposit,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\\n\\n    /// @notice Closes a short position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the short.\\n    /// @param _bondAmount The amount of shorts to close.\\n    /// @param _minOutput The minimum output of this trade. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds of closing this short. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeShort(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// LPs ///\\n\\n    /// @notice Allows the first LP to initialize the market with a target APR.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _apr The target APR.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The initial number of LP shares created.\\n    function initialize(\\n        uint256 _contribution,\\n        uint256 _apr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows LPs to supply liquidity for LP shares.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\\n    ///        to accept for their shares. LPs incur negative slippage when\\n    ///        adding liquidity if there is a net curve position in the market,\\n    ///        so this allows LPs to protect themselves from high levels of\\n    ///        slippage. The units of this quantity are either base or vault\\n    ///        shares, depending on the value of `_options.asBase`.\\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The LP shares received by the LP.\\n    function addLiquidity(\\n        uint256 _contribution,\\n        uint256 _minLpSharePrice,\\n        uint256 _minApr,\\n        uint256 _maxApr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\\n    /// @param _lpShares The LP shares to burn.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\\n    ///        for each withdrawal share that is burned. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP removing liquidity receives. The\\n    ///         units of this quantity are either base or vault shares,\\n    ///         depending on the value of `_options.asBase`.\\n    /// @return withdrawalShares The base that the LP receives buys out some of\\n    ///         their LP shares, but it may not be sufficient to fully buy the\\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\\n    ///         value to the present value they are owed. As idle capital\\n    ///         becomes available, the pool will buy back these shares.\\n    function removeLiquidity(\\n        uint256 _lpShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\\n\\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\\n    ///         the withdrawal pool's proceeds. This function redeems the\\n    ///         maximum amount of the specified withdrawal shares given the\\n    ///         amount of withdrawal shares ready to withdraw.\\n    /// @param _withdrawalShares The withdrawal shares to redeem.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to\\n    ///        receive for each withdrawal share that is burned. The units of\\n    ///        this quantity are either base or vault shares, depending on the\\n    ///        value of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP received. The units of this quantity\\n    ///         are either base or vault shares, depending on the value of\\n    ///         `_options.asBase`.\\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\\n    ///         were redeemed.\\n    function redeemWithdrawalShares(\\n        uint256 _withdrawalShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\\n\\n    /// Checkpoints ///\\n\\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\\n    /// @param _checkpointTime The time of the checkpoint to create.\\n    /// @param _maxIterations The number of iterations to use in the Newton's\\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\\n    ///        smaller than the constant.\\n    function checkpoint(\\n        uint256 _checkpointTime,\\n        uint256 _maxIterations\\n    ) external;\\n\\n    /// Admin ///\\n\\n    /// @notice This function collects the governance fees accrued by the pool.\\n    /// @param _options The options that configure how the fees are settled.\\n    /// @return proceeds The governance fees collected. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function collectGovernanceFee(\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// @notice Allows an authorized address to pause this contract.\\n    /// @param _status True to pause all deposits and false to unpause them.\\n    function pause(bool _status) external;\\n\\n    /// @notice Allows governance to transfer the fee collector role.\\n    /// @param _who The new fee collector address.\\n    function setFeeCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the sweep collector role.\\n    /// @param _who The new sweep collector address.\\n    function setSweepCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the governance role.\\n    /// @param _who The new governance address.\\n    function setGovernance(address _who) external;\\n\\n    /// @notice Allows governance to change the pauser status of an address.\\n    /// @param who The address to change.\\n    /// @param status The new pauser status.\\n    function setPauser(address who, bool status) external;\\n\\n    /// @notice Transfers the contract's balance of a target token to the fee\\n    ///         collector address.\\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\\n    ///      with 'transferFrom'. Any integrating contracts should be checked\\n    ///      for that, as it may result in an unexpected call from this address.\\n    /// @param _target The target token to sweep.\\n    function sweep(IERC20 _target) external;\\n}\\n\",\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IHyperdriveRead is IMultiTokenRead {\\n    /// @notice Gets the instance's name.\\n    /// @return The instance's name.\\n    function name() external pure returns (string memory);\\n\\n    /// @notice Gets the instance's version.\\n    /// @return The instance's version.\\n    function version() external pure returns (string memory);\\n\\n    /// @notice Gets the Hyperdrive pool's base token.\\n    /// @return The base token.\\n    function baseToken() external view returns (address);\\n\\n    /// @notice Gets the Hyperdrive pool's vault shares token.\\n    /// @return The vault shares token.\\n    function vaultSharesToken() external view returns (address);\\n\\n    /// @notice Gets one of the pool's checkpoints.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint.\\n    function getCheckpoint(\\n        uint256 _checkpointTime\\n    ) external view returns (IHyperdrive.Checkpoint memory);\\n\\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\\n    ///         of non-netted longs in the checkpoint.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint exposure.\\n    function getCheckpointExposure(\\n        uint256 _checkpointTime\\n    ) external view returns (int256);\\n\\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\\n    /// @return The market state.\\n    function getMarketState()\\n        external\\n        view\\n        returns (IHyperdrive.MarketState memory);\\n\\n    /// @notice Gets the pool's configuration parameters.\\n    /// @return The pool configuration.\\n    function getPoolConfig()\\n        external\\n        view\\n        returns (IHyperdrive.PoolConfig memory);\\n\\n    /// @notice Gets info about the pool's reserves and other state that is\\n    ///         important to evaluate potential trades.\\n    /// @return The pool info.\\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\\n\\n    /// @notice Gets the amount of governance fees that haven't been collected.\\n    /// @return The amount of uncollected governance fees.\\n    function getUncollectedGovernanceFees() external view returns (uint256);\\n\\n    /// @notice Gets information relating to the pool's withdrawal pool. This\\n    ///         includes the total proceeds underlying the withdrawal pool and\\n    ///         the number of withdrawal shares ready to be redeemed.\\n    /// @return The withdrawal pool information.\\n    function getWithdrawPool()\\n        external\\n        view\\n        returns (IHyperdrive.WithdrawPool memory);\\n\\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\\n    /// @param _account The account to check.\\n    /// @return The account's pauser status.\\n    function isPauser(address _account) external view returns (bool);\\n\\n    /// @notice Gets the storage values at the specified slots.\\n    /// @dev This serves as a generalized getter that allows consumers to create\\n    ///      custom getters to suit their purposes.\\n    /// @param _slots The storage slots to load.\\n    /// @return The values at the specified slots.\\n    function load(\\n        uint256[] calldata _slots\\n    ) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x53d74fac0617c24e649a28a95bf23174952ee7e137a9af065326505ca14903c1\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"errors":{"BatchInputLengthMismatch()":[{"notice":"Thrown when the inputs to a batch transfer don't match in         length."}],"BelowMinimumContribution()":[{"notice":"Thrown when the initializer doesn't provide sufficient liquidity         to cover the minimum share reserves and the LP shares that are         burned on initialization."}],"DecreasedPresentValueWhenAddingLiquidity()":[{"notice":"Thrown when the present value prior to adding liquidity results in a         decrease in present value after liquidity. This is caused by a         shortage in liquidity that prevents all the open positions being         closed on the curve and therefore marked to 1."}],"DistributeExcessIdleFailed()":[{"notice":"Thrown when the distribute excess idle calculation fails due         to the starting present value calculation failing."}],"ExpInvalidExponent()":[{"notice":"Thrown when the exponent to `FixedPointMath.exp` would cause the         the result to be larger than the representable scale."}],"ExpiredDeadline()":[{"notice":"Thrown when a permit signature is expired."}],"InsufficientBalance()":[{"notice":"Thrown when a user doesn't have a sufficient balance to perform         an action."}],"InsufficientLiquidity()":[{"notice":"Thrown when the pool doesn't have sufficient liquidity to         complete the trade."}],"InvalidApr()":[{"notice":"Thrown when the pool's APR is outside the bounds specified by         a LP when they are adding liquidity."}],"InvalidCheckpointTime()":[{"notice":"Thrown when the checkpoint time provided to `checkpoint` is         larger than the current checkpoint or isn't divisible by the         checkpoint duration."}],"InvalidERC20Bridge()":[{"notice":"Thrown when the caller of one of MultiToken's bridge-only         functions is not the corresponding bridge."}],"InvalidFeeDestination()":[{"notice":"Thrown when a destination other than the fee collector is         specified in `collectGovernanceFee`."}],"InvalidInitialVaultSharePrice()":[{"notice":"Thrown when the initial share price doesn't match the share         price of the underlying yield source on deployment."}],"InvalidLPSharePrice()":[{"notice":"Thrown when the LP share price couldn't be calculated in a         critical situation."}],"InvalidPresentValue()":[{"notice":"Thrown when the present value calculation fails."}],"InvalidSignature()":[{"notice":"Thrown when an invalid signature is used provide permit access         to the MultiToken. A signature is considered to be invalid if         it fails to recover to the owner's address."}],"InvalidTimestamp()":[{"notice":"Thrown when the timestamp used to construct an asset ID exceeds         the uint248 scale."}],"LnInvalidInput()":[{"notice":"Thrown when the input to `FixedPointMath.ln` is less than or         equal to zero."}],"MinimumSharePrice()":[{"notice":"Thrown when vault share price is smaller than the minimum share         price. This protects traders from unknowingly opening a long or         short after negative interest has accrued."}],"MinimumTransactionAmount()":[{"notice":"Thrown when the input or output amount of a trade is smaller         than the minimum transaction amount. This protects traders and         LPs from losses of precision that can occur at small scales."}],"NotPayable()":[{"notice":"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset."}],"OutputLimit()":[{"notice":"Thrown when a slippage guard is violated."}],"PoolAlreadyInitialized()":[{"notice":"Thrown when the pool is already initialized and a trader calls         `initialize`. This prevents the pool from being reinitialized         after it has been initialized."}],"PoolIsPaused()":[{"notice":"Thrown when the pool is paused and a trader tries to add         liquidity, open a long, or open a short. Traders can still         close their existing positions while the pool is paused."}],"RestrictedZeroAddress()":[{"notice":"Thrown when the owner passed to permit is the zero address. This         prevents users from spending the funds in address zero by         sending an invalid signature to ecrecover."}],"ReturnData(bytes)":[{"notice":"Thrown by a read-only function called by the proxy. Unlike a         normal error, this error actually indicates that a read-only         call succeeded. The data that it wraps is the return data from         the read-only call."}],"SweepFailed()":[{"notice":"Thrown when an asset is swept from the pool and one of the         pool's depository assets changes."}],"TransferFailed()":[{"notice":"Thrown when an ether transfer fails."}],"Unauthorized()":[{"notice":"Thrown when an unauthorized user attempts to access admin         functionality."}],"UnexpectedSuccess()":[{"notice":"Thrown when a read-only call succeeds. The proxy architecture         uses a force-revert delegatecall pattern to ensure that calls         that are intended to be read-only are actually read-only."}],"UnsafeCastToInt128()":[{"notice":"Thrown when casting a value to a int128 that is outside of the         int128 scale."}],"UnsafeCastToInt256()":[{"notice":"Thrown when casting a value to a int256 that is outside of the         int256 scale."}],"UnsafeCastToUint112()":[{"notice":"Thrown when casting a value to a uint112 that is outside of the         uint128 scale."}],"UnsafeCastToUint128()":[{"notice":"Thrown when casting a value to a uint128 that is outside of the         uint128 scale."}],"UnsupportedToken()":[{"notice":"Thrown when an unsupported option is passed to a function or         a user attempts to sweep an invalid token. The options and sweep         targets that are supported vary between instances."}],"UpdateLiquidityFailed()":[{"notice":"Thrown when `LPMath.calculateUpdateLiquidity` fails."}]},"events":{"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when an LP adds liquidity to the Hyperdrive pool."},"Approval(address,address,uint256)":{"notice":"Emitted when an account changes the allowance for another         account."},"ApprovalForAll(address,address,bool)":{"notice":"Emitted when an account changes the approval for all of its         tokens."},"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when a long position is closed."},"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)":{"notice":"Emitted when a short position is closed."},"CollectGovernanceFee(address,uint256)":{"notice":"Emitted when governance fees are collected."},"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256,uint256)":{"notice":"Emitted when a checkpoint is created."},"FeeCollectorUpdated(address)":{"notice":"Emitted when the fee collector address is updated."},"GovernanceUpdated(address)":{"notice":"Emitted when the governance address is updated."},"Initialize(address,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when the Hyperdrive pool is initialized."},"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when a long position is opened."},"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)":{"notice":"Emitted when a short position is opened."},"PauseStatusUpdated(bool)":{"notice":"Emitted when the pause status is updated."},"PauserUpdated(address,bool)":{"notice":"Emitted when a pauser is updated."},"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)":{"notice":"Emitted when an LP redeems withdrawal shares."},"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)":{"notice":"Emitted when an LP removes liquidity from the Hyperdrive pool."},"Sweep(address,address)":{"notice":"Emitted when tokens are swept."},"SweepCollectorUpdated(address)":{"notice":"Emitted when the sweep collector address is updated."},"TransferSingle(address,address,address,uint256,uint256)":{"notice":"Emitted when tokens are transferred from one account to another."}},"kind":"user","methods":{"PERMIT_TYPEHASH()":{"notice":"Gets the EIP712 permit typehash of the MultiToken."},"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Allows LPs to supply liquidity for LP shares."},"balanceOf(uint256,address)":{"notice":"Gets the balance of a spender for a sub-token."},"baseToken()":{"notice":"Gets the Hyperdrive pool's base token."},"batchTransferFrom(address,address,uint256[],uint256[])":{"notice":"Transfers several assets from one account to another."},"checkpoint(uint256,uint256)":{"notice":"Attempts to mint a checkpoint with the specified checkpoint time."},"closeLong(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Closes a long position with a specified maturity time."},"closeShort(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Closes a short position with a specified maturity time."},"collectGovernanceFee((address,bool,bytes))":{"notice":"This function collects the governance fees accrued by the pool."},"decimals()":{"notice":"Gets the decimals of the MultiToken."},"domainSeparator()":{"notice":"Gets the EIP712 domain separator of the MultiToken."},"getCheckpoint(uint256)":{"notice":"Gets one of the pool's checkpoints."},"getCheckpointExposure(uint256)":{"notice":"Gets the pool's exposure from a checkpoint. This is the number         of non-netted longs in the checkpoint."},"getMarketState()":{"notice":"Gets the pool's state relating to the Hyperdrive market."},"getPoolConfig()":{"notice":"Gets the pool's configuration parameters."},"getPoolInfo()":{"notice":"Gets info about the pool's reserves and other state that is         important to evaluate potential trades."},"getUncollectedGovernanceFees()":{"notice":"Gets the amount of governance fees that haven't been collected."},"getWithdrawPool()":{"notice":"Gets information relating to the pool's withdrawal pool. This         includes the total proceeds underlying the withdrawal pool and         the number of withdrawal shares ready to be redeemed."},"initialize(uint256,uint256,(address,bool,bytes))":{"notice":"Allows the first LP to initialize the market with a target APR."},"isApprovedForAll(address,address)":{"notice":"Gets the approval-for-all status of a spender on behalf of an         owner."},"isPauser(address)":{"notice":"Gets an account's pauser status within the Hyperdrive pool."},"load(uint256[])":{"notice":"Gets the storage values at the specified slots."},"name()":{"notice":"Gets the instance's name."},"name(uint256)":{"notice":"Gets the name of the MultiToken."},"nonces(address)":{"notice":"Gets the permit nonce for an account."},"openLong(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Opens a long position."},"openShort(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Opens a short position."},"pause(bool)":{"notice":"Allows an authorized address to pause this contract."},"perTokenApprovals(uint256,address,address)":{"notice":"Gets the allowance of a spender for a sub-token."},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"notice":"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature."},"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))":{"notice":"Redeems withdrawal shares by giving the LP a pro-rata amount of         the withdrawal pool's proceeds. This function redeems the         maximum amount of the specified withdrawal shares given the         amount of withdrawal shares ready to withdraw."},"removeLiquidity(uint256,uint256,(address,bool,bytes))":{"notice":"Allows an LP to burn shares and withdraw from the pool."},"setApproval(uint256,address,uint256)":{"notice":"Allows a user to set an approval for an individual asset with         specific amount."},"setApprovalBridge(uint256,address,uint256,address)":{"notice":"Allows the compatibility linking contract to forward calls to         set asset approvals."},"setApprovalForAll(address,bool)":{"notice":"Allows a user to approve an operator to use all of their assets."},"setFeeCollector(address)":{"notice":"Allows governance to transfer the fee collector role."},"setGovernance(address)":{"notice":"Allows governance to transfer the governance role."},"setPauser(address,bool)":{"notice":"Allows governance to change the pauser status of an address."},"setSweepCollector(address)":{"notice":"Allows governance to transfer the sweep collector role."},"sweep(address)":{"notice":"Transfers the contract's balance of a target token to the fee         collector address."},"symbol(uint256)":{"notice":"Gets the symbol of the MultiToken."},"target0()":{"notice":"Gets the target0 address."},"target1()":{"notice":"Gets the target1 address."},"target2()":{"notice":"Gets the target2 address."},"target3()":{"notice":"Gets the target3 address."},"target4()":{"notice":"Gets the target4 address."},"totalSupply(uint256)":{"notice":"Gets the total supply of the MultiToken."},"transferFrom(uint256,address,address,uint256)":{"notice":"Transfers an amount of assets from the source to the destination."},"transferFromBridge(uint256,address,address,uint256,address)":{"notice":"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge."},"vaultSharesToken()":{"notice":"Gets the Hyperdrive pool's vault shares token."},"version()":{"notice":"Gets the instance's version."}},"version":1}}},"contracts/src/interfaces/IHyperdriveCore.sol":{"IHyperdriveCore":{"abi":[{"inputs":[{"internalType":"uint256","name":"_contribution","type":"uint256"},{"internalType":"uint256","name":"_minLpSharePrice","type":"uint256"},{"internalType":"uint256","name":"_minApr","type":"uint256"},{"internalType":"uint256","name":"_maxApr","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"lpShares","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"batchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_checkpointTime","type":"uint256"},{"internalType":"uint256","name":"_maxIterations","type":"uint256"}],"name":"checkpoint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maturityTime","type":"uint256"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_minOutput","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"closeLong","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maturityTime","type":"uint256"},{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_minOutput","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"closeShort","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"collectGovernanceFee","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contribution","type":"uint256"},{"internalType":"uint256","name":"_apr","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"initialize","outputs":[{"internalType":"uint256","name":"lpShares","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_minOutput","type":"uint256"},{"internalType":"uint256","name":"_minVaultSharePrice","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"openLong","outputs":[{"internalType":"uint256","name":"maturityTime","type":"uint256"},{"internalType":"uint256","name":"bondProceeds","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bondAmount","type":"uint256"},{"internalType":"uint256","name":"_maxDeposit","type":"uint256"},{"internalType":"uint256","name":"_minVaultSharePrice","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"openShort","outputs":[{"internalType":"uint256","name":"maturityTime","type":"uint256"},{"internalType":"uint256","name":"deposit","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_withdrawalShares","type":"uint256"},{"internalType":"uint256","name":"_minOutputPerShare","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"redeemWithdrawalShares","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"},{"internalType":"uint256","name":"withdrawalSharesRedeemed","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lpShares","type":"uint256"},{"internalType":"uint256","name":"_minOutputPerShare","type":"uint256"},{"components":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bool","name":"asBase","type":"bool"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct IHyperdrive.Options","name":"_options","type":"tuple"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"proceeds","type":"uint256"},{"internalType":"uint256","name":"withdrawalShares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"setApprovalBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"setFeeCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_who","type":"address"}],"name":"setSweepCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_target","type":"address"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"transferFromBridge","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_contribution":"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_maxApr":"The maximum APR at which the LP is willing to supply.","_minApr":"The minimum APR at which the LP is willing to supply.","_minLpSharePrice":"The minimum LP share price the LP is willing        to accept for their shares. LPs incur negative slippage when        adding liquidity if there is a net curve position in the market,        so this allows LPs to protect themselves from high levels of        slippage. The units of this quantity are either base or vault        shares, depending on the value of `_options.asBase`.","_options":"The options that configure how the operation is settled."},"returns":{"lpShares":"The LP shares received by the LP."}},"batchTransferFrom(address,address,uint256[],uint256[])":{"params":{"from":"The source account.","ids":"The array of token ids of the asset to transfer.","to":"The destination account.","values":"The amount of each token to transfer."}},"checkpoint(uint256,uint256)":{"params":{"_checkpointTime":"The time of the checkpoint to create.","_maxIterations":"The number of iterations to use in the Newton's        method component of `_distributeExcessIdleSafe`. This defaults to        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is        smaller than the constant."}},"closeLong(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_bondAmount":"The amount of longs to close.","_maturityTime":"The maturity time of the long.","_minOutput":"The minimum proceeds the trader will accept. The units        of this quantity are either base or vault shares, depending on        the value of `_options.asBase`.","_options":"The options that configure how the trade is settled."},"returns":{"proceeds":"The proceeds the user receives. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`."}},"closeShort(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_bondAmount":"The amount of shorts to close.","_maturityTime":"The maturity time of the short.","_minOutput":"The minimum output of this trade. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_options":"The options that configure how the trade is settled."},"returns":{"proceeds":"The proceeds of closing this short. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`."}},"collectGovernanceFee((address,bool,bytes))":{"params":{"_options":"The options that configure how the fees are settled."},"returns":{"proceeds":"The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`."}},"initialize(uint256,uint256,(address,bool,bytes))":{"params":{"_apr":"The target APR.","_contribution":"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_options":"The options that configure how the operation is settled."},"returns":{"lpShares":"The initial number of LP shares created."}},"openLong(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_amount":"The amount of capital provided to open the long. The        units of this quantity are either base or vault shares, depending        on the value of `_options.asBase`.","_minOutput":"The minimum number of bonds to receive.","_minVaultSharePrice":"The minimum vault share price at which to        open the long. This allows traders to protect themselves from        opening a long in a checkpoint where negative interest has        accrued.","_options":"The options that configure how the trade is settled."},"returns":{"bondProceeds":"The amount of bonds the user received.","maturityTime":"The maturity time of the bonds."}},"openShort(uint256,uint256,uint256,(address,bool,bytes))":{"params":{"_bondAmount":"The amount of bonds to short.","_maxDeposit":"The most the user expects to deposit for this trade.        The units of this quantity are either base or vault shares,        depending on the value of `_options.asBase`.","_minVaultSharePrice":"The minimum vault share price at which to open        the short. This allows traders to protect themselves from opening        a short in a checkpoint where negative interest has accrued.","_options":"The options that configure how the trade is settled."},"returns":{"deposit":"The amount the user deposited for this trade. The units         of this quantity are either base or vault shares, depending on         the value of `_options.asBase`.","maturityTime":"The maturity time of the short."}},"pause(bool)":{"params":{"_status":"True to pause all deposits and false to unpause them."}},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.","params":{"_approved":"A boolean of the approval status to set to.","deadline":"The timestamp which the signature must be submitted by        to be valid.","owner":"The owner of the account which is having the new approval set.","r":"The r component of the ECDSA signature.","s":"The s component of the ECDSA signature.","spender":"The address which will be allowed to spend owner's tokens.","v":"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28."}},"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))":{"params":{"_minOutputPerShare":"The minimum amount the LP expects to        receive for each withdrawal share that is burned. The units of        this quantity are either base or vault shares, depending on the        value of `_options.asBase`.","_options":"The options that configure how the operation is settled.","_withdrawalShares":"The withdrawal shares to redeem."},"returns":{"proceeds":"The amount the LP received. The units of this quantity         are either base or vault shares, depending on the value of         `_options.asBase`.","withdrawalSharesRedeemed":"The amount of withdrawal shares that         were redeemed."}},"removeLiquidity(uint256,uint256,(address,bool,bytes))":{"params":{"_lpShares":"The LP shares to burn.","_minOutputPerShare":"The minimum amount the LP expects to receive        for each withdrawal share that is burned. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.","_options":"The options that configure how the operation is settled."},"returns":{"proceeds":"The amount the LP removing liquidity receives. The         units of this quantity are either base or vault shares,         depending on the value of `_options.asBase`.","withdrawalShares":"The base that the LP receives buys out some of         their LP shares, but it may not be sufficient to fully buy the         LP out. In this case, the LP receives withdrawal shares equal in         value to the present value they are owed. As idle capital         becomes available, the pool will buy back these shares."}},"setApproval(uint256,address,uint256)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalBridge(uint256,address,uint256,address)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].","caller":"The eth address which called the linking contract.","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalForAll(address,bool)":{"params":{"approved":"True to approve, false to remove approval.","operator":"The eth address which can access the caller's assets."}},"setFeeCollector(address)":{"params":{"_who":"The new fee collector address."}},"setGovernance(address)":{"params":{"_who":"The new governance address."}},"setPauser(address,bool)":{"params":{"status":"The new pauser status.","who":"The address to change."}},"setSweepCollector(address)":{"params":{"_who":"The new sweep collector address."}},"sweep(address)":{"details":"WARN: It is unlikely but possible that there is a selector overlap      with 'transferFrom'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.","params":{"_target":"The target token to sweep."}},"transferFrom(uint256,address,address,uint256)":{"params":{"amount":"The amount of token to move.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}},"transferFromBridge(uint256,address,address,uint256,address)":{"params":{"amount":"The amount of token to move.","caller":"The msg.sender or the caller of the ERC20Forwarder.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))":"4c2ac1d9","batchTransferFrom(address,address,uint256[],uint256[])":"17fad7fc","checkpoint(uint256,uint256)":"414f826d","closeLong(uint256,uint256,uint256,(address,bool,bytes))":"ded06231","closeShort(uint256,uint256,uint256,(address,bool,bytes))":"29b23fc1","collectGovernanceFee((address,bool,bytes))":"3e691db9","initialize(uint256,uint256,(address,bool,bytes))":"77d05ff4","openLong(uint256,uint256,uint256,(address,bool,bytes))":"cba2e58d","openShort(uint256,uint256,uint256,(address,bool,bytes))":"dbbe8070","pause(bool)":"02329a29","permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":"9032c726","redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))":"074a6de9","removeLiquidity(uint256,uint256,(address,bool,bytes))":"cbc13434","setApproval(uint256,address,uint256)":"9cd241af","setApprovalBridge(uint256,address,uint256,address)":"4ed2d6ac","setApprovalForAll(address,bool)":"a22cb465","setFeeCollector(address)":"a42dce80","setGovernance(address)":"ab033ea9","setPauser(address,bool)":"7180c8ca","setSweepCollector(address)":"e4af29d1","sweep(address)":"01681a62","transferFrom(uint256,address,address,uint256)":"1c0f12b6","transferFromBridge(uint256,address,address,uint256,address)":"e44808bc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minLpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minApr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxApr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxIterations\",\"type\":\"uint256\"}],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutput\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"closeLong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutput\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"closeShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"collectGovernanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVaultSharePrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"openLong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondProceeds\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bondAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVaultSharePrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"openShort\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutputPerShare\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"redeemWithdrawalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesRedeemed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lpShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOutputPerShare\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setApprovalBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"setSweepCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"transferFromBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_maxApr\":\"The maximum APR at which the LP is willing to supply.\",\"_minApr\":\"The minimum APR at which the LP is willing to supply.\",\"_minLpSharePrice\":\"The minimum LP share price the LP is willing        to accept for their shares. LPs incur negative slippage when        adding liquidity if there is a net curve position in the market,        so this allows LPs to protect themselves from high levels of        slippage. The units of this quantity are either base or vault        shares, depending on the value of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"lpShares\":\"The LP shares received by the LP.\"}},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"params\":{\"from\":\"The source account.\",\"ids\":\"The array of token ids of the asset to transfer.\",\"to\":\"The destination account.\",\"values\":\"The amount of each token to transfer.\"}},\"checkpoint(uint256,uint256)\":{\"params\":{\"_checkpointTime\":\"The time of the checkpoint to create.\",\"_maxIterations\":\"The number of iterations to use in the Newton's        method component of `_distributeExcessIdleSafe`. This defaults to        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is        smaller than the constant.\"}},\"closeLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of longs to close.\",\"_maturityTime\":\"The maturity time of the long.\",\"_minOutput\":\"The minimum proceeds the trader will accept. The units        of this quantity are either base or vault shares, depending on        the value of `_options.asBase`.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"proceeds\":\"The proceeds the user receives. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"closeShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of shorts to close.\",\"_maturityTime\":\"The maturity time of the short.\",\"_minOutput\":\"The minimum output of this trade. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"proceeds\":\"The proceeds of closing this short. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"collectGovernanceFee((address,bool,bytes))\":{\"params\":{\"_options\":\"The options that configure how the fees are settled.\"},\"returns\":{\"proceeds\":\"The governance fees collected. The units of this         quantity are either base or vault shares, depending on the value         of `_options.asBase`.\"}},\"initialize(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}},\"openLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_amount\":\"The amount of capital provided to open the long. The        units of this quantity are either base or vault shares, depending        on the value of `_options.asBase`.\",\"_minOutput\":\"The minimum number of bonds to receive.\",\"_minVaultSharePrice\":\"The minimum vault share price at which to        open the long. This allows traders to protect themselves from        opening a long in a checkpoint where negative interest has        accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"bondProceeds\":\"The amount of bonds the user received.\",\"maturityTime\":\"The maturity time of the bonds.\"}},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_bondAmount\":\"The amount of bonds to short.\",\"_maxDeposit\":\"The most the user expects to deposit for this trade.        The units of this quantity are either base or vault shares,        depending on the value of `_options.asBase`.\",\"_minVaultSharePrice\":\"The minimum vault share price at which to open        the short. This allows traders to protect themselves from opening        a short in a checkpoint where negative interest has accrued.\",\"_options\":\"The options that configure how the trade is settled.\"},\"returns\":{\"deposit\":\"The amount the user deposited for this trade. The units         of this quantity are either base or vault shares, depending on         the value of `_options.asBase`.\",\"maturityTime\":\"The maturity time of the short.\"}},\"pause(bool)\":{\"params\":{\"_status\":\"True to pause all deposits and false to unpause them.\"}},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.\",\"params\":{\"_approved\":\"A boolean of the approval status to set to.\",\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\"}},\"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_minOutputPerShare\":\"The minimum amount the LP expects to        receive for each withdrawal share that is burned. The units of        this quantity are either base or vault shares, depending on the        value of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\",\"_withdrawalShares\":\"The withdrawal shares to redeem.\"},\"returns\":{\"proceeds\":\"The amount the LP received. The units of this quantity         are either base or vault shares, depending on the value of         `_options.asBase`.\",\"withdrawalSharesRedeemed\":\"The amount of withdrawal shares that         were redeemed.\"}},\"removeLiquidity(uint256,uint256,(address,bool,bytes))\":{\"params\":{\"_lpShares\":\"The LP shares to burn.\",\"_minOutputPerShare\":\"The minimum amount the LP expects to receive        for each withdrawal share that is burned. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_options\":\"The options that configure how the operation is settled.\"},\"returns\":{\"proceeds\":\"The amount the LP removing liquidity receives. The         units of this quantity are either base or vault shares,         depending on the value of `_options.asBase`.\",\"withdrawalShares\":\"The base that the LP receives buys out some of         their LP shares, but it may not be sufficient to fully buy the         LP out. In this case, the LP receives withdrawal shares equal in         value to the present value they are owed. As idle capital         becomes available, the pool will buy back these shares.\"}},\"setApproval(uint256,address,uint256)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalBridge(uint256,address,uint256,address)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].\",\"caller\":\"The eth address which called the linking contract.\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True to approve, false to remove approval.\",\"operator\":\"The eth address which can access the caller's assets.\"}},\"setFeeCollector(address)\":{\"params\":{\"_who\":\"The new fee collector address.\"}},\"setGovernance(address)\":{\"params\":{\"_who\":\"The new governance address.\"}},\"setPauser(address,bool)\":{\"params\":{\"status\":\"The new pauser status.\",\"who\":\"The address to change.\"}},\"setSweepCollector(address)\":{\"params\":{\"_who\":\"The new sweep collector address.\"}},\"sweep(address)\":{\"details\":\"WARN: It is unlikely but possible that there is a selector overlap      with 'transferFrom'. Any integrating contracts should be checked      for that, as it may result in an unexpected call from this address.\",\"params\":{\"_target\":\"The target token to sweep.\"}},\"transferFrom(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"caller\":\"The msg.sender or the caller of the ERC20Forwarder.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows LPs to supply liquidity for LP shares.\"},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"notice\":\"Transfers several assets from one account to another.\"},\"checkpoint(uint256,uint256)\":{\"notice\":\"Attempts to mint a checkpoint with the specified checkpoint time.\"},\"closeLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Closes a long position with a specified maturity time.\"},\"closeShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Closes a short position with a specified maturity time.\"},\"collectGovernanceFee((address,bool,bytes))\":{\"notice\":\"This function collects the governance fees accrued by the pool.\"},\"initialize(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows the first LP to initialize the market with a target APR.\"},\"openLong(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a long position.\"},\"openShort(uint256,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Opens a short position.\"},\"pause(bool)\":{\"notice\":\"Allows an authorized address to pause this contract.\"},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature.\"},\"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Redeems withdrawal shares by giving the LP a pro-rata amount of         the withdrawal pool's proceeds. This function redeems the         maximum amount of the specified withdrawal shares given the         amount of withdrawal shares ready to withdraw.\"},\"removeLiquidity(uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Allows an LP to burn shares and withdraw from the pool.\"},\"setApproval(uint256,address,uint256)\":{\"notice\":\"Allows a user to set an approval for an individual asset with         specific amount.\"},\"setApprovalBridge(uint256,address,uint256,address)\":{\"notice\":\"Allows the compatibility linking contract to forward calls to         set asset approvals.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Allows a user to approve an operator to use all of their assets.\"},\"setFeeCollector(address)\":{\"notice\":\"Allows governance to transfer the fee collector role.\"},\"setGovernance(address)\":{\"notice\":\"Allows governance to transfer the governance role.\"},\"setPauser(address,bool)\":{\"notice\":\"Allows governance to change the pauser status of an address.\"},\"setSweepCollector(address)\":{\"notice\":\"Allows governance to transfer the sweep collector role.\"},\"sweep(address)\":{\"notice\":\"Transfers the contract's balance of a target token to the fee         collector address.\"},\"transferFrom(uint256,address,address,uint256)\":{\"notice\":\"Transfers an amount of assets from the source to the destination.\"},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"notice\":\"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHyperdriveCore.sol\":\"IHyperdriveCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdrive.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdriveCore } from \\\"./IHyperdriveCore.sol\\\";\\nimport { IHyperdriveEvents } from \\\"./IHyperdriveEvents.sol\\\";\\nimport { IHyperdriveRead } from \\\"./IHyperdriveRead.sol\\\";\\nimport { IMultiToken } from \\\"./IMultiToken.sol\\\";\\n\\ninterface IHyperdrive is\\n    IHyperdriveEvents,\\n    IHyperdriveRead,\\n    IHyperdriveCore,\\n    IMultiToken\\n{\\n    /// Structs ///\\n\\n    struct MarketState {\\n        /// @dev The pool's share reserves.\\n        uint128 shareReserves;\\n        /// @dev The pool's bond reserves.\\n        uint128 bondReserves;\\n        /// @dev The global exposure of the pool due to open longs\\n        uint128 longExposure;\\n        /// @dev The amount of longs that are still open.\\n        uint128 longsOutstanding;\\n        /// @dev The net amount of shares that have been added and removed from\\n        ///      the share reserves due to flat updates.\\n        int128 shareAdjustment;\\n        /// @dev The amount of shorts that are still open.\\n        uint128 shortsOutstanding;\\n        /// @dev The average maturity time of outstanding long positions.\\n        uint128 longAverageMaturityTime;\\n        /// @dev The average maturity time of outstanding short positions.\\n        uint128 shortAverageMaturityTime;\\n        /// @dev A flag indicating whether or not the pool has been initialized.\\n        bool isInitialized;\\n        /// @dev A flag indicating whether or not the pool is paused.\\n        bool isPaused;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint112 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint128 zombieShareReserves;\\n    }\\n\\n    struct Checkpoint {\\n        /// @dev The vault share price during the first transaction in the\\n        ///      checkpoint. This is used to track the amount of interest\\n        ///      accrued by shorts as well as the vault share price at closing\\n        //       of matured longs and shorts.\\n        uint128 vaultSharePrice;\\n    }\\n\\n    struct WithdrawPool {\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint128 readyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint128 proceeds;\\n    }\\n\\n    struct Fees {\\n        /// @dev The LP fee applied to the curve portion of a trade.\\n        uint256 curve;\\n        /// @dev The LP fee applied to the flat portion of a trade.\\n        uint256 flat;\\n        /// @dev The portion of the LP fee that goes to governance.\\n        uint256 governanceLP;\\n        /// @dev The portion of the zombie interest that goes to governance.\\n        uint256 governanceZombie;\\n    }\\n\\n    struct PoolDeployConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The initial vault share price.\\n        uint256 initialVaultSharePrice;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolInfo {\\n        /// @dev The reserves of shares held by the pool.\\n        uint256 shareReserves;\\n        /// @dev The adjustment applied to the share reserves when pricing\\n        ///      bonds. This is used to ensure that the pricing mechanism is\\n        ///      held invariant under flat updates for security reasons.\\n        int256 shareAdjustment;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint256 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint256 zombieShareReserves;\\n        /// @dev The reserves of bonds held by the pool.\\n        uint256 bondReserves;\\n        /// @dev The total supply of LP shares.\\n        uint256 lpTotalSupply;\\n        /// @dev The current vault share price.\\n        uint256 vaultSharePrice;\\n        /// @dev An amount of bonds representing outstanding unmatured longs.\\n        uint256 longsOutstanding;\\n        /// @dev The average maturity time of the outstanding longs.\\n        uint256 longAverageMaturityTime;\\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\\n        uint256 shortsOutstanding;\\n        /// @dev The average maturity time of the outstanding shorts.\\n        uint256 shortAverageMaturityTime;\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint256 withdrawalSharesReadyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint256 withdrawalSharesProceeds;\\n        /// @dev The share price of LP shares. This can be used to mark LP\\n        ///      shares to market.\\n        uint256 lpSharePrice;\\n        /// @dev The global exposure of the pool due to open positions\\n        uint256 longExposure;\\n    }\\n\\n    struct Options {\\n        /// @dev The address that receives the proceeds of a trade or LP action.\\n        address destination;\\n        /// @dev A boolean indicating that the trade or LP action should be\\n        ///      settled in base if true and in the yield source shares if false.\\n        bool asBase;\\n        /// @dev Additional data that can be used to implement custom logic in\\n        ///      implementation contracts.\\n        bytes extraData;\\n    }\\n\\n    /// Errors ///\\n\\n    /// @notice Thrown when the inputs to a batch transfer don't match in\\n    ///         length.\\n    error BatchInputLengthMismatch();\\n\\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\\n    ///         to cover the minimum share reserves and the LP shares that are\\n    ///         burned on initialization.\\n    error BelowMinimumContribution();\\n\\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\\n    ///         the result to be larger than the representable scale.\\n    error ExpInvalidExponent();\\n\\n    /// @notice Thrown when a permit signature is expired.\\n    error ExpiredDeadline();\\n\\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\\n    ///         an action.\\n    error InsufficientBalance();\\n\\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\\n    ///         complete the trade.\\n    error InsufficientLiquidity();\\n\\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\\n    ///         a LP when they are adding liquidity.\\n    error InvalidApr();\\n\\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\\n    ///         larger than the current checkpoint or isn't divisible by the\\n    ///         checkpoint duration.\\n    error InvalidCheckpointTime();\\n\\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\\n    ///         functions is not the corresponding bridge.\\n    error InvalidERC20Bridge();\\n\\n    /// @notice Thrown when a destination other than the fee collector is\\n    ///         specified in `collectGovernanceFee`.\\n    error InvalidFeeDestination();\\n\\n    /// @notice Thrown when the initial share price doesn't match the share\\n    ///         price of the underlying yield source on deployment.\\n    error InvalidInitialVaultSharePrice();\\n\\n    /// @notice Thrown when the LP share price couldn't be calculated in a\\n    ///         critical situation.\\n    error InvalidLPSharePrice();\\n\\n    /// @notice Thrown when the present value calculation fails.\\n    error InvalidPresentValue();\\n\\n    /// @notice Thrown when an invalid signature is used provide permit access\\n    ///         to the MultiToken. A signature is considered to be invalid if\\n    ///         it fails to recover to the owner's address.\\n    error InvalidSignature();\\n\\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\\n    ///         the uint248 scale.\\n    error InvalidTimestamp();\\n\\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\\n    ///         equal to zero.\\n    error LnInvalidInput();\\n\\n    /// @notice Thrown when vault share price is smaller than the minimum share\\n    ///         price. This protects traders from unknowingly opening a long or\\n    ///         short after negative interest has accrued.\\n    error MinimumSharePrice();\\n\\n    /// @notice Thrown when the input or output amount of a trade is smaller\\n    ///         than the minimum transaction amount. This protects traders and\\n    ///         LPs from losses of precision that can occur at small scales.\\n    error MinimumTransactionAmount();\\n\\n    /// @notice Thrown when the present value prior to adding liquidity results in a\\n    ///         decrease in present value after liquidity. This is caused by a\\n    ///         shortage in liquidity that prevents all the open positions being\\n    ///         closed on the curve and therefore marked to 1.\\n    error DecreasedPresentValueWhenAddingLiquidity();\\n\\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\\n    ///         ether as a deposit asset.\\n    error NotPayable();\\n\\n    /// @notice Thrown when a slippage guard is violated.\\n    error OutputLimit();\\n\\n    /// @notice Thrown when the pool is already initialized and a trader calls\\n    ///         `initialize`. This prevents the pool from being reinitialized\\n    ///         after it has been initialized.\\n    error PoolAlreadyInitialized();\\n\\n    /// @notice Thrown when the pool is paused and a trader tries to add\\n    ///         liquidity, open a long, or open a short. Traders can still\\n    ///         close their existing positions while the pool is paused.\\n    error PoolIsPaused();\\n\\n    /// @notice Thrown when the owner passed to permit is the zero address. This\\n    ///         prevents users from spending the funds in address zero by\\n    ///         sending an invalid signature to ecrecover.\\n    error RestrictedZeroAddress();\\n\\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\\n    ///         normal error, this error actually indicates that a read-only\\n    ///         call succeeded. The data that it wraps is the return data from\\n    ///         the read-only call.\\n    error ReturnData(bytes data);\\n\\n    /// @notice Thrown when an asset is swept from the pool and one of the\\n    ///         pool's depository assets changes.\\n    error SweepFailed();\\n\\n    /// @notice Thrown when the distribute excess idle calculation fails due\\n    ///         to the starting present value calculation failing.\\n    error DistributeExcessIdleFailed();\\n\\n    /// @notice Thrown when an ether transfer fails.\\n    error TransferFailed();\\n\\n    /// @notice Thrown when an unauthorized user attempts to access admin\\n    ///         functionality.\\n    error Unauthorized();\\n\\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\\n    ///         uses a force-revert delegatecall pattern to ensure that calls\\n    ///         that are intended to be read-only are actually read-only.\\n    error UnexpectedSuccess();\\n\\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint112();\\n\\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint128();\\n\\n    /// @notice Thrown when casting a value to a int128 that is outside of the\\n    ///         int128 scale.\\n    error UnsafeCastToInt128();\\n\\n    /// @notice Thrown when casting a value to a int256 that is outside of the\\n    ///         int256 scale.\\n    error UnsafeCastToInt256();\\n\\n    /// @notice Thrown when an unsupported option is passed to a function or\\n    ///         a user attempts to sweep an invalid token. The options and sweep\\n    ///         targets that are supported vary between instances.\\n    error UnsupportedToken();\\n\\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\\n    error UpdateLiquidityFailed();\\n\\n    /// Getters ///\\n\\n    /// @notice Gets the target0 address.\\n    /// @return The target0 address.\\n    function target0() external view returns (address);\\n\\n    /// @notice Gets the target1 address.\\n    /// @return The target1 address.\\n    function target1() external view returns (address);\\n\\n    /// @notice Gets the target2 address.\\n    /// @return The target2 address.\\n    function target2() external view returns (address);\\n\\n    /// @notice Gets the target3 address.\\n    /// @return The target3 address.\\n    function target3() external view returns (address);\\n\\n    /// @notice Gets the target4 address.\\n    /// @return The target4 address.\\n    function target4() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\n\\ninterface IHyperdriveCore is IMultiTokenCore {\\n    /// Longs ///\\n\\n    /// @notice Opens a long position.\\n    /// @param _amount The amount of capital provided to open the long. The\\n    ///        units of this quantity are either base or vault shares, depending\\n    ///        on the value of `_options.asBase`.\\n    /// @param _minOutput The minimum number of bonds to receive.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to\\n    ///        open the long. This allows traders to protect themselves from\\n    ///        opening a long in a checkpoint where negative interest has\\n    ///        accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the bonds.\\n    /// @return bondProceeds The amount of bonds the user received.\\n    function openLong(\\n        uint256 _amount,\\n        uint256 _minOutput,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\\n\\n    /// @notice Closes a long position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the long.\\n    /// @param _bondAmount The amount of longs to close.\\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\\n    ///        of this quantity are either base or vault shares, depending on\\n    ///        the value of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds the user receives. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeLong(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// Shorts ///\\n\\n    /// @notice Opens a short position.\\n    /// @param _bondAmount The amount of bonds to short.\\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\\n    ///        The units of this quantity are either base or vault shares,\\n    ///        depending on the value of `_options.asBase`.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\\n    ///        the short. This allows traders to protect themselves from opening\\n    ///        a short in a checkpoint where negative interest has accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the short.\\n    /// @return deposit The amount the user deposited for this trade. The units\\n    ///         of this quantity are either base or vault shares, depending on\\n    ///         the value of `_options.asBase`.\\n    function openShort(\\n        uint256 _bondAmount,\\n        uint256 _maxDeposit,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\\n\\n    /// @notice Closes a short position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the short.\\n    /// @param _bondAmount The amount of shorts to close.\\n    /// @param _minOutput The minimum output of this trade. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds of closing this short. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeShort(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// LPs ///\\n\\n    /// @notice Allows the first LP to initialize the market with a target APR.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _apr The target APR.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The initial number of LP shares created.\\n    function initialize(\\n        uint256 _contribution,\\n        uint256 _apr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows LPs to supply liquidity for LP shares.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\\n    ///        to accept for their shares. LPs incur negative slippage when\\n    ///        adding liquidity if there is a net curve position in the market,\\n    ///        so this allows LPs to protect themselves from high levels of\\n    ///        slippage. The units of this quantity are either base or vault\\n    ///        shares, depending on the value of `_options.asBase`.\\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The LP shares received by the LP.\\n    function addLiquidity(\\n        uint256 _contribution,\\n        uint256 _minLpSharePrice,\\n        uint256 _minApr,\\n        uint256 _maxApr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\\n    /// @param _lpShares The LP shares to burn.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\\n    ///        for each withdrawal share that is burned. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP removing liquidity receives. The\\n    ///         units of this quantity are either base or vault shares,\\n    ///         depending on the value of `_options.asBase`.\\n    /// @return withdrawalShares The base that the LP receives buys out some of\\n    ///         their LP shares, but it may not be sufficient to fully buy the\\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\\n    ///         value to the present value they are owed. As idle capital\\n    ///         becomes available, the pool will buy back these shares.\\n    function removeLiquidity(\\n        uint256 _lpShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\\n\\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\\n    ///         the withdrawal pool's proceeds. This function redeems the\\n    ///         maximum amount of the specified withdrawal shares given the\\n    ///         amount of withdrawal shares ready to withdraw.\\n    /// @param _withdrawalShares The withdrawal shares to redeem.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to\\n    ///        receive for each withdrawal share that is burned. The units of\\n    ///        this quantity are either base or vault shares, depending on the\\n    ///        value of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP received. The units of this quantity\\n    ///         are either base or vault shares, depending on the value of\\n    ///         `_options.asBase`.\\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\\n    ///         were redeemed.\\n    function redeemWithdrawalShares(\\n        uint256 _withdrawalShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\\n\\n    /// Checkpoints ///\\n\\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\\n    /// @param _checkpointTime The time of the checkpoint to create.\\n    /// @param _maxIterations The number of iterations to use in the Newton's\\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\\n    ///        smaller than the constant.\\n    function checkpoint(\\n        uint256 _checkpointTime,\\n        uint256 _maxIterations\\n    ) external;\\n\\n    /// Admin ///\\n\\n    /// @notice This function collects the governance fees accrued by the pool.\\n    /// @param _options The options that configure how the fees are settled.\\n    /// @return proceeds The governance fees collected. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function collectGovernanceFee(\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// @notice Allows an authorized address to pause this contract.\\n    /// @param _status True to pause all deposits and false to unpause them.\\n    function pause(bool _status) external;\\n\\n    /// @notice Allows governance to transfer the fee collector role.\\n    /// @param _who The new fee collector address.\\n    function setFeeCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the sweep collector role.\\n    /// @param _who The new sweep collector address.\\n    function setSweepCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the governance role.\\n    /// @param _who The new governance address.\\n    function setGovernance(address _who) external;\\n\\n    /// @notice Allows governance to change the pauser status of an address.\\n    /// @param who The address to change.\\n    /// @param status The new pauser status.\\n    function setPauser(address who, bool status) external;\\n\\n    /// @notice Transfers the contract's balance of a target token to the fee\\n    ///         collector address.\\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\\n    ///      with 'transferFrom'. Any integrating contracts should be checked\\n    ///      for that, as it may result in an unexpected call from this address.\\n    /// @param _target The target token to sweep.\\n    function sweep(IERC20 _target) external;\\n}\\n\",\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IHyperdriveRead is IMultiTokenRead {\\n    /// @notice Gets the instance's name.\\n    /// @return The instance's name.\\n    function name() external pure returns (string memory);\\n\\n    /// @notice Gets the instance's version.\\n    /// @return The instance's version.\\n    function version() external pure returns (string memory);\\n\\n    /// @notice Gets the Hyperdrive pool's base token.\\n    /// @return The base token.\\n    function baseToken() external view returns (address);\\n\\n    /// @notice Gets the Hyperdrive pool's vault shares token.\\n    /// @return The vault shares token.\\n    function vaultSharesToken() external view returns (address);\\n\\n    /// @notice Gets one of the pool's checkpoints.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint.\\n    function getCheckpoint(\\n        uint256 _checkpointTime\\n    ) external view returns (IHyperdrive.Checkpoint memory);\\n\\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\\n    ///         of non-netted longs in the checkpoint.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint exposure.\\n    function getCheckpointExposure(\\n        uint256 _checkpointTime\\n    ) external view returns (int256);\\n\\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\\n    /// @return The market state.\\n    function getMarketState()\\n        external\\n        view\\n        returns (IHyperdrive.MarketState memory);\\n\\n    /// @notice Gets the pool's configuration parameters.\\n    /// @return The pool configuration.\\n    function getPoolConfig()\\n        external\\n        view\\n        returns (IHyperdrive.PoolConfig memory);\\n\\n    /// @notice Gets info about the pool's reserves and other state that is\\n    ///         important to evaluate potential trades.\\n    /// @return The pool info.\\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\\n\\n    /// @notice Gets the amount of governance fees that haven't been collected.\\n    /// @return The amount of uncollected governance fees.\\n    function getUncollectedGovernanceFees() external view returns (uint256);\\n\\n    /// @notice Gets information relating to the pool's withdrawal pool. This\\n    ///         includes the total proceeds underlying the withdrawal pool and\\n    ///         the number of withdrawal shares ready to be redeemed.\\n    /// @return The withdrawal pool information.\\n    function getWithdrawPool()\\n        external\\n        view\\n        returns (IHyperdrive.WithdrawPool memory);\\n\\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\\n    /// @param _account The account to check.\\n    /// @return The account's pauser status.\\n    function isPauser(address _account) external view returns (bool);\\n\\n    /// @notice Gets the storage values at the specified slots.\\n    /// @dev This serves as a generalized getter that allows consumers to create\\n    ///      custom getters to suit their purposes.\\n    /// @param _slots The storage slots to load.\\n    /// @return The values at the specified slots.\\n    function load(\\n        uint256[] calldata _slots\\n    ) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x53d74fac0617c24e649a28a95bf23174952ee7e137a9af065326505ca14903c1\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"addLiquidity(uint256,uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Allows LPs to supply liquidity for LP shares."},"batchTransferFrom(address,address,uint256[],uint256[])":{"notice":"Transfers several assets from one account to another."},"checkpoint(uint256,uint256)":{"notice":"Attempts to mint a checkpoint with the specified checkpoint time."},"closeLong(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Closes a long position with a specified maturity time."},"closeShort(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Closes a short position with a specified maturity time."},"collectGovernanceFee((address,bool,bytes))":{"notice":"This function collects the governance fees accrued by the pool."},"initialize(uint256,uint256,(address,bool,bytes))":{"notice":"Allows the first LP to initialize the market with a target APR."},"openLong(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Opens a long position."},"openShort(uint256,uint256,uint256,(address,bool,bytes))":{"notice":"Opens a short position."},"pause(bool)":{"notice":"Allows an authorized address to pause this contract."},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"notice":"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature."},"redeemWithdrawalShares(uint256,uint256,(address,bool,bytes))":{"notice":"Redeems withdrawal shares by giving the LP a pro-rata amount of         the withdrawal pool's proceeds. This function redeems the         maximum amount of the specified withdrawal shares given the         amount of withdrawal shares ready to withdraw."},"removeLiquidity(uint256,uint256,(address,bool,bytes))":{"notice":"Allows an LP to burn shares and withdraw from the pool."},"setApproval(uint256,address,uint256)":{"notice":"Allows a user to set an approval for an individual asset with         specific amount."},"setApprovalBridge(uint256,address,uint256,address)":{"notice":"Allows the compatibility linking contract to forward calls to         set asset approvals."},"setApprovalForAll(address,bool)":{"notice":"Allows a user to approve an operator to use all of their assets."},"setFeeCollector(address)":{"notice":"Allows governance to transfer the fee collector role."},"setGovernance(address)":{"notice":"Allows governance to transfer the governance role."},"setPauser(address,bool)":{"notice":"Allows governance to change the pauser status of an address."},"setSweepCollector(address)":{"notice":"Allows governance to transfer the sweep collector role."},"sweep(address)":{"notice":"Transfers the contract's balance of a target token to the fee         collector address."},"transferFrom(uint256,address,address,uint256)":{"notice":"Transfers an amount of assets from the source to the destination."},"transferFromBridge(uint256,address,address,uint256,address)":{"notice":"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge."}},"version":1}}},"contracts/src/interfaces/IHyperdriveEvents.sol":{"IHyperdriveEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"lpAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"lpSharePrice","type":"uint256"}],"name":"AddLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"CloseLong","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"basePayment","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"CloseShort","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collector","type":"address"},{"indexed":false,"internalType":"uint256","name":"fees","type":"uint256"}],"name":"CollectGovernanceFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"checkpointTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"checkpointVaultSharePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultSharePrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturedShorts","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturedLongs","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpSharePrice","type":"uint256"}],"name":"CreateCheckpoint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newFeeCollector","type":"address"}],"name":"FeeCollectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newGovernance","type":"address"}],"name":"GovernanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"lpAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"apr","type":"uint256"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"OpenLong","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"trader","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maturityTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"baseProceeds","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bondAmount","type":"uint256"}],"name":"OpenShort","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PauseStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newPauser","type":"address"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"PauserUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawalShareAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"}],"name":"RedeemWithdrawalShares","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":false,"internalType":"uint256","name":"lpAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"baseAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"vaultShareAmount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"asBase","type":"bool"},{"indexed":false,"internalType":"uint256","name":"withdrawalShareAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpSharePrice","type":"uint256"}],"name":"RemoveLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collector","type":"address"},{"indexed":true,"internalType":"address","name":"target","type":"address"}],"name":"Sweep","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newSweepCollector","type":"address"}],"name":"SweepCollectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePayment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"CollectGovernanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"checkpointTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"checkpointVaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedShorts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedLongs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"CreateCheckpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"}],\"name\":\"RedeemWithdrawalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Sweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSweepCollector\",\"type\":\"address\"}],\"name\":\"SweepCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when an LP adds liquidity to the Hyperdrive pool.\"},\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is closed.\"},\"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is closed.\"},\"CollectGovernanceFee(address,uint256)\":{\"notice\":\"Emitted when governance fees are collected.\"},\"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a checkpoint is created.\"},\"FeeCollectorUpdated(address)\":{\"notice\":\"Emitted when the fee collector address is updated.\"},\"GovernanceUpdated(address)\":{\"notice\":\"Emitted when the governance address is updated.\"},\"Initialize(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when the Hyperdrive pool is initialized.\"},\"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is opened.\"},\"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is opened.\"},\"PauseStatusUpdated(bool)\":{\"notice\":\"Emitted when the pause status is updated.\"},\"PauserUpdated(address,bool)\":{\"notice\":\"Emitted when a pauser is updated.\"},\"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"Emitted when an LP redeems withdrawal shares.\"},\"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when an LP removes liquidity from the Hyperdrive pool.\"},\"Sweep(address,address)\":{\"notice\":\"Emitted when tokens are swept.\"},\"SweepCollectorUpdated(address)\":{\"notice\":\"Emitted when the sweep collector address is updated.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHyperdriveEvents.sol\":\"IHyperdriveEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when an LP adds liquidity to the Hyperdrive pool."},"Approval(address,address,uint256)":{"notice":"Emitted when an account changes the allowance for another         account."},"ApprovalForAll(address,address,bool)":{"notice":"Emitted when an account changes the approval for all of its         tokens."},"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when a long position is closed."},"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)":{"notice":"Emitted when a short position is closed."},"CollectGovernanceFee(address,uint256)":{"notice":"Emitted when governance fees are collected."},"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256,uint256)":{"notice":"Emitted when a checkpoint is created."},"FeeCollectorUpdated(address)":{"notice":"Emitted when the fee collector address is updated."},"GovernanceUpdated(address)":{"notice":"Emitted when the governance address is updated."},"Initialize(address,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when the Hyperdrive pool is initialized."},"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)":{"notice":"Emitted when a long position is opened."},"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)":{"notice":"Emitted when a short position is opened."},"PauseStatusUpdated(bool)":{"notice":"Emitted when the pause status is updated."},"PauserUpdated(address,bool)":{"notice":"Emitted when a pauser is updated."},"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)":{"notice":"Emitted when an LP redeems withdrawal shares."},"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)":{"notice":"Emitted when an LP removes liquidity from the Hyperdrive pool."},"Sweep(address,address)":{"notice":"Emitted when tokens are swept."},"SweepCollectorUpdated(address)":{"notice":"Emitted when the sweep collector address is updated."},"TransferSingle(address,address,address,uint256,uint256)":{"notice":"Emitted when tokens are transferred from one account to another."}},"kind":"user","methods":{},"version":1}}},"contracts/src/interfaces/IHyperdriveRead.sol":{"IHyperdriveRead":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_checkpointTime","type":"uint256"}],"name":"getCheckpoint","outputs":[{"components":[{"internalType":"uint128","name":"vaultSharePrice","type":"uint128"}],"internalType":"struct IHyperdrive.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_checkpointTime","type":"uint256"}],"name":"getCheckpointExposure","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketState","outputs":[{"components":[{"internalType":"uint128","name":"shareReserves","type":"uint128"},{"internalType":"uint128","name":"bondReserves","type":"uint128"},{"internalType":"uint128","name":"longExposure","type":"uint128"},{"internalType":"uint128","name":"longsOutstanding","type":"uint128"},{"internalType":"int128","name":"shareAdjustment","type":"int128"},{"internalType":"uint128","name":"shortsOutstanding","type":"uint128"},{"internalType":"uint128","name":"longAverageMaturityTime","type":"uint128"},{"internalType":"uint128","name":"shortAverageMaturityTime","type":"uint128"},{"internalType":"bool","name":"isInitialized","type":"bool"},{"internalType":"bool","name":"isPaused","type":"bool"},{"internalType":"uint112","name":"zombieBaseProceeds","type":"uint112"},{"internalType":"uint128","name":"zombieShareReserves","type":"uint128"}],"internalType":"struct IHyperdrive.MarketState","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfig","outputs":[{"components":[{"internalType":"contract IERC20","name":"baseToken","type":"address"},{"internalType":"contract IERC20","name":"vaultSharesToken","type":"address"},{"internalType":"address","name":"linkerFactory","type":"address"},{"internalType":"bytes32","name":"linkerCodeHash","type":"bytes32"},{"internalType":"uint256","name":"initialVaultSharePrice","type":"uint256"},{"internalType":"uint256","name":"minimumShareReserves","type":"uint256"},{"internalType":"uint256","name":"minimumTransactionAmount","type":"uint256"},{"internalType":"uint256","name":"positionDuration","type":"uint256"},{"internalType":"uint256","name":"checkpointDuration","type":"uint256"},{"internalType":"uint256","name":"timeStretch","type":"uint256"},{"internalType":"address","name":"governance","type":"address"},{"internalType":"address","name":"feeCollector","type":"address"},{"internalType":"address","name":"sweepCollector","type":"address"},{"components":[{"internalType":"uint256","name":"curve","type":"uint256"},{"internalType":"uint256","name":"flat","type":"uint256"},{"internalType":"uint256","name":"governanceLP","type":"uint256"},{"internalType":"uint256","name":"governanceZombie","type":"uint256"}],"internalType":"struct IHyperdrive.Fees","name":"fees","type":"tuple"}],"internalType":"struct IHyperdrive.PoolConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolInfo","outputs":[{"components":[{"internalType":"uint256","name":"shareReserves","type":"uint256"},{"internalType":"int256","name":"shareAdjustment","type":"int256"},{"internalType":"uint256","name":"zombieBaseProceeds","type":"uint256"},{"internalType":"uint256","name":"zombieShareReserves","type":"uint256"},{"internalType":"uint256","name":"bondReserves","type":"uint256"},{"internalType":"uint256","name":"lpTotalSupply","type":"uint256"},{"internalType":"uint256","name":"vaultSharePrice","type":"uint256"},{"internalType":"uint256","name":"longsOutstanding","type":"uint256"},{"internalType":"uint256","name":"longAverageMaturityTime","type":"uint256"},{"internalType":"uint256","name":"shortsOutstanding","type":"uint256"},{"internalType":"uint256","name":"shortAverageMaturityTime","type":"uint256"},{"internalType":"uint256","name":"withdrawalSharesReadyToWithdraw","type":"uint256"},{"internalType":"uint256","name":"withdrawalSharesProceeds","type":"uint256"},{"internalType":"uint256","name":"lpSharePrice","type":"uint256"},{"internalType":"uint256","name":"longExposure","type":"uint256"}],"internalType":"struct IHyperdrive.PoolInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUncollectedGovernanceFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWithdrawPool","outputs":[{"components":[{"internalType":"uint128","name":"readyToWithdraw","type":"uint128"},{"internalType":"uint128","name":"proceeds","type":"uint128"}],"internalType":"struct IHyperdrive.WithdrawPool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"isPauser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_slots","type":"uint256[]"}],"name":"load","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"perTokenApprovals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultSharesToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(uint256,address)":{"params":{"owner":"The owner of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The balance of the owner."}},"baseToken()":{"returns":{"_0":"The base token."}},"decimals()":{"returns":{"_0":"The decimals of the MultiToken."}},"getCheckpoint(uint256)":{"params":{"_checkpointTime":"The checkpoint time."},"returns":{"_0":"The checkpoint."}},"getCheckpointExposure(uint256)":{"params":{"_checkpointTime":"The checkpoint time."},"returns":{"_0":"The checkpoint exposure."}},"getMarketState()":{"returns":{"_0":"The market state."}},"getPoolConfig()":{"returns":{"_0":"The pool configuration."}},"getPoolInfo()":{"returns":{"_0":"The pool info."}},"getUncollectedGovernanceFees()":{"returns":{"_0":"The amount of uncollected governance fees."}},"getWithdrawPool()":{"returns":{"_0":"The withdrawal pool information."}},"isApprovedForAll(address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens."},"returns":{"_0":"The approval-for-all status of the spender for the owner."}},"isPauser(address)":{"params":{"_account":"The account to check."},"returns":{"_0":"The account's pauser status."}},"load(uint256[])":{"details":"This serves as a generalized getter that allows consumers to create      custom getters to suit their purposes.","params":{"_slots":"The storage slots to load."},"returns":{"_0":"The values at the specified slots."}},"name()":{"returns":{"_0":"The instance's name."}},"name(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The name of the MultiToken."}},"nonces(address)":{"params":{"owner":"The owner of the tokens."},"returns":{"_0":"The permit nonce of the owner."}},"perTokenApprovals(uint256,address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The allowance of the spender for the owner."}},"symbol(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The symbol of the MultiToken."}},"totalSupply(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The total supply of the MultiToken."}},"vaultSharesToken()":{"returns":{"_0":"The vault shares token."}},"version()":{"returns":{"_0":"The instance's version."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(uint256,address)":"3656eec2","baseToken()":"c55dae63","decimals()":"313ce567","getCheckpoint(uint256)":"20fc4881","getCheckpointExposure(uint256)":"cf210e65","getMarketState()":"d8165743","getPoolConfig()":"b0d96580","getPoolInfo()":"60246c88","getUncollectedGovernanceFees()":"c69e16ad","getWithdrawPool()":"fba56008","isApprovedForAll(address,address)":"e985e9c5","isPauser(address)":"46fbf68e","load(uint256[])":"becee9c3","name()":"06fdde03","name(uint256)":"00ad800c","nonces(address)":"7ecebe00","perTokenApprovals(uint256,address,address)":"21ff32a9","symbol(uint256)":"4e41a1fb","totalSupply(uint256)":"bd85b039","vaultSharesToken()":"0a4e1493","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"vaultSharePrice\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointTime\",\"type\":\"uint256\"}],\"name\":\"getCheckpointExposure\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"shareReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bondReserves\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longExposure\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"shareAdjustment\",\"type\":\"int128\"},{\"internalType\":\"uint128\",\"name\":\"shortsOutstanding\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isInitialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint112\"},{\"internalType\":\"uint128\",\"name\":\"zombieShareReserves\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.MarketState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialVaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"zombieBaseProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zombieShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageMaturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesReadyToWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesProceeds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longExposure\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUncollectedGovernanceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"readyToWithdraw\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"proceeds\",\"type\":\"uint128\"}],\"internalType\":\"struct IHyperdrive.WithdrawPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_slots\",\"type\":\"uint256[]\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultSharesToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(uint256,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The balance of the owner.\"}},\"baseToken()\":{\"returns\":{\"_0\":\"The base token.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the MultiToken.\"}},\"getCheckpoint(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint.\"}},\"getCheckpointExposure(uint256)\":{\"params\":{\"_checkpointTime\":\"The checkpoint time.\"},\"returns\":{\"_0\":\"The checkpoint exposure.\"}},\"getMarketState()\":{\"returns\":{\"_0\":\"The market state.\"}},\"getPoolConfig()\":{\"returns\":{\"_0\":\"The pool configuration.\"}},\"getPoolInfo()\":{\"returns\":{\"_0\":\"The pool info.\"}},\"getUncollectedGovernanceFees()\":{\"returns\":{\"_0\":\"The amount of uncollected governance fees.\"}},\"getWithdrawPool()\":{\"returns\":{\"_0\":\"The withdrawal pool information.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\"},\"returns\":{\"_0\":\"The approval-for-all status of the spender for the owner.\"}},\"isPauser(address)\":{\"params\":{\"_account\":\"The account to check.\"},\"returns\":{\"_0\":\"The account's pauser status.\"}},\"load(uint256[])\":{\"details\":\"This serves as a generalized getter that allows consumers to create      custom getters to suit their purposes.\",\"params\":{\"_slots\":\"The storage slots to load.\"},\"returns\":{\"_0\":\"The values at the specified slots.\"}},\"name()\":{\"returns\":{\"_0\":\"The instance's name.\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The name of the MultiToken.\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"The permit nonce of the owner.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The allowance of the spender for the owner.\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The symbol of the MultiToken.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The total supply of the MultiToken.\"}},\"vaultSharesToken()\":{\"returns\":{\"_0\":\"The vault shares token.\"}},\"version()\":{\"returns\":{\"_0\":\"The instance's version.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(uint256,address)\":{\"notice\":\"Gets the balance of a spender for a sub-token.\"},\"baseToken()\":{\"notice\":\"Gets the Hyperdrive pool's base token.\"},\"decimals()\":{\"notice\":\"Gets the decimals of the MultiToken.\"},\"getCheckpoint(uint256)\":{\"notice\":\"Gets one of the pool's checkpoints.\"},\"getCheckpointExposure(uint256)\":{\"notice\":\"Gets the pool's exposure from a checkpoint. This is the number         of non-netted longs in the checkpoint.\"},\"getMarketState()\":{\"notice\":\"Gets the pool's state relating to the Hyperdrive market.\"},\"getPoolConfig()\":{\"notice\":\"Gets the pool's configuration parameters.\"},\"getPoolInfo()\":{\"notice\":\"Gets info about the pool's reserves and other state that is         important to evaluate potential trades.\"},\"getUncollectedGovernanceFees()\":{\"notice\":\"Gets the amount of governance fees that haven't been collected.\"},\"getWithdrawPool()\":{\"notice\":\"Gets information relating to the pool's withdrawal pool. This         includes the total proceeds underlying the withdrawal pool and         the number of withdrawal shares ready to be redeemed.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval-for-all status of a spender on behalf of an         owner.\"},\"isPauser(address)\":{\"notice\":\"Gets an account's pauser status within the Hyperdrive pool.\"},\"load(uint256[])\":{\"notice\":\"Gets the storage values at the specified slots.\"},\"name()\":{\"notice\":\"Gets the instance's name.\"},\"name(uint256)\":{\"notice\":\"Gets the name of the MultiToken.\"},\"nonces(address)\":{\"notice\":\"Gets the permit nonce for an account.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the allowance of a spender for a sub-token.\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of the MultiToken.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of the MultiToken.\"},\"vaultSharesToken()\":{\"notice\":\"Gets the Hyperdrive pool's vault shares token.\"},\"version()\":{\"notice\":\"Gets the instance's version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHyperdriveRead.sol\":\"IHyperdriveRead\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdrive.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdriveCore } from \\\"./IHyperdriveCore.sol\\\";\\nimport { IHyperdriveEvents } from \\\"./IHyperdriveEvents.sol\\\";\\nimport { IHyperdriveRead } from \\\"./IHyperdriveRead.sol\\\";\\nimport { IMultiToken } from \\\"./IMultiToken.sol\\\";\\n\\ninterface IHyperdrive is\\n    IHyperdriveEvents,\\n    IHyperdriveRead,\\n    IHyperdriveCore,\\n    IMultiToken\\n{\\n    /// Structs ///\\n\\n    struct MarketState {\\n        /// @dev The pool's share reserves.\\n        uint128 shareReserves;\\n        /// @dev The pool's bond reserves.\\n        uint128 bondReserves;\\n        /// @dev The global exposure of the pool due to open longs\\n        uint128 longExposure;\\n        /// @dev The amount of longs that are still open.\\n        uint128 longsOutstanding;\\n        /// @dev The net amount of shares that have been added and removed from\\n        ///      the share reserves due to flat updates.\\n        int128 shareAdjustment;\\n        /// @dev The amount of shorts that are still open.\\n        uint128 shortsOutstanding;\\n        /// @dev The average maturity time of outstanding long positions.\\n        uint128 longAverageMaturityTime;\\n        /// @dev The average maturity time of outstanding short positions.\\n        uint128 shortAverageMaturityTime;\\n        /// @dev A flag indicating whether or not the pool has been initialized.\\n        bool isInitialized;\\n        /// @dev A flag indicating whether or not the pool is paused.\\n        bool isPaused;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint112 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint128 zombieShareReserves;\\n    }\\n\\n    struct Checkpoint {\\n        /// @dev The vault share price during the first transaction in the\\n        ///      checkpoint. This is used to track the amount of interest\\n        ///      accrued by shorts as well as the vault share price at closing\\n        //       of matured longs and shorts.\\n        uint128 vaultSharePrice;\\n    }\\n\\n    struct WithdrawPool {\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint128 readyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint128 proceeds;\\n    }\\n\\n    struct Fees {\\n        /// @dev The LP fee applied to the curve portion of a trade.\\n        uint256 curve;\\n        /// @dev The LP fee applied to the flat portion of a trade.\\n        uint256 flat;\\n        /// @dev The portion of the LP fee that goes to governance.\\n        uint256 governanceLP;\\n        /// @dev The portion of the zombie interest that goes to governance.\\n        uint256 governanceZombie;\\n    }\\n\\n    struct PoolDeployConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The initial vault share price.\\n        uint256 initialVaultSharePrice;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolInfo {\\n        /// @dev The reserves of shares held by the pool.\\n        uint256 shareReserves;\\n        /// @dev The adjustment applied to the share reserves when pricing\\n        ///      bonds. This is used to ensure that the pricing mechanism is\\n        ///      held invariant under flat updates for security reasons.\\n        int256 shareAdjustment;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint256 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint256 zombieShareReserves;\\n        /// @dev The reserves of bonds held by the pool.\\n        uint256 bondReserves;\\n        /// @dev The total supply of LP shares.\\n        uint256 lpTotalSupply;\\n        /// @dev The current vault share price.\\n        uint256 vaultSharePrice;\\n        /// @dev An amount of bonds representing outstanding unmatured longs.\\n        uint256 longsOutstanding;\\n        /// @dev The average maturity time of the outstanding longs.\\n        uint256 longAverageMaturityTime;\\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\\n        uint256 shortsOutstanding;\\n        /// @dev The average maturity time of the outstanding shorts.\\n        uint256 shortAverageMaturityTime;\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint256 withdrawalSharesReadyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint256 withdrawalSharesProceeds;\\n        /// @dev The share price of LP shares. This can be used to mark LP\\n        ///      shares to market.\\n        uint256 lpSharePrice;\\n        /// @dev The global exposure of the pool due to open positions\\n        uint256 longExposure;\\n    }\\n\\n    struct Options {\\n        /// @dev The address that receives the proceeds of a trade or LP action.\\n        address destination;\\n        /// @dev A boolean indicating that the trade or LP action should be\\n        ///      settled in base if true and in the yield source shares if false.\\n        bool asBase;\\n        /// @dev Additional data that can be used to implement custom logic in\\n        ///      implementation contracts.\\n        bytes extraData;\\n    }\\n\\n    /// Errors ///\\n\\n    /// @notice Thrown when the inputs to a batch transfer don't match in\\n    ///         length.\\n    error BatchInputLengthMismatch();\\n\\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\\n    ///         to cover the minimum share reserves and the LP shares that are\\n    ///         burned on initialization.\\n    error BelowMinimumContribution();\\n\\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\\n    ///         the result to be larger than the representable scale.\\n    error ExpInvalidExponent();\\n\\n    /// @notice Thrown when a permit signature is expired.\\n    error ExpiredDeadline();\\n\\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\\n    ///         an action.\\n    error InsufficientBalance();\\n\\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\\n    ///         complete the trade.\\n    error InsufficientLiquidity();\\n\\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\\n    ///         a LP when they are adding liquidity.\\n    error InvalidApr();\\n\\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\\n    ///         larger than the current checkpoint or isn't divisible by the\\n    ///         checkpoint duration.\\n    error InvalidCheckpointTime();\\n\\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\\n    ///         functions is not the corresponding bridge.\\n    error InvalidERC20Bridge();\\n\\n    /// @notice Thrown when a destination other than the fee collector is\\n    ///         specified in `collectGovernanceFee`.\\n    error InvalidFeeDestination();\\n\\n    /// @notice Thrown when the initial share price doesn't match the share\\n    ///         price of the underlying yield source on deployment.\\n    error InvalidInitialVaultSharePrice();\\n\\n    /// @notice Thrown when the LP share price couldn't be calculated in a\\n    ///         critical situation.\\n    error InvalidLPSharePrice();\\n\\n    /// @notice Thrown when the present value calculation fails.\\n    error InvalidPresentValue();\\n\\n    /// @notice Thrown when an invalid signature is used provide permit access\\n    ///         to the MultiToken. A signature is considered to be invalid if\\n    ///         it fails to recover to the owner's address.\\n    error InvalidSignature();\\n\\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\\n    ///         the uint248 scale.\\n    error InvalidTimestamp();\\n\\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\\n    ///         equal to zero.\\n    error LnInvalidInput();\\n\\n    /// @notice Thrown when vault share price is smaller than the minimum share\\n    ///         price. This protects traders from unknowingly opening a long or\\n    ///         short after negative interest has accrued.\\n    error MinimumSharePrice();\\n\\n    /// @notice Thrown when the input or output amount of a trade is smaller\\n    ///         than the minimum transaction amount. This protects traders and\\n    ///         LPs from losses of precision that can occur at small scales.\\n    error MinimumTransactionAmount();\\n\\n    /// @notice Thrown when the present value prior to adding liquidity results in a\\n    ///         decrease in present value after liquidity. This is caused by a\\n    ///         shortage in liquidity that prevents all the open positions being\\n    ///         closed on the curve and therefore marked to 1.\\n    error DecreasedPresentValueWhenAddingLiquidity();\\n\\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\\n    ///         ether as a deposit asset.\\n    error NotPayable();\\n\\n    /// @notice Thrown when a slippage guard is violated.\\n    error OutputLimit();\\n\\n    /// @notice Thrown when the pool is already initialized and a trader calls\\n    ///         `initialize`. This prevents the pool from being reinitialized\\n    ///         after it has been initialized.\\n    error PoolAlreadyInitialized();\\n\\n    /// @notice Thrown when the pool is paused and a trader tries to add\\n    ///         liquidity, open a long, or open a short. Traders can still\\n    ///         close their existing positions while the pool is paused.\\n    error PoolIsPaused();\\n\\n    /// @notice Thrown when the owner passed to permit is the zero address. This\\n    ///         prevents users from spending the funds in address zero by\\n    ///         sending an invalid signature to ecrecover.\\n    error RestrictedZeroAddress();\\n\\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\\n    ///         normal error, this error actually indicates that a read-only\\n    ///         call succeeded. The data that it wraps is the return data from\\n    ///         the read-only call.\\n    error ReturnData(bytes data);\\n\\n    /// @notice Thrown when an asset is swept from the pool and one of the\\n    ///         pool's depository assets changes.\\n    error SweepFailed();\\n\\n    /// @notice Thrown when the distribute excess idle calculation fails due\\n    ///         to the starting present value calculation failing.\\n    error DistributeExcessIdleFailed();\\n\\n    /// @notice Thrown when an ether transfer fails.\\n    error TransferFailed();\\n\\n    /// @notice Thrown when an unauthorized user attempts to access admin\\n    ///         functionality.\\n    error Unauthorized();\\n\\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\\n    ///         uses a force-revert delegatecall pattern to ensure that calls\\n    ///         that are intended to be read-only are actually read-only.\\n    error UnexpectedSuccess();\\n\\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint112();\\n\\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint128();\\n\\n    /// @notice Thrown when casting a value to a int128 that is outside of the\\n    ///         int128 scale.\\n    error UnsafeCastToInt128();\\n\\n    /// @notice Thrown when casting a value to a int256 that is outside of the\\n    ///         int256 scale.\\n    error UnsafeCastToInt256();\\n\\n    /// @notice Thrown when an unsupported option is passed to a function or\\n    ///         a user attempts to sweep an invalid token. The options and sweep\\n    ///         targets that are supported vary between instances.\\n    error UnsupportedToken();\\n\\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\\n    error UpdateLiquidityFailed();\\n\\n    /// Getters ///\\n\\n    /// @notice Gets the target0 address.\\n    /// @return The target0 address.\\n    function target0() external view returns (address);\\n\\n    /// @notice Gets the target1 address.\\n    /// @return The target1 address.\\n    function target1() external view returns (address);\\n\\n    /// @notice Gets the target2 address.\\n    /// @return The target2 address.\\n    function target2() external view returns (address);\\n\\n    /// @notice Gets the target3 address.\\n    /// @return The target3 address.\\n    function target3() external view returns (address);\\n\\n    /// @notice Gets the target4 address.\\n    /// @return The target4 address.\\n    function target4() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\n\\ninterface IHyperdriveCore is IMultiTokenCore {\\n    /// Longs ///\\n\\n    /// @notice Opens a long position.\\n    /// @param _amount The amount of capital provided to open the long. The\\n    ///        units of this quantity are either base or vault shares, depending\\n    ///        on the value of `_options.asBase`.\\n    /// @param _minOutput The minimum number of bonds to receive.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to\\n    ///        open the long. This allows traders to protect themselves from\\n    ///        opening a long in a checkpoint where negative interest has\\n    ///        accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the bonds.\\n    /// @return bondProceeds The amount of bonds the user received.\\n    function openLong(\\n        uint256 _amount,\\n        uint256 _minOutput,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\\n\\n    /// @notice Closes a long position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the long.\\n    /// @param _bondAmount The amount of longs to close.\\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\\n    ///        of this quantity are either base or vault shares, depending on\\n    ///        the value of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds the user receives. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeLong(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// Shorts ///\\n\\n    /// @notice Opens a short position.\\n    /// @param _bondAmount The amount of bonds to short.\\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\\n    ///        The units of this quantity are either base or vault shares,\\n    ///        depending on the value of `_options.asBase`.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\\n    ///        the short. This allows traders to protect themselves from opening\\n    ///        a short in a checkpoint where negative interest has accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the short.\\n    /// @return deposit The amount the user deposited for this trade. The units\\n    ///         of this quantity are either base or vault shares, depending on\\n    ///         the value of `_options.asBase`.\\n    function openShort(\\n        uint256 _bondAmount,\\n        uint256 _maxDeposit,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\\n\\n    /// @notice Closes a short position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the short.\\n    /// @param _bondAmount The amount of shorts to close.\\n    /// @param _minOutput The minimum output of this trade. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds of closing this short. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeShort(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// LPs ///\\n\\n    /// @notice Allows the first LP to initialize the market with a target APR.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _apr The target APR.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The initial number of LP shares created.\\n    function initialize(\\n        uint256 _contribution,\\n        uint256 _apr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows LPs to supply liquidity for LP shares.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\\n    ///        to accept for their shares. LPs incur negative slippage when\\n    ///        adding liquidity if there is a net curve position in the market,\\n    ///        so this allows LPs to protect themselves from high levels of\\n    ///        slippage. The units of this quantity are either base or vault\\n    ///        shares, depending on the value of `_options.asBase`.\\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The LP shares received by the LP.\\n    function addLiquidity(\\n        uint256 _contribution,\\n        uint256 _minLpSharePrice,\\n        uint256 _minApr,\\n        uint256 _maxApr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\\n    /// @param _lpShares The LP shares to burn.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\\n    ///        for each withdrawal share that is burned. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP removing liquidity receives. The\\n    ///         units of this quantity are either base or vault shares,\\n    ///         depending on the value of `_options.asBase`.\\n    /// @return withdrawalShares The base that the LP receives buys out some of\\n    ///         their LP shares, but it may not be sufficient to fully buy the\\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\\n    ///         value to the present value they are owed. As idle capital\\n    ///         becomes available, the pool will buy back these shares.\\n    function removeLiquidity(\\n        uint256 _lpShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\\n\\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\\n    ///         the withdrawal pool's proceeds. This function redeems the\\n    ///         maximum amount of the specified withdrawal shares given the\\n    ///         amount of withdrawal shares ready to withdraw.\\n    /// @param _withdrawalShares The withdrawal shares to redeem.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to\\n    ///        receive for each withdrawal share that is burned. The units of\\n    ///        this quantity are either base or vault shares, depending on the\\n    ///        value of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP received. The units of this quantity\\n    ///         are either base or vault shares, depending on the value of\\n    ///         `_options.asBase`.\\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\\n    ///         were redeemed.\\n    function redeemWithdrawalShares(\\n        uint256 _withdrawalShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\\n\\n    /// Checkpoints ///\\n\\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\\n    /// @param _checkpointTime The time of the checkpoint to create.\\n    /// @param _maxIterations The number of iterations to use in the Newton's\\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\\n    ///        smaller than the constant.\\n    function checkpoint(\\n        uint256 _checkpointTime,\\n        uint256 _maxIterations\\n    ) external;\\n\\n    /// Admin ///\\n\\n    /// @notice This function collects the governance fees accrued by the pool.\\n    /// @param _options The options that configure how the fees are settled.\\n    /// @return proceeds The governance fees collected. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function collectGovernanceFee(\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// @notice Allows an authorized address to pause this contract.\\n    /// @param _status True to pause all deposits and false to unpause them.\\n    function pause(bool _status) external;\\n\\n    /// @notice Allows governance to transfer the fee collector role.\\n    /// @param _who The new fee collector address.\\n    function setFeeCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the sweep collector role.\\n    /// @param _who The new sweep collector address.\\n    function setSweepCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the governance role.\\n    /// @param _who The new governance address.\\n    function setGovernance(address _who) external;\\n\\n    /// @notice Allows governance to change the pauser status of an address.\\n    /// @param who The address to change.\\n    /// @param status The new pauser status.\\n    function setPauser(address who, bool status) external;\\n\\n    /// @notice Transfers the contract's balance of a target token to the fee\\n    ///         collector address.\\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\\n    ///      with 'transferFrom'. Any integrating contracts should be checked\\n    ///      for that, as it may result in an unexpected call from this address.\\n    /// @param _target The target token to sweep.\\n    function sweep(IERC20 _target) external;\\n}\\n\",\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IHyperdriveRead is IMultiTokenRead {\\n    /// @notice Gets the instance's name.\\n    /// @return The instance's name.\\n    function name() external pure returns (string memory);\\n\\n    /// @notice Gets the instance's version.\\n    /// @return The instance's version.\\n    function version() external pure returns (string memory);\\n\\n    /// @notice Gets the Hyperdrive pool's base token.\\n    /// @return The base token.\\n    function baseToken() external view returns (address);\\n\\n    /// @notice Gets the Hyperdrive pool's vault shares token.\\n    /// @return The vault shares token.\\n    function vaultSharesToken() external view returns (address);\\n\\n    /// @notice Gets one of the pool's checkpoints.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint.\\n    function getCheckpoint(\\n        uint256 _checkpointTime\\n    ) external view returns (IHyperdrive.Checkpoint memory);\\n\\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\\n    ///         of non-netted longs in the checkpoint.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint exposure.\\n    function getCheckpointExposure(\\n        uint256 _checkpointTime\\n    ) external view returns (int256);\\n\\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\\n    /// @return The market state.\\n    function getMarketState()\\n        external\\n        view\\n        returns (IHyperdrive.MarketState memory);\\n\\n    /// @notice Gets the pool's configuration parameters.\\n    /// @return The pool configuration.\\n    function getPoolConfig()\\n        external\\n        view\\n        returns (IHyperdrive.PoolConfig memory);\\n\\n    /// @notice Gets info about the pool's reserves and other state that is\\n    ///         important to evaluate potential trades.\\n    /// @return The pool info.\\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\\n\\n    /// @notice Gets the amount of governance fees that haven't been collected.\\n    /// @return The amount of uncollected governance fees.\\n    function getUncollectedGovernanceFees() external view returns (uint256);\\n\\n    /// @notice Gets information relating to the pool's withdrawal pool. This\\n    ///         includes the total proceeds underlying the withdrawal pool and\\n    ///         the number of withdrawal shares ready to be redeemed.\\n    /// @return The withdrawal pool information.\\n    function getWithdrawPool()\\n        external\\n        view\\n        returns (IHyperdrive.WithdrawPool memory);\\n\\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\\n    /// @param _account The account to check.\\n    /// @return The account's pauser status.\\n    function isPauser(address _account) external view returns (bool);\\n\\n    /// @notice Gets the storage values at the specified slots.\\n    /// @dev This serves as a generalized getter that allows consumers to create\\n    ///      custom getters to suit their purposes.\\n    /// @param _slots The storage slots to load.\\n    /// @return The values at the specified slots.\\n    function load(\\n        uint256[] calldata _slots\\n    ) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x53d74fac0617c24e649a28a95bf23174952ee7e137a9af065326505ca14903c1\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"balanceOf(uint256,address)":{"notice":"Gets the balance of a spender for a sub-token."},"baseToken()":{"notice":"Gets the Hyperdrive pool's base token."},"decimals()":{"notice":"Gets the decimals of the MultiToken."},"getCheckpoint(uint256)":{"notice":"Gets one of the pool's checkpoints."},"getCheckpointExposure(uint256)":{"notice":"Gets the pool's exposure from a checkpoint. This is the number         of non-netted longs in the checkpoint."},"getMarketState()":{"notice":"Gets the pool's state relating to the Hyperdrive market."},"getPoolConfig()":{"notice":"Gets the pool's configuration parameters."},"getPoolInfo()":{"notice":"Gets info about the pool's reserves and other state that is         important to evaluate potential trades."},"getUncollectedGovernanceFees()":{"notice":"Gets the amount of governance fees that haven't been collected."},"getWithdrawPool()":{"notice":"Gets information relating to the pool's withdrawal pool. This         includes the total proceeds underlying the withdrawal pool and         the number of withdrawal shares ready to be redeemed."},"isApprovedForAll(address,address)":{"notice":"Gets the approval-for-all status of a spender on behalf of an         owner."},"isPauser(address)":{"notice":"Gets an account's pauser status within the Hyperdrive pool."},"load(uint256[])":{"notice":"Gets the storage values at the specified slots."},"name()":{"notice":"Gets the instance's name."},"name(uint256)":{"notice":"Gets the name of the MultiToken."},"nonces(address)":{"notice":"Gets the permit nonce for an account."},"perTokenApprovals(uint256,address,address)":{"notice":"Gets the allowance of a spender for a sub-token."},"symbol(uint256)":{"notice":"Gets the symbol of the MultiToken."},"totalSupply(uint256)":{"notice":"Gets the total supply of the MultiToken."},"vaultSharesToken()":{"notice":"Gets the Hyperdrive pool's vault shares token."},"version()":{"notice":"Gets the instance's version."}},"version":1}}},"contracts/src/interfaces/IMultiToken.sol":{"IMultiToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"batchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"perTokenApprovals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"setApprovalBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"transferFromBridge","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"PERMIT_TYPEHASH()":{"returns":{"_0":"The EIP712 permit typehash of the MultiToken."}},"balanceOf(uint256,address)":{"params":{"owner":"The owner of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The balance of the owner."}},"batchTransferFrom(address,address,uint256[],uint256[])":{"params":{"from":"The source account.","ids":"The array of token ids of the asset to transfer.","to":"The destination account.","values":"The amount of each token to transfer."}},"decimals()":{"returns":{"_0":"The decimals of the MultiToken."}},"domainSeparator()":{"returns":{"_0":"The EIP712 domain separator of the MultiToken."}},"isApprovedForAll(address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens."},"returns":{"_0":"The approval-for-all status of the spender for the owner."}},"name(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The name of the MultiToken."}},"nonces(address)":{"params":{"owner":"The owner of the tokens."},"returns":{"_0":"The permit nonce of the owner."}},"perTokenApprovals(uint256,address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The allowance of the spender for the owner."}},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.","params":{"_approved":"A boolean of the approval status to set to.","deadline":"The timestamp which the signature must be submitted by        to be valid.","owner":"The owner of the account which is having the new approval set.","r":"The r component of the ECDSA signature.","s":"The s component of the ECDSA signature.","spender":"The address which will be allowed to spend owner's tokens.","v":"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28."}},"setApproval(uint256,address,uint256)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalBridge(uint256,address,uint256,address)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].","caller":"The eth address which called the linking contract.","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalForAll(address,bool)":{"params":{"approved":"True to approve, false to remove approval.","operator":"The eth address which can access the caller's assets."}},"symbol(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The symbol of the MultiToken."}},"totalSupply(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The total supply of the MultiToken."}},"transferFrom(uint256,address,address,uint256)":{"params":{"amount":"The amount of token to move.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}},"transferFromBridge(uint256,address,address,uint256,address)":{"params":{"amount":"The amount of token to move.","caller":"The msg.sender or the caller of the ERC20Forwarder.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"PERMIT_TYPEHASH()":"30adf81f","balanceOf(uint256,address)":"3656eec2","batchTransferFrom(address,address,uint256[],uint256[])":"17fad7fc","decimals()":"313ce567","domainSeparator()":"f698da25","isApprovedForAll(address,address)":"e985e9c5","name(uint256)":"00ad800c","nonces(address)":"7ecebe00","perTokenApprovals(uint256,address,address)":"21ff32a9","permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":"9032c726","setApproval(uint256,address,uint256)":"9cd241af","setApprovalBridge(uint256,address,uint256,address)":"4ed2d6ac","setApprovalForAll(address,bool)":"a22cb465","symbol(uint256)":"4e41a1fb","totalSupply(uint256)":"bd85b039","transferFrom(uint256,address,address,uint256)":"1c0f12b6","transferFromBridge(uint256,address,address,uint256,address)":"e44808bc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setApprovalBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"transferFromBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The EIP712 permit typehash of the MultiToken.\"}},\"balanceOf(uint256,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The balance of the owner.\"}},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"params\":{\"from\":\"The source account.\",\"ids\":\"The array of token ids of the asset to transfer.\",\"to\":\"The destination account.\",\"values\":\"The amount of each token to transfer.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the MultiToken.\"}},\"domainSeparator()\":{\"returns\":{\"_0\":\"The EIP712 domain separator of the MultiToken.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\"},\"returns\":{\"_0\":\"The approval-for-all status of the spender for the owner.\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The name of the MultiToken.\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"The permit nonce of the owner.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The allowance of the spender for the owner.\"}},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.\",\"params\":{\"_approved\":\"A boolean of the approval status to set to.\",\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\"}},\"setApproval(uint256,address,uint256)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalBridge(uint256,address,uint256,address)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].\",\"caller\":\"The eth address which called the linking contract.\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True to approve, false to remove approval.\",\"operator\":\"The eth address which can access the caller's assets.\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The symbol of the MultiToken.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The total supply of the MultiToken.\"}},\"transferFrom(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"caller\":\"The msg.sender or the caller of the ERC20Forwarder.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"notice\":\"Gets the EIP712 permit typehash of the MultiToken.\"},\"balanceOf(uint256,address)\":{\"notice\":\"Gets the balance of a spender for a sub-token.\"},\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"notice\":\"Transfers several assets from one account to another.\"},\"decimals()\":{\"notice\":\"Gets the decimals of the MultiToken.\"},\"domainSeparator()\":{\"notice\":\"Gets the EIP712 domain separator of the MultiToken.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval-for-all status of a spender on behalf of an         owner.\"},\"name(uint256)\":{\"notice\":\"Gets the name of the MultiToken.\"},\"nonces(address)\":{\"notice\":\"Gets the permit nonce for an account.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the allowance of a spender for a sub-token.\"},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature.\"},\"setApproval(uint256,address,uint256)\":{\"notice\":\"Allows a user to set an approval for an individual asset with         specific amount.\"},\"setApprovalBridge(uint256,address,uint256,address)\":{\"notice\":\"Allows the compatibility linking contract to forward calls to         set asset approvals.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Allows a user to approve an operator to use all of their assets.\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of the MultiToken.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of the MultiToken.\"},\"transferFrom(uint256,address,address,uint256)\":{\"notice\":\"Transfers an amount of assets from the source to the destination.\"},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"notice\":\"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IMultiToken.sol\":\"IMultiToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Approval(address,address,uint256)":{"notice":"Emitted when an account changes the allowance for another         account."},"ApprovalForAll(address,address,bool)":{"notice":"Emitted when an account changes the approval for all of its         tokens."},"TransferSingle(address,address,address,uint256,uint256)":{"notice":"Emitted when tokens are transferred from one account to another."}},"kind":"user","methods":{"PERMIT_TYPEHASH()":{"notice":"Gets the EIP712 permit typehash of the MultiToken."},"balanceOf(uint256,address)":{"notice":"Gets the balance of a spender for a sub-token."},"batchTransferFrom(address,address,uint256[],uint256[])":{"notice":"Transfers several assets from one account to another."},"decimals()":{"notice":"Gets the decimals of the MultiToken."},"domainSeparator()":{"notice":"Gets the EIP712 domain separator of the MultiToken."},"isApprovedForAll(address,address)":{"notice":"Gets the approval-for-all status of a spender on behalf of an         owner."},"name(uint256)":{"notice":"Gets the name of the MultiToken."},"nonces(address)":{"notice":"Gets the permit nonce for an account."},"perTokenApprovals(uint256,address,address)":{"notice":"Gets the allowance of a spender for a sub-token."},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"notice":"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature."},"setApproval(uint256,address,uint256)":{"notice":"Allows a user to set an approval for an individual asset with         specific amount."},"setApprovalBridge(uint256,address,uint256,address)":{"notice":"Allows the compatibility linking contract to forward calls to         set asset approvals."},"setApprovalForAll(address,bool)":{"notice":"Allows a user to approve an operator to use all of their assets."},"symbol(uint256)":{"notice":"Gets the symbol of the MultiToken."},"totalSupply(uint256)":{"notice":"Gets the total supply of the MultiToken."},"transferFrom(uint256,address,address,uint256)":{"notice":"Transfers an amount of assets from the source to the destination."},"transferFromBridge(uint256,address,address,uint256,address)":{"notice":"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge."}},"version":1}}},"contracts/src/interfaces/IMultiTokenCore.sol":{"IMultiTokenCore":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"batchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"setApprovalBridge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"transferFromBridge","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"batchTransferFrom(address,address,uint256[],uint256[])":{"params":{"from":"The source account.","ids":"The array of token ids of the asset to transfer.","to":"The destination account.","values":"The amount of each token to transfer."}},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.","params":{"_approved":"A boolean of the approval status to set to.","deadline":"The timestamp which the signature must be submitted by        to be valid.","owner":"The owner of the account which is having the new approval set.","r":"The r component of the ECDSA signature.","s":"The s component of the ECDSA signature.","spender":"The address which will be allowed to spend owner's tokens.","v":"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28."}},"setApproval(uint256,address,uint256)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalBridge(uint256,address,uint256,address)":{"params":{"amount":"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].","caller":"The eth address which called the linking contract.","operator":"The address who will be able to use the tokens.","tokenID":"The asset to approve the use of."}},"setApprovalForAll(address,bool)":{"params":{"approved":"True to approve, false to remove approval.","operator":"The eth address which can access the caller's assets."}},"transferFrom(uint256,address,address,uint256)":{"params":{"amount":"The amount of token to move.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}},"transferFromBridge(uint256,address,address,uint256,address)":{"params":{"amount":"The amount of token to move.","caller":"The msg.sender or the caller of the ERC20Forwarder.","from":"The address whose balance will be reduced.","to":"The address whose balance will be increased.","tokenID":"The token identifier."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchTransferFrom(address,address,uint256[],uint256[])":"17fad7fc","permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":"9032c726","setApproval(uint256,address,uint256)":"9cd241af","setApprovalBridge(uint256,address,uint256,address)":"4ed2d6ac","setApprovalForAll(address,bool)":"a22cb465","transferFrom(uint256,address,address,uint256)":"1c0f12b6","transferFromBridge(uint256,address,address,uint256,address)":"e44808bc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"setApprovalBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"transferFromBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"params\":{\"from\":\"The source account.\",\"ids\":\"The array of token ids of the asset to transfer.\",\"to\":\"The destination account.\",\"values\":\"The amount of each token to transfer.\"}},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values, those values are not      supported.\",\"params\":{\"_approved\":\"A boolean of the approval status to set to.\",\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\"}},\"setApproval(uint256,address,uint256)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement (saving gas        on transfer).\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalBridge(uint256,address,uint256,address)\":{\"params\":{\"amount\":\"The max tokens the approved person can use, setting to        uint256.max will cause the value to never decrement [saving gas        on transfer].\",\"caller\":\"The eth address which called the linking contract.\",\"operator\":\"The address who will be able to use the tokens.\",\"tokenID\":\"The asset to approve the use of.\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True to approve, false to remove approval.\",\"operator\":\"The eth address which can access the caller's assets.\"}},\"transferFrom(uint256,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of token to move.\",\"caller\":\"The msg.sender or the caller of the ERC20Forwarder.\",\"from\":\"The address whose balance will be reduced.\",\"to\":\"The address whose balance will be increased.\",\"tokenID\":\"The token identifier.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchTransferFrom(address,address,uint256[],uint256[])\":{\"notice\":\"Transfers several assets from one account to another.\"},\"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature.\"},\"setApproval(uint256,address,uint256)\":{\"notice\":\"Allows a user to set an approval for an individual asset with         specific amount.\"},\"setApprovalBridge(uint256,address,uint256,address)\":{\"notice\":\"Allows the compatibility linking contract to forward calls to         set asset approvals.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Allows a user to approve an operator to use all of their assets.\"},\"transferFrom(uint256,address,address,uint256)\":{\"notice\":\"Transfers an amount of assets from the source to the destination.\"},\"transferFromBridge(uint256,address,address,uint256,address)\":{\"notice\":\"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IMultiTokenCore.sol\":\"IMultiTokenCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"batchTransferFrom(address,address,uint256[],uint256[])":{"notice":"Transfers several assets from one account to another."},"permitForAll(address,address,bool,uint256,uint8,bytes32,bytes32)":{"notice":"Allows a caller who is not the owner of an account to execute the         functionality of 'approve' for all assets with the owner's         signature."},"setApproval(uint256,address,uint256)":{"notice":"Allows a user to set an approval for an individual asset with         specific amount."},"setApprovalBridge(uint256,address,uint256,address)":{"notice":"Allows the compatibility linking contract to forward calls to         set asset approvals."},"setApprovalForAll(address,bool)":{"notice":"Allows a user to approve an operator to use all of their assets."},"transferFrom(uint256,address,address,uint256)":{"notice":"Transfers an amount of assets from the source to the destination."},"transferFromBridge(uint256,address,address,uint256,address)":{"notice":"Permissioned transfer for the bridge to access, only callable by         the ERC20 linking bridge."}},"version":1}}},"contracts/src/interfaces/IMultiTokenEvents.sol":{"IMultiTokenEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IMultiTokenEvents.sol\":\"IMultiTokenEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Approval(address,address,uint256)":{"notice":"Emitted when an account changes the allowance for another         account."},"ApprovalForAll(address,address,bool)":{"notice":"Emitted when an account changes the approval for all of its         tokens."},"TransferSingle(address,address,address,uint256,uint256)":{"notice":"Emitted when tokens are transferred from one account to another."}},"kind":"user","methods":{},"version":1}}},"contracts/src/interfaces/IMultiTokenMetadata.sol":{"IMultiTokenMetadata":{"abi":[{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"PERMIT_TYPEHASH()":{"returns":{"_0":"The EIP712 permit typehash of the MultiToken."}},"domainSeparator()":{"returns":{"_0":"The EIP712 domain separator of the MultiToken."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"PERMIT_TYPEHASH()":"30adf81f","domainSeparator()":"f698da25"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The EIP712 permit typehash of the MultiToken.\"}},\"domainSeparator()\":{\"returns\":{\"_0\":\"The EIP712 domain separator of the MultiToken.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"notice\":\"Gets the EIP712 permit typehash of the MultiToken.\"},\"domainSeparator()\":{\"notice\":\"Gets the EIP712 domain separator of the MultiToken.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IMultiTokenMetadata.sol\":\"IMultiTokenMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"PERMIT_TYPEHASH()":{"notice":"Gets the EIP712 permit typehash of the MultiToken."},"domainSeparator()":{"notice":"Gets the EIP712 domain separator of the MultiToken."}},"version":1}}},"contracts/src/interfaces/IMultiTokenRead.sol":{"IMultiTokenRead":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"perTokenApprovals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"balanceOf(uint256,address)":{"params":{"owner":"The owner of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The balance of the owner."}},"decimals()":{"returns":{"_0":"The decimals of the MultiToken."}},"isApprovedForAll(address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens."},"returns":{"_0":"The approval-for-all status of the spender for the owner."}},"name(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The name of the MultiToken."}},"nonces(address)":{"params":{"owner":"The owner of the tokens."},"returns":{"_0":"The permit nonce of the owner."}},"perTokenApprovals(uint256,address,address)":{"params":{"owner":"The owner of the tokens.","spender":"The spender of the tokens.","tokenId":"The sub-token ID."},"returns":{"_0":"The allowance of the spender for the owner."}},"symbol(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The symbol of the MultiToken."}},"totalSupply(uint256)":{"params":{"tokenId":"The sub-token ID."},"returns":{"_0":"The total supply of the MultiToken."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(uint256,address)":"3656eec2","decimals()":"313ce567","isApprovedForAll(address,address)":"e985e9c5","name(uint256)":"00ad800c","nonces(address)":"7ecebe00","perTokenApprovals(uint256,address,address)":"21ff32a9","symbol(uint256)":"4e41a1fb","totalSupply(uint256)":"bd85b039"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"perTokenApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(uint256,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The balance of the owner.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The decimals of the MultiToken.\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\"},\"returns\":{\"_0\":\"The approval-for-all status of the spender for the owner.\"}},\"name(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The name of the MultiToken.\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"The permit nonce of the owner.\"}},\"perTokenApprovals(uint256,address,address)\":{\"params\":{\"owner\":\"The owner of the tokens.\",\"spender\":\"The spender of the tokens.\",\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The allowance of the spender for the owner.\"}},\"symbol(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The symbol of the MultiToken.\"}},\"totalSupply(uint256)\":{\"params\":{\"tokenId\":\"The sub-token ID.\"},\"returns\":{\"_0\":\"The total supply of the MultiToken.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(uint256,address)\":{\"notice\":\"Gets the balance of a spender for a sub-token.\"},\"decimals()\":{\"notice\":\"Gets the decimals of the MultiToken.\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Gets the approval-for-all status of a spender on behalf of an         owner.\"},\"name(uint256)\":{\"notice\":\"Gets the name of the MultiToken.\"},\"nonces(address)\":{\"notice\":\"Gets the permit nonce for an account.\"},\"perTokenApprovals(uint256,address,address)\":{\"notice\":\"Gets the allowance of a spender for a sub-token.\"},\"symbol(uint256)\":{\"notice\":\"Gets the symbol of the MultiToken.\"},\"totalSupply(uint256)\":{\"notice\":\"Gets the total supply of the MultiToken.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IMultiTokenRead.sol\":\"IMultiTokenRead\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"balanceOf(uint256,address)":{"notice":"Gets the balance of a spender for a sub-token."},"decimals()":{"notice":"Gets the decimals of the MultiToken."},"isApprovedForAll(address,address)":{"notice":"Gets the approval-for-all status of a spender on behalf of an         owner."},"name(uint256)":{"notice":"Gets the name of the MultiToken."},"nonces(address)":{"notice":"Gets the permit nonce for an account."},"perTokenApprovals(uint256,address,address)":{"notice":"Gets the allowance of a spender for a sub-token."},"symbol(uint256)":{"notice":"Gets the symbol of the MultiToken."},"totalSupply(uint256)":{"notice":"Gets the total supply of the MultiToken."}},"version":1}}},"contracts/src/libraries/FixedPointMath.sol":{"FixedPointMath":{"abi":[],"devdoc":{"author":"DELV","custom:disclaimer":"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.","kind":"dev","methods":{},"title":"FixedPointMath","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c1ae6c13c7c08a85353c984236a8d0090e4bcaf78defbeb0e71d09c803bf64f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x1AE6C13C7C08A85353C984236A8D0090E4BCAF78DEFBEB0E71D09C803B 0xF6 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"507:15685:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;507:15685:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c1ae6c13c7c08a85353c984236a8d0090e4bcaf78defbeb0e71d09c803bf64f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x1AE6C13C7C08A85353C984236A8D0090E4BCAF78DEFBEB0E71D09C803B 0xF6 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"507:15685:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","divDown(uint256,uint256)":"infinite","divUp(uint256,uint256)":"infinite","exp(int256)":"infinite","ln(int256)":"infinite","max(int256,int256)":"infinite","max(uint256,uint256)":"infinite","min(int256,int256)":"infinite","min(uint256,uint256)":"infinite","mulDivDown(uint256,uint256,uint256)":"infinite","mulDivUp(uint256,uint256,uint256)":"infinite","mulDown(uint256,uint256)":"infinite","mulUp(uint256,uint256)":"infinite","pow(uint256,uint256)":"infinite","updateWeightedAverage(uint256,uint256,uint256,uint256,bool)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPointMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A fixed-point math library.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/libraries/FixedPointMath.sol\":\"FixedPointMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdrive.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdriveCore } from \\\"./IHyperdriveCore.sol\\\";\\nimport { IHyperdriveEvents } from \\\"./IHyperdriveEvents.sol\\\";\\nimport { IHyperdriveRead } from \\\"./IHyperdriveRead.sol\\\";\\nimport { IMultiToken } from \\\"./IMultiToken.sol\\\";\\n\\ninterface IHyperdrive is\\n    IHyperdriveEvents,\\n    IHyperdriveRead,\\n    IHyperdriveCore,\\n    IMultiToken\\n{\\n    /// Structs ///\\n\\n    struct MarketState {\\n        /// @dev The pool's share reserves.\\n        uint128 shareReserves;\\n        /// @dev The pool's bond reserves.\\n        uint128 bondReserves;\\n        /// @dev The global exposure of the pool due to open longs\\n        uint128 longExposure;\\n        /// @dev The amount of longs that are still open.\\n        uint128 longsOutstanding;\\n        /// @dev The net amount of shares that have been added and removed from\\n        ///      the share reserves due to flat updates.\\n        int128 shareAdjustment;\\n        /// @dev The amount of shorts that are still open.\\n        uint128 shortsOutstanding;\\n        /// @dev The average maturity time of outstanding long positions.\\n        uint128 longAverageMaturityTime;\\n        /// @dev The average maturity time of outstanding short positions.\\n        uint128 shortAverageMaturityTime;\\n        /// @dev A flag indicating whether or not the pool has been initialized.\\n        bool isInitialized;\\n        /// @dev A flag indicating whether or not the pool is paused.\\n        bool isPaused;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint112 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint128 zombieShareReserves;\\n    }\\n\\n    struct Checkpoint {\\n        /// @dev The vault share price during the first transaction in the\\n        ///      checkpoint. This is used to track the amount of interest\\n        ///      accrued by shorts as well as the vault share price at closing\\n        //       of matured longs and shorts.\\n        uint128 vaultSharePrice;\\n    }\\n\\n    struct WithdrawPool {\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint128 readyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint128 proceeds;\\n    }\\n\\n    struct Fees {\\n        /// @dev The LP fee applied to the curve portion of a trade.\\n        uint256 curve;\\n        /// @dev The LP fee applied to the flat portion of a trade.\\n        uint256 flat;\\n        /// @dev The portion of the LP fee that goes to governance.\\n        uint256 governanceLP;\\n        /// @dev The portion of the zombie interest that goes to governance.\\n        uint256 governanceZombie;\\n    }\\n\\n    struct PoolDeployConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The initial vault share price.\\n        uint256 initialVaultSharePrice;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolInfo {\\n        /// @dev The reserves of shares held by the pool.\\n        uint256 shareReserves;\\n        /// @dev The adjustment applied to the share reserves when pricing\\n        ///      bonds. This is used to ensure that the pricing mechanism is\\n        ///      held invariant under flat updates for security reasons.\\n        int256 shareAdjustment;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint256 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint256 zombieShareReserves;\\n        /// @dev The reserves of bonds held by the pool.\\n        uint256 bondReserves;\\n        /// @dev The total supply of LP shares.\\n        uint256 lpTotalSupply;\\n        /// @dev The current vault share price.\\n        uint256 vaultSharePrice;\\n        /// @dev An amount of bonds representing outstanding unmatured longs.\\n        uint256 longsOutstanding;\\n        /// @dev The average maturity time of the outstanding longs.\\n        uint256 longAverageMaturityTime;\\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\\n        uint256 shortsOutstanding;\\n        /// @dev The average maturity time of the outstanding shorts.\\n        uint256 shortAverageMaturityTime;\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint256 withdrawalSharesReadyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint256 withdrawalSharesProceeds;\\n        /// @dev The share price of LP shares. This can be used to mark LP\\n        ///      shares to market.\\n        uint256 lpSharePrice;\\n        /// @dev The global exposure of the pool due to open positions\\n        uint256 longExposure;\\n    }\\n\\n    struct Options {\\n        /// @dev The address that receives the proceeds of a trade or LP action.\\n        address destination;\\n        /// @dev A boolean indicating that the trade or LP action should be\\n        ///      settled in base if true and in the yield source shares if false.\\n        bool asBase;\\n        /// @dev Additional data that can be used to implement custom logic in\\n        ///      implementation contracts.\\n        bytes extraData;\\n    }\\n\\n    /// Errors ///\\n\\n    /// @notice Thrown when the inputs to a batch transfer don't match in\\n    ///         length.\\n    error BatchInputLengthMismatch();\\n\\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\\n    ///         to cover the minimum share reserves and the LP shares that are\\n    ///         burned on initialization.\\n    error BelowMinimumContribution();\\n\\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\\n    ///         the result to be larger than the representable scale.\\n    error ExpInvalidExponent();\\n\\n    /// @notice Thrown when a permit signature is expired.\\n    error ExpiredDeadline();\\n\\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\\n    ///         an action.\\n    error InsufficientBalance();\\n\\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\\n    ///         complete the trade.\\n    error InsufficientLiquidity();\\n\\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\\n    ///         a LP when they are adding liquidity.\\n    error InvalidApr();\\n\\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\\n    ///         larger than the current checkpoint or isn't divisible by the\\n    ///         checkpoint duration.\\n    error InvalidCheckpointTime();\\n\\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\\n    ///         functions is not the corresponding bridge.\\n    error InvalidERC20Bridge();\\n\\n    /// @notice Thrown when a destination other than the fee collector is\\n    ///         specified in `collectGovernanceFee`.\\n    error InvalidFeeDestination();\\n\\n    /// @notice Thrown when the initial share price doesn't match the share\\n    ///         price of the underlying yield source on deployment.\\n    error InvalidInitialVaultSharePrice();\\n\\n    /// @notice Thrown when the LP share price couldn't be calculated in a\\n    ///         critical situation.\\n    error InvalidLPSharePrice();\\n\\n    /// @notice Thrown when the present value calculation fails.\\n    error InvalidPresentValue();\\n\\n    /// @notice Thrown when an invalid signature is used provide permit access\\n    ///         to the MultiToken. A signature is considered to be invalid if\\n    ///         it fails to recover to the owner's address.\\n    error InvalidSignature();\\n\\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\\n    ///         the uint248 scale.\\n    error InvalidTimestamp();\\n\\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\\n    ///         equal to zero.\\n    error LnInvalidInput();\\n\\n    /// @notice Thrown when vault share price is smaller than the minimum share\\n    ///         price. This protects traders from unknowingly opening a long or\\n    ///         short after negative interest has accrued.\\n    error MinimumSharePrice();\\n\\n    /// @notice Thrown when the input or output amount of a trade is smaller\\n    ///         than the minimum transaction amount. This protects traders and\\n    ///         LPs from losses of precision that can occur at small scales.\\n    error MinimumTransactionAmount();\\n\\n    /// @notice Thrown when the present value prior to adding liquidity results in a\\n    ///         decrease in present value after liquidity. This is caused by a\\n    ///         shortage in liquidity that prevents all the open positions being\\n    ///         closed on the curve and therefore marked to 1.\\n    error DecreasedPresentValueWhenAddingLiquidity();\\n\\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\\n    ///         ether as a deposit asset.\\n    error NotPayable();\\n\\n    /// @notice Thrown when a slippage guard is violated.\\n    error OutputLimit();\\n\\n    /// @notice Thrown when the pool is already initialized and a trader calls\\n    ///         `initialize`. This prevents the pool from being reinitialized\\n    ///         after it has been initialized.\\n    error PoolAlreadyInitialized();\\n\\n    /// @notice Thrown when the pool is paused and a trader tries to add\\n    ///         liquidity, open a long, or open a short. Traders can still\\n    ///         close their existing positions while the pool is paused.\\n    error PoolIsPaused();\\n\\n    /// @notice Thrown when the owner passed to permit is the zero address. This\\n    ///         prevents users from spending the funds in address zero by\\n    ///         sending an invalid signature to ecrecover.\\n    error RestrictedZeroAddress();\\n\\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\\n    ///         normal error, this error actually indicates that a read-only\\n    ///         call succeeded. The data that it wraps is the return data from\\n    ///         the read-only call.\\n    error ReturnData(bytes data);\\n\\n    /// @notice Thrown when an asset is swept from the pool and one of the\\n    ///         pool's depository assets changes.\\n    error SweepFailed();\\n\\n    /// @notice Thrown when the distribute excess idle calculation fails due\\n    ///         to the starting present value calculation failing.\\n    error DistributeExcessIdleFailed();\\n\\n    /// @notice Thrown when an ether transfer fails.\\n    error TransferFailed();\\n\\n    /// @notice Thrown when an unauthorized user attempts to access admin\\n    ///         functionality.\\n    error Unauthorized();\\n\\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\\n    ///         uses a force-revert delegatecall pattern to ensure that calls\\n    ///         that are intended to be read-only are actually read-only.\\n    error UnexpectedSuccess();\\n\\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint112();\\n\\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint128();\\n\\n    /// @notice Thrown when casting a value to a int128 that is outside of the\\n    ///         int128 scale.\\n    error UnsafeCastToInt128();\\n\\n    /// @notice Thrown when casting a value to a int256 that is outside of the\\n    ///         int256 scale.\\n    error UnsafeCastToInt256();\\n\\n    /// @notice Thrown when an unsupported option is passed to a function or\\n    ///         a user attempts to sweep an invalid token. The options and sweep\\n    ///         targets that are supported vary between instances.\\n    error UnsupportedToken();\\n\\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\\n    error UpdateLiquidityFailed();\\n\\n    /// Getters ///\\n\\n    /// @notice Gets the target0 address.\\n    /// @return The target0 address.\\n    function target0() external view returns (address);\\n\\n    /// @notice Gets the target1 address.\\n    /// @return The target1 address.\\n    function target1() external view returns (address);\\n\\n    /// @notice Gets the target2 address.\\n    /// @return The target2 address.\\n    function target2() external view returns (address);\\n\\n    /// @notice Gets the target3 address.\\n    /// @return The target3 address.\\n    function target3() external view returns (address);\\n\\n    /// @notice Gets the target4 address.\\n    /// @return The target4 address.\\n    function target4() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\n\\ninterface IHyperdriveCore is IMultiTokenCore {\\n    /// Longs ///\\n\\n    /// @notice Opens a long position.\\n    /// @param _amount The amount of capital provided to open the long. The\\n    ///        units of this quantity are either base or vault shares, depending\\n    ///        on the value of `_options.asBase`.\\n    /// @param _minOutput The minimum number of bonds to receive.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to\\n    ///        open the long. This allows traders to protect themselves from\\n    ///        opening a long in a checkpoint where negative interest has\\n    ///        accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the bonds.\\n    /// @return bondProceeds The amount of bonds the user received.\\n    function openLong(\\n        uint256 _amount,\\n        uint256 _minOutput,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\\n\\n    /// @notice Closes a long position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the long.\\n    /// @param _bondAmount The amount of longs to close.\\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\\n    ///        of this quantity are either base or vault shares, depending on\\n    ///        the value of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds the user receives. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeLong(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// Shorts ///\\n\\n    /// @notice Opens a short position.\\n    /// @param _bondAmount The amount of bonds to short.\\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\\n    ///        The units of this quantity are either base or vault shares,\\n    ///        depending on the value of `_options.asBase`.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\\n    ///        the short. This allows traders to protect themselves from opening\\n    ///        a short in a checkpoint where negative interest has accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the short.\\n    /// @return deposit The amount the user deposited for this trade. The units\\n    ///         of this quantity are either base or vault shares, depending on\\n    ///         the value of `_options.asBase`.\\n    function openShort(\\n        uint256 _bondAmount,\\n        uint256 _maxDeposit,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\\n\\n    /// @notice Closes a short position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the short.\\n    /// @param _bondAmount The amount of shorts to close.\\n    /// @param _minOutput The minimum output of this trade. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds of closing this short. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeShort(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// LPs ///\\n\\n    /// @notice Allows the first LP to initialize the market with a target APR.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _apr The target APR.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The initial number of LP shares created.\\n    function initialize(\\n        uint256 _contribution,\\n        uint256 _apr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows LPs to supply liquidity for LP shares.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\\n    ///        to accept for their shares. LPs incur negative slippage when\\n    ///        adding liquidity if there is a net curve position in the market,\\n    ///        so this allows LPs to protect themselves from high levels of\\n    ///        slippage. The units of this quantity are either base or vault\\n    ///        shares, depending on the value of `_options.asBase`.\\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The LP shares received by the LP.\\n    function addLiquidity(\\n        uint256 _contribution,\\n        uint256 _minLpSharePrice,\\n        uint256 _minApr,\\n        uint256 _maxApr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\\n    /// @param _lpShares The LP shares to burn.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\\n    ///        for each withdrawal share that is burned. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP removing liquidity receives. The\\n    ///         units of this quantity are either base or vault shares,\\n    ///         depending on the value of `_options.asBase`.\\n    /// @return withdrawalShares The base that the LP receives buys out some of\\n    ///         their LP shares, but it may not be sufficient to fully buy the\\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\\n    ///         value to the present value they are owed. As idle capital\\n    ///         becomes available, the pool will buy back these shares.\\n    function removeLiquidity(\\n        uint256 _lpShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\\n\\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\\n    ///         the withdrawal pool's proceeds. This function redeems the\\n    ///         maximum amount of the specified withdrawal shares given the\\n    ///         amount of withdrawal shares ready to withdraw.\\n    /// @param _withdrawalShares The withdrawal shares to redeem.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to\\n    ///        receive for each withdrawal share that is burned. The units of\\n    ///        this quantity are either base or vault shares, depending on the\\n    ///        value of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP received. The units of this quantity\\n    ///         are either base or vault shares, depending on the value of\\n    ///         `_options.asBase`.\\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\\n    ///         were redeemed.\\n    function redeemWithdrawalShares(\\n        uint256 _withdrawalShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\\n\\n    /// Checkpoints ///\\n\\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\\n    /// @param _checkpointTime The time of the checkpoint to create.\\n    /// @param _maxIterations The number of iterations to use in the Newton's\\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\\n    ///        smaller than the constant.\\n    function checkpoint(\\n        uint256 _checkpointTime,\\n        uint256 _maxIterations\\n    ) external;\\n\\n    /// Admin ///\\n\\n    /// @notice This function collects the governance fees accrued by the pool.\\n    /// @param _options The options that configure how the fees are settled.\\n    /// @return proceeds The governance fees collected. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function collectGovernanceFee(\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// @notice Allows an authorized address to pause this contract.\\n    /// @param _status True to pause all deposits and false to unpause them.\\n    function pause(bool _status) external;\\n\\n    /// @notice Allows governance to transfer the fee collector role.\\n    /// @param _who The new fee collector address.\\n    function setFeeCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the sweep collector role.\\n    /// @param _who The new sweep collector address.\\n    function setSweepCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the governance role.\\n    /// @param _who The new governance address.\\n    function setGovernance(address _who) external;\\n\\n    /// @notice Allows governance to change the pauser status of an address.\\n    /// @param who The address to change.\\n    /// @param status The new pauser status.\\n    function setPauser(address who, bool status) external;\\n\\n    /// @notice Transfers the contract's balance of a target token to the fee\\n    ///         collector address.\\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\\n    ///      with 'transferFrom'. Any integrating contracts should be checked\\n    ///      for that, as it may result in an unexpected call from this address.\\n    /// @param _target The target token to sweep.\\n    function sweep(IERC20 _target) external;\\n}\\n\",\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IHyperdriveRead is IMultiTokenRead {\\n    /// @notice Gets the instance's name.\\n    /// @return The instance's name.\\n    function name() external pure returns (string memory);\\n\\n    /// @notice Gets the instance's version.\\n    /// @return The instance's version.\\n    function version() external pure returns (string memory);\\n\\n    /// @notice Gets the Hyperdrive pool's base token.\\n    /// @return The base token.\\n    function baseToken() external view returns (address);\\n\\n    /// @notice Gets the Hyperdrive pool's vault shares token.\\n    /// @return The vault shares token.\\n    function vaultSharesToken() external view returns (address);\\n\\n    /// @notice Gets one of the pool's checkpoints.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint.\\n    function getCheckpoint(\\n        uint256 _checkpointTime\\n    ) external view returns (IHyperdrive.Checkpoint memory);\\n\\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\\n    ///         of non-netted longs in the checkpoint.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint exposure.\\n    function getCheckpointExposure(\\n        uint256 _checkpointTime\\n    ) external view returns (int256);\\n\\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\\n    /// @return The market state.\\n    function getMarketState()\\n        external\\n        view\\n        returns (IHyperdrive.MarketState memory);\\n\\n    /// @notice Gets the pool's configuration parameters.\\n    /// @return The pool configuration.\\n    function getPoolConfig()\\n        external\\n        view\\n        returns (IHyperdrive.PoolConfig memory);\\n\\n    /// @notice Gets info about the pool's reserves and other state that is\\n    ///         important to evaluate potential trades.\\n    /// @return The pool info.\\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\\n\\n    /// @notice Gets the amount of governance fees that haven't been collected.\\n    /// @return The amount of uncollected governance fees.\\n    function getUncollectedGovernanceFees() external view returns (uint256);\\n\\n    /// @notice Gets information relating to the pool's withdrawal pool. This\\n    ///         includes the total proceeds underlying the withdrawal pool and\\n    ///         the number of withdrawal shares ready to be redeemed.\\n    /// @return The withdrawal pool information.\\n    function getWithdrawPool()\\n        external\\n        view\\n        returns (IHyperdrive.WithdrawPool memory);\\n\\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\\n    /// @param _account The account to check.\\n    /// @return The account's pauser status.\\n    function isPauser(address _account) external view returns (bool);\\n\\n    /// @notice Gets the storage values at the specified slots.\\n    /// @dev This serves as a generalized getter that allows consumers to create\\n    ///      custom getters to suit their purposes.\\n    /// @param _slots The storage slots to load.\\n    /// @return The values at the specified slots.\\n    function load(\\n        uint256[] calldata _slots\\n    ) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x53d74fac0617c24e649a28a95bf23174952ee7e137a9af065326505ca14903c1\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"},\"contracts/src/libraries/FixedPointMath.sol\":{\"content\":\"/// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"../interfaces/IHyperdrive.sol\\\";\\nimport { SafeCast } from \\\"./SafeCast.sol\\\";\\n\\nuint256 constant ONE = 1e18;\\n\\n/// @author DELV\\n/// @title FixedPointMath\\n/// @notice A fixed-point math library.\\n/// @custom:disclaimer The language used in this code is for coding convenience\\n///                    only, and is not intended to, and does not, have any\\n///                    particular legal or regulatory significance.\\nlibrary FixedPointMath {\\n    using FixedPointMath for uint256;\\n    using SafeCast for uint256;\\n\\n    uint256 internal constant MAX_UINT256 = 2 ** 256 - 1;\\n\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @param y Fixed point number in 1e18 format.\\n    /// @param denominator Fixed point number in 1e18 format.\\n    /// @return z The result of x * y / denominator rounded down.\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\\n            if iszero(\\n                mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide x * y by the denominator.\\n            z := div(mul(x, y), denominator)\\n        }\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return Result of a * b rounded down.\\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivDown(a, b, ONE));\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return Result of a / b rounded down.\\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivDown(a, ONE, b)); // Equivalent to (a * 1e18) / b rounded down.\\n    }\\n\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @param y Fixed point number in 1e18 format.\\n    /// @param denominator Fixed point number in 1e18 format.\\n    /// @return z The result of x * y / denominator rounded up.\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\\n            if iszero(\\n                mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // If x * y modulo the denominator is strictly greater than 0,\\n            // 1 is added to round up the division of x * y by the denominator.\\n            z := add(\\n                gt(mod(mul(x, y), denominator), 0),\\n                div(mul(x, y), denominator)\\n            )\\n        }\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return The result of a * b rounded up.\\n    function mulUp(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivUp(a, b, ONE));\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return The result of a / b rounded up.\\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivUp(a, ONE, b));\\n    }\\n\\n    /// @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @param y Fixed point number in 1e18 format.\\n    /// @return The result of x^y.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256) {\\n        // If the exponent is 0, return 1.\\n        if (y == 0) {\\n            return ONE;\\n        }\\n\\n        // If the base is 0, return 0.\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Using properties of logarithms we calculate x^y:\\n        // -> ln(x^y) = y * ln(x)\\n        // -> e^(y * ln(x)) = x^y\\n        int256 y_int256 = y.toInt256(); // solhint-disable-line var-name-mixedcase\\n\\n        // Compute y*ln(x)\\n        // Any overflow for x will be caught in ln() in the initial bounds check\\n        int256 lnx = ln(x.toInt256());\\n        int256 ylnx;\\n        assembly (\\\"memory-safe\\\") {\\n            ylnx := mul(y_int256, lnx)\\n        }\\n        ylnx /= int256(ONE);\\n\\n        // Calculate exp(y * ln(x)) to get x^y\\n        return uint256(exp(ylnx));\\n    }\\n\\n    /// @dev Computes e^x in 1e18 fixed point.\\n    /// @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @return r The result of e^x.\\n    function exp(int256 x) internal pure returns (int256 r) {\\n        unchecked {\\n            // When the result is < 0.5 we return zero. This happens when\\n            // x <= floor(log(0.5e18) * 1e18) ~ -42e18\\n            if (x <= -42139678854452767551) return 0;\\n\\n            // When the result is > (2**255 - 1) / 1e18 we can not represent it as an\\n            // int. This happens when x >= floor(log((2**255 - 1) / 1e18) * 1e18) ~ 135.\\n            if (x >= 135305999368893231589)\\n                revert IHyperdrive.ExpInvalidExponent();\\n\\n            // x is now in the range (-42, 136) * 1e18. Convert to (-42, 136) * 2**96\\n            // for more intermediate precision and a binary basis. This base conversion\\n            // is a multiplication by 1e18 / 2**96 = 5**18 / 2**78.\\n            x = (x << 78) / 5 ** 18;\\n\\n            // Reduce range of x to (-\\u00bd ln 2, \\u00bd ln 2) * 2**96 by factoring out powers\\n            // of two such that exp(x) = exp(x') * 2**k, where k is an integer.\\n            // Solving this gives k = round(x / log(2)) and x' = x - k * log(2).\\n            // Note: 54916777467707473351141471128 = 2^96 ln(2).\\n            int256 k = ((x << 96) / 54916777467707473351141471128 + 2 ** 95) >>\\n                96;\\n            x = x - k * 54916777467707473351141471128;\\n\\n            // k is in the range [-61, 195].\\n\\n            // Evaluate using a (6, 7)-term rational approximation.\\n            // p is made monic, we'll multiply by a scale factor later.\\n            int256 y = x + 1346386616545796478920950773328;\\n            y = ((y * x) >> 96) + 57155421227552351082224309758442;\\n            int256 p = y + x - 94201549194550492254356042504812;\\n            p = ((p * y) >> 96) + 28719021644029726153956944680412240;\\n            p = p * x + (4385272521454847904659076985693276 << 96);\\n\\n            // We leave p in 2**192 basis so we don't need to scale it back up for the division.\\n            int256 q = x - 2855989394907223263936484059900;\\n            q = ((q * x) >> 96) + 50020603652535783019961831881945;\\n            q = ((q * x) >> 96) - 533845033583426703283633433725380;\\n            q = ((q * x) >> 96) + 3604857256930695427073651918091429;\\n            q = ((q * x) >> 96) - 14423608567350463180887372962807573;\\n            q = ((q * x) >> 96) + 26449188498355588339934803723976023;\\n\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                // Div in assembly because solidity adds a zero check despite the unchecked.\\n                // The q polynomial won't have zeros in the domain as all its roots are complex.\\n                // No scaling is necessary because p is already 2**96 too large.\\n                r := sdiv(p, q)\\n            }\\n\\n            // r should be in the range (0.09, 0.25) * 2**96.\\n\\n            // We now need to multiply r by:\\n            // * the scale factor s = ~6.031367120.\\n            // * the 2**k factor from the range reduction.\\n            // * the 1e18 / 2**96 factor for base conversion.\\n            // We do this all at once, with an intermediate result in 2**213\\n            // basis, so the final right shift is always by a positive amount.\\n            r = ((uint256(r) *\\n                3822833074963236453042738258902158003155416615667) >>\\n                uint256(195 - k)).toInt256();\\n        }\\n    }\\n\\n    /// @dev Computes ln(x) in 1e18 fixed point.\\n    /// @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\\n    /// @dev Reverts if x is negative or zero.\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @return r Result of ln(x).\\n    function ln(int256 x) internal pure returns (int256 r) {\\n        unchecked {\\n            if (x <= 0) {\\n                revert IHyperdrive.LnInvalidInput();\\n            }\\n\\n            // We want to convert x from 10**18 fixed point to 2**96 fixed point.\\n            // We do this by multiplying by 2**96 / 10**18. But since\\n            // ln(x * C) = ln(x) + ln(C), we can simply do nothing here\\n            // and add ln(2**96 / 10**18) at the end.\\n\\n            // This step inlines the `ilog2` call in Remco's implementation:\\n            // https://github.com/recmo/experiment-solexp/blob/bbc164fb5ec078cfccf3c71b521605106bfae00b/src/FixedPointMathLib.sol#L57-L68\\n            //\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := shl(7, lt(0xffffffffffffffffffffffffffffffff, x))\\n                r := or(r, shl(6, lt(0xffffffffffffffff, shr(r, x))))\\n                r := or(r, shl(5, lt(0xffffffff, shr(r, x))))\\n                r := or(r, shl(4, lt(0xffff, shr(r, x))))\\n                r := or(r, shl(3, lt(0xff, shr(r, x))))\\n                r := or(r, shl(2, lt(0xf, shr(r, x))))\\n                r := or(r, shl(1, lt(0x3, shr(r, x))))\\n                r := or(r, lt(0x1, shr(r, x)))\\n            }\\n\\n            // Reduce range of x to [1, 2) * 2**96\\n            // ln(2^k * x) = k * ln(2) + ln(x)\\n            int256 k = r - 96;\\n            x <<= uint256(159 - k);\\n            x = (uint256(x) >> 159).toInt256();\\n\\n            // Evaluate using a (8, 8)-term rational approximation.\\n            // p is made monic, we will multiply by a scale factor later.\\n            int256 p = x + 3273285459638523848632254066296;\\n            p = ((p * x) >> 96) + 24828157081833163892658089445524;\\n            p = ((p * x) >> 96) + 43456485725739037958740375743393;\\n            p = ((p * x) >> 96) - 11111509109440967052023855526967;\\n            p = ((p * x) >> 96) - 45023709667254063763336534515857;\\n            p = ((p * x) >> 96) - 14706773417378608786704636184526;\\n            p = p * x - (795164235651350426258249787498 << 96);\\n\\n            // We leave p in 2**192 basis so we don't need to scale it back up for the division.\\n            // q is monic by convention.\\n            int256 q = x + 5573035233440673466300451813936;\\n            q = ((q * x) >> 96) + 71694874799317883764090561454958;\\n            q = ((q * x) >> 96) + 283447036172924575727196451306956;\\n            q = ((q * x) >> 96) + 401686690394027663651624208769553;\\n            q = ((q * x) >> 96) + 204048457590392012362485061816622;\\n            q = ((q * x) >> 96) + 31853899698501571402653359427138;\\n            q = ((q * x) >> 96) + 909429971244387300277376558375;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                // Div in assembly because solidity adds a zero check despite the unchecked.\\n                // The q polynomial is known not to have zeros in the domain.\\n                // No scaling required because p is already 2**96 too large.\\n                r := sdiv(p, q)\\n            }\\n\\n            // r is in the range (0, 0.125) * 2**96\\n\\n            // Finalization, we need to:\\n            // * multiply by the scale factor s = 5.549\\u2026\\n            // * add ln(2**96 / 10**18)\\n            // * add k * ln(2)\\n            // * multiply by 10**18 / 2**96 = 5**18 >> 78\\n\\n            // mul s * 5e18 * 2**96, base is now 5**18 * 2**192\\n            r *= 1677202110996718588342820967067443963516166;\\n            // add ln(2) * k * 5e18 * 2**192\\n            r +=\\n                16597577552685614221487285958193947469193820559219878177908093499208371 *\\n                k;\\n            // add ln(2**96 / 10**18) * 5e18 * 2**192\\n            r += 600920179829731861736702779321621459595472258049074101567377883020018308;\\n            // base conversion: mul 2**18 / 2**192\\n            r >>= 174;\\n        }\\n    }\\n\\n    /// @dev Updates a weighted average by adding or removing a weighted delta.\\n    /// @param _totalWeight The total weight before the update.\\n    /// @param _deltaWeight The weight of the new value.\\n    /// @param _average The weighted average before the update.\\n    /// @param _delta The new value.\\n    /// @return average The new weighted average.\\n    function updateWeightedAverage(\\n        uint256 _average,\\n        uint256 _totalWeight,\\n        uint256 _delta,\\n        uint256 _deltaWeight,\\n        bool _isAdding\\n    ) internal pure returns (uint256 average) {\\n        // If the delta weight is zero, the average does not change.\\n        if (_deltaWeight == 0) {\\n            return _average;\\n        }\\n\\n        // If the delta weight should be added to the total weight, we compute\\n        // the weighted average as:\\n        //\\n        // average = (totalWeight * average + deltaWeight * delta) /\\n        //           (totalWeight + deltaWeight)\\n        if (_isAdding) {\\n            // NOTE: Round down to underestimate the average.\\n            average = (_totalWeight.mulDown(_average) +\\n                _deltaWeight.mulDown(_delta)).divDown(\\n                    _totalWeight + _deltaWeight\\n                );\\n\\n            // An important property that should always hold when we are adding\\n            // to the average is:\\n            //\\n            // min(_delta, _average) <= average <= max(_delta, _average)\\n            //\\n            // To ensure that this is always the case, we clamp the weighted\\n            // average to this range. We don't have to worry about the\\n            // case where average > _delta.max(average) because rounding down when\\n            // computing this average makes this case infeasible.\\n            uint256 minAverage = _delta.min(_average);\\n            if (average < minAverage) {\\n                average = minAverage;\\n            }\\n        }\\n        // If the delta weight should be subtracted from the total weight, we\\n        // compute the weighted average as:\\n        //\\n        // average = (totalWeight * average - deltaWeight * delta) /\\n        //           (totalWeight - deltaWeight)\\n        else {\\n            if (_totalWeight == _deltaWeight) {\\n                return 0;\\n            }\\n\\n            // NOTE: Round down to underestimate the average.\\n            average = (_totalWeight.mulDown(_average) -\\n                _deltaWeight.mulUp(_delta)).divDown(\\n                    _totalWeight - _deltaWeight\\n                );\\n        }\\n    }\\n\\n    /// @dev Calculates the minimum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The minimum of the two values.\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? b : a;\\n    }\\n\\n    /// @dev Calculates the maximum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The maximum of the two values.\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /// @dev Calculates the minimum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The minimum of the two values.\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? b : a;\\n    }\\n\\n    /// @dev Calculates the maximum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The maximum of the two values.\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /// @dev Calculates the absolute value of an int256.\\n    /// @param a The value.\\n    /// @return The absolute value of the input.\\n    function abs(int256 a) internal pure returns (int256) {\\n        return a < 0 ? -a : a;\\n    }\\n}\\n\",\"keccak256\":\"0x6f3e307ac0baf0c0af25bb278e385cbaf13ef0aac27dc638635655a91427c9be\",\"license\":\"Apache-2.0\"},\"contracts/src/libraries/SafeCast.sol\":{\"content\":\"/// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"../interfaces/IHyperdrive.sol\\\";\\n\\n/// @notice Safe unsigned integer casting library that reverts on overflow.\\n/// @author Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)\\nlibrary SafeCast {\\n    /// @notice This function safely casts a uint256 to a uint112.\\n    /// @param x The uint256 to cast to uint112.\\n    /// @return y The uint112 casted from x.\\n    function toUint112(uint256 x) internal pure returns (uint112 y) {\\n        if (x > type(uint112).max) {\\n            revert IHyperdrive.UnsafeCastToUint112();\\n        }\\n        y = uint112(x);\\n    }\\n\\n    /// @notice This function safely casts a uint256 to a uint128.\\n    /// @param x The uint256 to cast to uint128.\\n    /// @return y The uint128 casted from x.\\n    function toUint128(uint256 x) internal pure returns (uint128 y) {\\n        if (x > type(uint128).max) {\\n            revert IHyperdrive.UnsafeCastToUint128();\\n        }\\n        y = uint128(x);\\n    }\\n\\n    /// @notice This function safely casts an uint256 to an int128.\\n    /// @param x The uint256 to cast to int128.\\n    /// @return y The int128 casted from x.\\n    function toInt128(uint256 x) internal pure returns (int128 y) {\\n        if (x > uint128(type(int128).max)) {\\n            revert IHyperdrive.UnsafeCastToInt128();\\n        }\\n        y = int128(int256(x));\\n    }\\n\\n    /// @notice This function safely casts an int256 to an int128.\\n    /// @param x The int256 to cast to int128.\\n    /// @return y The int128 casted from x.\\n    function toInt128(int256 x) internal pure returns (int128 y) {\\n        if (x < type(int128).min || x > type(int128).max) {\\n            revert IHyperdrive.UnsafeCastToInt128();\\n        }\\n        y = int128(x);\\n    }\\n\\n    /// @notice This function safely casts an uint256 to an int256.\\n    /// @param x The uint256 to cast to int256.\\n    /// @return y The int256 casted from x.\\n    function toInt256(uint256 x) internal pure returns (int256 y) {\\n        if (x > uint256(type(int256).max)) {\\n            revert IHyperdrive.UnsafeCastToInt256();\\n        }\\n        y = int256(x);\\n    }\\n}\\n\",\"keccak256\":\"0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A fixed-point math library.","version":1}}},"contracts/src/libraries/SafeCast.sol":{"SafeCast":{"abi":[],"devdoc":{"author":"Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c839da0c871563d2d1ae03261256bb5e9700d3b984a764a62ba0ebbf7489e7b364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CODECOPY 0xDA 0xC DUP8 ISZERO PUSH4 0xD2D1AE03 0x26 SLT JUMP 0xBB 0x5E SWAP8 STOP 0xD3 0xB9 DUP5 0xA7 PUSH5 0xA62BA0EBBF PUSH21 0x89E7B364736F6C6343000814003300000000000000 ","sourceMap":"343:1863:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;343:1863:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c839da0c871563d2d1ae03261256bb5e9700d3b984a764a62ba0ebbf7489e7b364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CODECOPY 0xDA 0xC DUP8 ISZERO PUSH4 0xD2D1AE03 0x26 SLT JUMP 0xBB 0x5E SWAP8 STOP 0xD3 0xB9 DUP5 0xA7 PUSH5 0xA62BA0EBBF PUSH21 0x89E7B364736F6C6343000814003300000000000000 ","sourceMap":"343:1863:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toInt128(int256)":"infinite","toInt128(uint256)":"infinite","toInt256(uint256)":"infinite","toUint112(uint256)":"infinite","toUint128(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe unsigned integer casting library that reverts on overflow.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdrive.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdriveCore } from \\\"./IHyperdriveCore.sol\\\";\\nimport { IHyperdriveEvents } from \\\"./IHyperdriveEvents.sol\\\";\\nimport { IHyperdriveRead } from \\\"./IHyperdriveRead.sol\\\";\\nimport { IMultiToken } from \\\"./IMultiToken.sol\\\";\\n\\ninterface IHyperdrive is\\n    IHyperdriveEvents,\\n    IHyperdriveRead,\\n    IHyperdriveCore,\\n    IMultiToken\\n{\\n    /// Structs ///\\n\\n    struct MarketState {\\n        /// @dev The pool's share reserves.\\n        uint128 shareReserves;\\n        /// @dev The pool's bond reserves.\\n        uint128 bondReserves;\\n        /// @dev The global exposure of the pool due to open longs\\n        uint128 longExposure;\\n        /// @dev The amount of longs that are still open.\\n        uint128 longsOutstanding;\\n        /// @dev The net amount of shares that have been added and removed from\\n        ///      the share reserves due to flat updates.\\n        int128 shareAdjustment;\\n        /// @dev The amount of shorts that are still open.\\n        uint128 shortsOutstanding;\\n        /// @dev The average maturity time of outstanding long positions.\\n        uint128 longAverageMaturityTime;\\n        /// @dev The average maturity time of outstanding short positions.\\n        uint128 shortAverageMaturityTime;\\n        /// @dev A flag indicating whether or not the pool has been initialized.\\n        bool isInitialized;\\n        /// @dev A flag indicating whether or not the pool is paused.\\n        bool isPaused;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint112 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint128 zombieShareReserves;\\n    }\\n\\n    struct Checkpoint {\\n        /// @dev The vault share price during the first transaction in the\\n        ///      checkpoint. This is used to track the amount of interest\\n        ///      accrued by shorts as well as the vault share price at closing\\n        //       of matured longs and shorts.\\n        uint128 vaultSharePrice;\\n    }\\n\\n    struct WithdrawPool {\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint128 readyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint128 proceeds;\\n    }\\n\\n    struct Fees {\\n        /// @dev The LP fee applied to the curve portion of a trade.\\n        uint256 curve;\\n        /// @dev The LP fee applied to the flat portion of a trade.\\n        uint256 flat;\\n        /// @dev The portion of the LP fee that goes to governance.\\n        uint256 governanceLP;\\n        /// @dev The portion of the zombie interest that goes to governance.\\n        uint256 governanceZombie;\\n    }\\n\\n    struct PoolDeployConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The initial vault share price.\\n        uint256 initialVaultSharePrice;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolInfo {\\n        /// @dev The reserves of shares held by the pool.\\n        uint256 shareReserves;\\n        /// @dev The adjustment applied to the share reserves when pricing\\n        ///      bonds. This is used to ensure that the pricing mechanism is\\n        ///      held invariant under flat updates for security reasons.\\n        int256 shareAdjustment;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint256 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint256 zombieShareReserves;\\n        /// @dev The reserves of bonds held by the pool.\\n        uint256 bondReserves;\\n        /// @dev The total supply of LP shares.\\n        uint256 lpTotalSupply;\\n        /// @dev The current vault share price.\\n        uint256 vaultSharePrice;\\n        /// @dev An amount of bonds representing outstanding unmatured longs.\\n        uint256 longsOutstanding;\\n        /// @dev The average maturity time of the outstanding longs.\\n        uint256 longAverageMaturityTime;\\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\\n        uint256 shortsOutstanding;\\n        /// @dev The average maturity time of the outstanding shorts.\\n        uint256 shortAverageMaturityTime;\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint256 withdrawalSharesReadyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint256 withdrawalSharesProceeds;\\n        /// @dev The share price of LP shares. This can be used to mark LP\\n        ///      shares to market.\\n        uint256 lpSharePrice;\\n        /// @dev The global exposure of the pool due to open positions\\n        uint256 longExposure;\\n    }\\n\\n    struct Options {\\n        /// @dev The address that receives the proceeds of a trade or LP action.\\n        address destination;\\n        /// @dev A boolean indicating that the trade or LP action should be\\n        ///      settled in base if true and in the yield source shares if false.\\n        bool asBase;\\n        /// @dev Additional data that can be used to implement custom logic in\\n        ///      implementation contracts.\\n        bytes extraData;\\n    }\\n\\n    /// Errors ///\\n\\n    /// @notice Thrown when the inputs to a batch transfer don't match in\\n    ///         length.\\n    error BatchInputLengthMismatch();\\n\\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\\n    ///         to cover the minimum share reserves and the LP shares that are\\n    ///         burned on initialization.\\n    error BelowMinimumContribution();\\n\\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\\n    ///         the result to be larger than the representable scale.\\n    error ExpInvalidExponent();\\n\\n    /// @notice Thrown when a permit signature is expired.\\n    error ExpiredDeadline();\\n\\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\\n    ///         an action.\\n    error InsufficientBalance();\\n\\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\\n    ///         complete the trade.\\n    error InsufficientLiquidity();\\n\\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\\n    ///         a LP when they are adding liquidity.\\n    error InvalidApr();\\n\\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\\n    ///         larger than the current checkpoint or isn't divisible by the\\n    ///         checkpoint duration.\\n    error InvalidCheckpointTime();\\n\\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\\n    ///         functions is not the corresponding bridge.\\n    error InvalidERC20Bridge();\\n\\n    /// @notice Thrown when a destination other than the fee collector is\\n    ///         specified in `collectGovernanceFee`.\\n    error InvalidFeeDestination();\\n\\n    /// @notice Thrown when the initial share price doesn't match the share\\n    ///         price of the underlying yield source on deployment.\\n    error InvalidInitialVaultSharePrice();\\n\\n    /// @notice Thrown when the LP share price couldn't be calculated in a\\n    ///         critical situation.\\n    error InvalidLPSharePrice();\\n\\n    /// @notice Thrown when the present value calculation fails.\\n    error InvalidPresentValue();\\n\\n    /// @notice Thrown when an invalid signature is used provide permit access\\n    ///         to the MultiToken. A signature is considered to be invalid if\\n    ///         it fails to recover to the owner's address.\\n    error InvalidSignature();\\n\\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\\n    ///         the uint248 scale.\\n    error InvalidTimestamp();\\n\\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\\n    ///         equal to zero.\\n    error LnInvalidInput();\\n\\n    /// @notice Thrown when vault share price is smaller than the minimum share\\n    ///         price. This protects traders from unknowingly opening a long or\\n    ///         short after negative interest has accrued.\\n    error MinimumSharePrice();\\n\\n    /// @notice Thrown when the input or output amount of a trade is smaller\\n    ///         than the minimum transaction amount. This protects traders and\\n    ///         LPs from losses of precision that can occur at small scales.\\n    error MinimumTransactionAmount();\\n\\n    /// @notice Thrown when the present value prior to adding liquidity results in a\\n    ///         decrease in present value after liquidity. This is caused by a\\n    ///         shortage in liquidity that prevents all the open positions being\\n    ///         closed on the curve and therefore marked to 1.\\n    error DecreasedPresentValueWhenAddingLiquidity();\\n\\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\\n    ///         ether as a deposit asset.\\n    error NotPayable();\\n\\n    /// @notice Thrown when a slippage guard is violated.\\n    error OutputLimit();\\n\\n    /// @notice Thrown when the pool is already initialized and a trader calls\\n    ///         `initialize`. This prevents the pool from being reinitialized\\n    ///         after it has been initialized.\\n    error PoolAlreadyInitialized();\\n\\n    /// @notice Thrown when the pool is paused and a trader tries to add\\n    ///         liquidity, open a long, or open a short. Traders can still\\n    ///         close their existing positions while the pool is paused.\\n    error PoolIsPaused();\\n\\n    /// @notice Thrown when the owner passed to permit is the zero address. This\\n    ///         prevents users from spending the funds in address zero by\\n    ///         sending an invalid signature to ecrecover.\\n    error RestrictedZeroAddress();\\n\\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\\n    ///         normal error, this error actually indicates that a read-only\\n    ///         call succeeded. The data that it wraps is the return data from\\n    ///         the read-only call.\\n    error ReturnData(bytes data);\\n\\n    /// @notice Thrown when an asset is swept from the pool and one of the\\n    ///         pool's depository assets changes.\\n    error SweepFailed();\\n\\n    /// @notice Thrown when the distribute excess idle calculation fails due\\n    ///         to the starting present value calculation failing.\\n    error DistributeExcessIdleFailed();\\n\\n    /// @notice Thrown when an ether transfer fails.\\n    error TransferFailed();\\n\\n    /// @notice Thrown when an unauthorized user attempts to access admin\\n    ///         functionality.\\n    error Unauthorized();\\n\\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\\n    ///         uses a force-revert delegatecall pattern to ensure that calls\\n    ///         that are intended to be read-only are actually read-only.\\n    error UnexpectedSuccess();\\n\\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint112();\\n\\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint128();\\n\\n    /// @notice Thrown when casting a value to a int128 that is outside of the\\n    ///         int128 scale.\\n    error UnsafeCastToInt128();\\n\\n    /// @notice Thrown when casting a value to a int256 that is outside of the\\n    ///         int256 scale.\\n    error UnsafeCastToInt256();\\n\\n    /// @notice Thrown when an unsupported option is passed to a function or\\n    ///         a user attempts to sweep an invalid token. The options and sweep\\n    ///         targets that are supported vary between instances.\\n    error UnsupportedToken();\\n\\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\\n    error UpdateLiquidityFailed();\\n\\n    /// Getters ///\\n\\n    /// @notice Gets the target0 address.\\n    /// @return The target0 address.\\n    function target0() external view returns (address);\\n\\n    /// @notice Gets the target1 address.\\n    /// @return The target1 address.\\n    function target1() external view returns (address);\\n\\n    /// @notice Gets the target2 address.\\n    /// @return The target2 address.\\n    function target2() external view returns (address);\\n\\n    /// @notice Gets the target3 address.\\n    /// @return The target3 address.\\n    function target3() external view returns (address);\\n\\n    /// @notice Gets the target4 address.\\n    /// @return The target4 address.\\n    function target4() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\n\\ninterface IHyperdriveCore is IMultiTokenCore {\\n    /// Longs ///\\n\\n    /// @notice Opens a long position.\\n    /// @param _amount The amount of capital provided to open the long. The\\n    ///        units of this quantity are either base or vault shares, depending\\n    ///        on the value of `_options.asBase`.\\n    /// @param _minOutput The minimum number of bonds to receive.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to\\n    ///        open the long. This allows traders to protect themselves from\\n    ///        opening a long in a checkpoint where negative interest has\\n    ///        accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the bonds.\\n    /// @return bondProceeds The amount of bonds the user received.\\n    function openLong(\\n        uint256 _amount,\\n        uint256 _minOutput,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\\n\\n    /// @notice Closes a long position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the long.\\n    /// @param _bondAmount The amount of longs to close.\\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\\n    ///        of this quantity are either base or vault shares, depending on\\n    ///        the value of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds the user receives. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeLong(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// Shorts ///\\n\\n    /// @notice Opens a short position.\\n    /// @param _bondAmount The amount of bonds to short.\\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\\n    ///        The units of this quantity are either base or vault shares,\\n    ///        depending on the value of `_options.asBase`.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\\n    ///        the short. This allows traders to protect themselves from opening\\n    ///        a short in a checkpoint where negative interest has accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the short.\\n    /// @return deposit The amount the user deposited for this trade. The units\\n    ///         of this quantity are either base or vault shares, depending on\\n    ///         the value of `_options.asBase`.\\n    function openShort(\\n        uint256 _bondAmount,\\n        uint256 _maxDeposit,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\\n\\n    /// @notice Closes a short position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the short.\\n    /// @param _bondAmount The amount of shorts to close.\\n    /// @param _minOutput The minimum output of this trade. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds of closing this short. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeShort(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// LPs ///\\n\\n    /// @notice Allows the first LP to initialize the market with a target APR.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _apr The target APR.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The initial number of LP shares created.\\n    function initialize(\\n        uint256 _contribution,\\n        uint256 _apr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows LPs to supply liquidity for LP shares.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\\n    ///        to accept for their shares. LPs incur negative slippage when\\n    ///        adding liquidity if there is a net curve position in the market,\\n    ///        so this allows LPs to protect themselves from high levels of\\n    ///        slippage. The units of this quantity are either base or vault\\n    ///        shares, depending on the value of `_options.asBase`.\\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The LP shares received by the LP.\\n    function addLiquidity(\\n        uint256 _contribution,\\n        uint256 _minLpSharePrice,\\n        uint256 _minApr,\\n        uint256 _maxApr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\\n    /// @param _lpShares The LP shares to burn.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\\n    ///        for each withdrawal share that is burned. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP removing liquidity receives. The\\n    ///         units of this quantity are either base or vault shares,\\n    ///         depending on the value of `_options.asBase`.\\n    /// @return withdrawalShares The base that the LP receives buys out some of\\n    ///         their LP shares, but it may not be sufficient to fully buy the\\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\\n    ///         value to the present value they are owed. As idle capital\\n    ///         becomes available, the pool will buy back these shares.\\n    function removeLiquidity(\\n        uint256 _lpShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\\n\\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\\n    ///         the withdrawal pool's proceeds. This function redeems the\\n    ///         maximum amount of the specified withdrawal shares given the\\n    ///         amount of withdrawal shares ready to withdraw.\\n    /// @param _withdrawalShares The withdrawal shares to redeem.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to\\n    ///        receive for each withdrawal share that is burned. The units of\\n    ///        this quantity are either base or vault shares, depending on the\\n    ///        value of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP received. The units of this quantity\\n    ///         are either base or vault shares, depending on the value of\\n    ///         `_options.asBase`.\\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\\n    ///         were redeemed.\\n    function redeemWithdrawalShares(\\n        uint256 _withdrawalShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\\n\\n    /// Checkpoints ///\\n\\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\\n    /// @param _checkpointTime The time of the checkpoint to create.\\n    /// @param _maxIterations The number of iterations to use in the Newton's\\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\\n    ///        smaller than the constant.\\n    function checkpoint(\\n        uint256 _checkpointTime,\\n        uint256 _maxIterations\\n    ) external;\\n\\n    /// Admin ///\\n\\n    /// @notice This function collects the governance fees accrued by the pool.\\n    /// @param _options The options that configure how the fees are settled.\\n    /// @return proceeds The governance fees collected. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function collectGovernanceFee(\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// @notice Allows an authorized address to pause this contract.\\n    /// @param _status True to pause all deposits and false to unpause them.\\n    function pause(bool _status) external;\\n\\n    /// @notice Allows governance to transfer the fee collector role.\\n    /// @param _who The new fee collector address.\\n    function setFeeCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the sweep collector role.\\n    /// @param _who The new sweep collector address.\\n    function setSweepCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the governance role.\\n    /// @param _who The new governance address.\\n    function setGovernance(address _who) external;\\n\\n    /// @notice Allows governance to change the pauser status of an address.\\n    /// @param who The address to change.\\n    /// @param status The new pauser status.\\n    function setPauser(address who, bool status) external;\\n\\n    /// @notice Transfers the contract's balance of a target token to the fee\\n    ///         collector address.\\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\\n    ///      with 'transferFrom'. Any integrating contracts should be checked\\n    ///      for that, as it may result in an unexpected call from this address.\\n    /// @param _target The target token to sweep.\\n    function sweep(IERC20 _target) external;\\n}\\n\",\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IHyperdriveRead is IMultiTokenRead {\\n    /// @notice Gets the instance's name.\\n    /// @return The instance's name.\\n    function name() external pure returns (string memory);\\n\\n    /// @notice Gets the instance's version.\\n    /// @return The instance's version.\\n    function version() external pure returns (string memory);\\n\\n    /// @notice Gets the Hyperdrive pool's base token.\\n    /// @return The base token.\\n    function baseToken() external view returns (address);\\n\\n    /// @notice Gets the Hyperdrive pool's vault shares token.\\n    /// @return The vault shares token.\\n    function vaultSharesToken() external view returns (address);\\n\\n    /// @notice Gets one of the pool's checkpoints.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint.\\n    function getCheckpoint(\\n        uint256 _checkpointTime\\n    ) external view returns (IHyperdrive.Checkpoint memory);\\n\\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\\n    ///         of non-netted longs in the checkpoint.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint exposure.\\n    function getCheckpointExposure(\\n        uint256 _checkpointTime\\n    ) external view returns (int256);\\n\\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\\n    /// @return The market state.\\n    function getMarketState()\\n        external\\n        view\\n        returns (IHyperdrive.MarketState memory);\\n\\n    /// @notice Gets the pool's configuration parameters.\\n    /// @return The pool configuration.\\n    function getPoolConfig()\\n        external\\n        view\\n        returns (IHyperdrive.PoolConfig memory);\\n\\n    /// @notice Gets info about the pool's reserves and other state that is\\n    ///         important to evaluate potential trades.\\n    /// @return The pool info.\\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\\n\\n    /// @notice Gets the amount of governance fees that haven't been collected.\\n    /// @return The amount of uncollected governance fees.\\n    function getUncollectedGovernanceFees() external view returns (uint256);\\n\\n    /// @notice Gets information relating to the pool's withdrawal pool. This\\n    ///         includes the total proceeds underlying the withdrawal pool and\\n    ///         the number of withdrawal shares ready to be redeemed.\\n    /// @return The withdrawal pool information.\\n    function getWithdrawPool()\\n        external\\n        view\\n        returns (IHyperdrive.WithdrawPool memory);\\n\\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\\n    /// @param _account The account to check.\\n    /// @return The account's pauser status.\\n    function isPauser(address _account) external view returns (bool);\\n\\n    /// @notice Gets the storage values at the specified slots.\\n    /// @dev This serves as a generalized getter that allows consumers to create\\n    ///      custom getters to suit their purposes.\\n    /// @param _slots The storage slots to load.\\n    /// @return The values at the specified slots.\\n    function load(\\n        uint256[] calldata _slots\\n    ) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x53d74fac0617c24e649a28a95bf23174952ee7e137a9af065326505ca14903c1\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"},\"contracts/src/libraries/SafeCast.sol\":{\"content\":\"/// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"../interfaces/IHyperdrive.sol\\\";\\n\\n/// @notice Safe unsigned integer casting library that reverts on overflow.\\n/// @author Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)\\nlibrary SafeCast {\\n    /// @notice This function safely casts a uint256 to a uint112.\\n    /// @param x The uint256 to cast to uint112.\\n    /// @return y The uint112 casted from x.\\n    function toUint112(uint256 x) internal pure returns (uint112 y) {\\n        if (x > type(uint112).max) {\\n            revert IHyperdrive.UnsafeCastToUint112();\\n        }\\n        y = uint112(x);\\n    }\\n\\n    /// @notice This function safely casts a uint256 to a uint128.\\n    /// @param x The uint256 to cast to uint128.\\n    /// @return y The uint128 casted from x.\\n    function toUint128(uint256 x) internal pure returns (uint128 y) {\\n        if (x > type(uint128).max) {\\n            revert IHyperdrive.UnsafeCastToUint128();\\n        }\\n        y = uint128(x);\\n    }\\n\\n    /// @notice This function safely casts an uint256 to an int128.\\n    /// @param x The uint256 to cast to int128.\\n    /// @return y The int128 casted from x.\\n    function toInt128(uint256 x) internal pure returns (int128 y) {\\n        if (x > uint128(type(int128).max)) {\\n            revert IHyperdrive.UnsafeCastToInt128();\\n        }\\n        y = int128(int256(x));\\n    }\\n\\n    /// @notice This function safely casts an int256 to an int128.\\n    /// @param x The int256 to cast to int128.\\n    /// @return y The int128 casted from x.\\n    function toInt128(int256 x) internal pure returns (int128 y) {\\n        if (x < type(int128).min || x > type(int128).max) {\\n            revert IHyperdrive.UnsafeCastToInt128();\\n        }\\n        y = int128(x);\\n    }\\n\\n    /// @notice This function safely casts an uint256 to an int256.\\n    /// @param x The uint256 to cast to int256.\\n    /// @return y The int256 casted from x.\\n    function toInt256(uint256 x) internal pure returns (int256 y) {\\n        if (x > uint256(type(int256).max)) {\\n            revert IHyperdrive.UnsafeCastToInt256();\\n        }\\n        y = int256(x);\\n    }\\n}\\n\",\"keccak256\":\"0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Safe unsigned integer casting library that reverts on overflow.","version":1}}},"contracts/test/ERC20Mintable.sol":{"ERC20Mintable":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"bool","name":"isCompetitionMode_","type":"bool"},{"internalType":"uint256","name":"maxMintAmount_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"PublicCapabilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint8","name":"role","type":"uint8"},{"indexed":true,"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"RoleCapabilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"authority","type":"address"}],"name":"TargetCustomAuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint8","name":"role","type":"uint8"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"UserRoleUpdated","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"doesRoleHaveCapability","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"}],"name":"doesUserHaveRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"getRolesWithCapability","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getTargetCustomAuthority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getUserRoles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"isCapabilityPublic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isCompetitionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxMintAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setPublicCapability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setRoleCapability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"contract Authority","name":"customAuthority","type":"address"}],"name":"setTargetCustomAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setUserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2196":{"entryPoint":null,"id":2196,"parameterSlots":6,"returnSlots":0},"@_2655":{"entryPoint":null,"id":2655,"parameterSlots":2,"returnSlots":0},"@_2829":{"entryPoint":null,"id":2829,"parameterSlots":2,"returnSlots":0},"@_3159":{"entryPoint":null,"id":3159,"parameterSlots":3,"returnSlots":0},"@computeDomainSeparator_3413":{"entryPoint":287,"id":3413,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_boolt_uint256_fromMemory":{"entryPoint":662,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":913,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":996,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":853,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":443,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6124:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:17"},"nodeType":"YulFunctionCall","src":"66:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:17"},"nodeType":"YulFunctionCall","src":"56:31:17"},"nodeType":"YulExpressionStatement","src":"56:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:17"},"nodeType":"YulFunctionCall","src":"96:15:17"},"nodeType":"YulExpressionStatement","src":"96:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:17"},"nodeType":"YulFunctionCall","src":"120:15:17"},"nodeType":"YulExpressionStatement","src":"120:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:17"},{"body":{"nodeType":"YulBlock","src":"210:776:17","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:17"},"nodeType":"YulFunctionCall","src":"261:12:17"},"nodeType":"YulExpressionStatement","src":"261:12:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:17"},"nodeType":"YulFunctionCall","src":"234:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:17"},"nodeType":"YulFunctionCall","src":"230:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:17"},"nodeType":"YulFunctionCall","src":"223:35:17"},"nodeType":"YulIf","src":"220:55:17"},{"nodeType":"YulVariableDeclaration","src":"284:23:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:17"},"nodeType":"YulFunctionCall","src":"294:13:17"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:17"},"nodeType":"YulFunctionCall","src":"330:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:17"},"nodeType":"YulFunctionCall","src":"326:18:17"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:17"},"nodeType":"YulFunctionCall","src":"369:18:17"},"nodeType":"YulExpressionStatement","src":"369:18:17"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:17"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:17"},"nodeType":"YulFunctionCall","src":"356:10:17"},"nodeType":"YulIf","src":"353:36:17"},{"nodeType":"YulVariableDeclaration","src":"398:17:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:17"},"nodeType":"YulFunctionCall","src":"408:7:17"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:17"},"nodeType":"YulFunctionCall","src":"438:9:17"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:17"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:17"},"nodeType":"YulFunctionCall","src":"498:13:17"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:17"},"nodeType":"YulFunctionCall","src":"494:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:17","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:17"},"nodeType":"YulFunctionCall","src":"490:31:17"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:17"},"nodeType":"YulFunctionCall","src":"486:40:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:17"},"nodeType":"YulFunctionCall","src":"474:53:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:17"},"nodeType":"YulFunctionCall","src":"588:18:17"},"nodeType":"YulExpressionStatement","src":"588:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:17"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:17"},"nodeType":"YulFunctionCall","src":"542:18:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:17"},"nodeType":"YulFunctionCall","src":"562:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:17"},"nodeType":"YulFunctionCall","src":"539:46:17"},"nodeType":"YulIf","src":"536:72:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:17"},"nodeType":"YulFunctionCall","src":"617:22:17"},"nodeType":"YulExpressionStatement","src":"617:22:17"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:17"},"nodeType":"YulFunctionCall","src":"648:18:17"},"nodeType":"YulExpressionStatement","src":"648:18:17"},{"nodeType":"YulVariableDeclaration","src":"675:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:17","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:17"},"nodeType":"YulFunctionCall","src":"737:12:17"},"nodeType":"YulExpressionStatement","src":"737:12:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:17"},"nodeType":"YulFunctionCall","src":"708:15:17"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:17"},"nodeType":"YulFunctionCall","src":"704:24:17"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:17"},"nodeType":"YulFunctionCall","src":"701:33:17"},"nodeType":"YulIf","src":"698:53:17"},{"nodeType":"YulVariableDeclaration","src":"760:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:17"},"nodeType":"YulFunctionCall","src":"850:14:17"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:17"},"nodeType":"YulFunctionCall","src":"846:23:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:17"},"nodeType":"YulFunctionCall","src":"881:14:17"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:17"},"nodeType":"YulFunctionCall","src":"877:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:17"},"nodeType":"YulFunctionCall","src":"871:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:17"},"nodeType":"YulFunctionCall","src":"839:63:17"},"nodeType":"YulExpressionStatement","src":"839:63:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:17"},"nodeType":"YulFunctionCall","src":"787:9:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:17","statements":[{"nodeType":"YulAssignment","src":"799:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:17"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:17"},"nodeType":"YulFunctionCall","src":"804:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:17","statements":[]},"src":"779:133:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:17"},"nodeType":"YulFunctionCall","src":"932:15:17"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:17"},"nodeType":"YulFunctionCall","src":"928:24:17"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:17"},"nodeType":"YulFunctionCall","src":"921:35:17"},"nodeType":"YulExpressionStatement","src":"921:35:17"},{"nodeType":"YulAssignment","src":"965:15:17","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:17"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:17","type":""}],"src":"146:840:17"},{"body":{"nodeType":"YulBlock","src":"1048:107:17","statements":[{"nodeType":"YulAssignment","src":"1058:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1073:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1067:5:17"},"nodeType":"YulFunctionCall","src":"1067:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1058:5:17"}]},{"body":{"nodeType":"YulBlock","src":"1133:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1142:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1145:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1135:6:17"},"nodeType":"YulFunctionCall","src":"1135:12:17"},"nodeType":"YulExpressionStatement","src":"1135:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1123:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1116:6:17"},"nodeType":"YulFunctionCall","src":"1116:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1109:6:17"},"nodeType":"YulFunctionCall","src":"1109:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1099:2:17"},"nodeType":"YulFunctionCall","src":"1099:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1092:6:17"},"nodeType":"YulFunctionCall","src":"1092:40:17"},"nodeType":"YulIf","src":"1089:60:17"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1027:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1038:5:17","type":""}],"src":"991:164:17"},{"body":{"nodeType":"YulBlock","src":"1341:849:17","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:17"},"nodeType":"YulFunctionCall","src":"1390:12:17"},"nodeType":"YulExpressionStatement","src":"1390:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1371:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1358:3:17"},"nodeType":"YulFunctionCall","src":"1358:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1383:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1354:3:17"},"nodeType":"YulFunctionCall","src":"1354:33:17"},"nodeType":"YulIf","src":"1351:53:17"},{"nodeType":"YulVariableDeclaration","src":"1413:30:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1433:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1427:5:17"},"nodeType":"YulFunctionCall","src":"1427:16:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1452:28:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1470:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1474:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1466:3:17"},"nodeType":"YulFunctionCall","src":"1466:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1462:3:17"},"nodeType":"YulFunctionCall","src":"1462:18:17"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1456:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1507:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1516:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1519:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1509:6:17"},"nodeType":"YulFunctionCall","src":"1509:12:17"},"nodeType":"YulExpressionStatement","src":"1509:12:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1495:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1503:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1492:2:17"},"nodeType":"YulFunctionCall","src":"1492:14:17"},"nodeType":"YulIf","src":"1489:34:17"},{"nodeType":"YulAssignment","src":"1532:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1575:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1586:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1571:3:17"},"nodeType":"YulFunctionCall","src":"1571:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1595:7:17"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1542:28:17"},"nodeType":"YulFunctionCall","src":"1542:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1532:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1612:41:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1638:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1649:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1634:3:17"},"nodeType":"YulFunctionCall","src":"1634:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1628:5:17"},"nodeType":"YulFunctionCall","src":"1628:25:17"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1616:8:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1691:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1694:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1684:6:17"},"nodeType":"YulFunctionCall","src":"1684:12:17"},"nodeType":"YulExpressionStatement","src":"1684:12:17"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1668:8:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1678:2:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1665:2:17"},"nodeType":"YulFunctionCall","src":"1665:16:17"},"nodeType":"YulIf","src":"1662:36:17"},{"nodeType":"YulAssignment","src":"1707:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1750:9:17"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1761:8:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1746:3:17"},"nodeType":"YulFunctionCall","src":"1746:24:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1772:7:17"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1717:28:17"},"nodeType":"YulFunctionCall","src":"1717:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1707:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1789:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1812:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1823:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:17"},"nodeType":"YulFunctionCall","src":"1808:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1802:5:17"},"nodeType":"YulFunctionCall","src":"1802:25:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1793:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1875:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1884:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1887:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1877:6:17"},"nodeType":"YulFunctionCall","src":"1877:12:17"},"nodeType":"YulExpressionStatement","src":"1877:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1849:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1860:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1867:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1856:3:17"},"nodeType":"YulFunctionCall","src":"1856:16:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1846:2:17"},"nodeType":"YulFunctionCall","src":"1846:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1839:6:17"},"nodeType":"YulFunctionCall","src":"1839:35:17"},"nodeType":"YulIf","src":"1836:55:17"},{"nodeType":"YulAssignment","src":"1900:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1910:5:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1900:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1924:40:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1949:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1960:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1945:3:17"},"nodeType":"YulFunctionCall","src":"1945:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1939:5:17"},"nodeType":"YulFunctionCall","src":"1939:25:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1928:7:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2031:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2040:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2043:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2033:6:17"},"nodeType":"YulFunctionCall","src":"2033:12:17"},"nodeType":"YulExpressionStatement","src":"2033:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1986:7:17"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1999:7:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2021:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2012:3:17"},"nodeType":"YulFunctionCall","src":"2012:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2008:3:17"},"nodeType":"YulFunctionCall","src":"2008:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1995:3:17"},"nodeType":"YulFunctionCall","src":"1995:33:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1983:2:17"},"nodeType":"YulFunctionCall","src":"1983:46:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1976:6:17"},"nodeType":"YulFunctionCall","src":"1976:54:17"},"nodeType":"YulIf","src":"1973:74:17"},{"nodeType":"YulAssignment","src":"2056:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2066:7:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2056:6:17"}]},{"nodeType":"YulAssignment","src":"2082:57:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2134:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:17"},"nodeType":"YulFunctionCall","src":"2119:19:17"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"2092:26:17"},"nodeType":"YulFunctionCall","src":"2092:47:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2082:6:17"}]},{"nodeType":"YulAssignment","src":"2148:36:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2179:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:17"},"nodeType":"YulFunctionCall","src":"2164:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2158:5:17"},"nodeType":"YulFunctionCall","src":"2158:26:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2148:6:17"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1267:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1278:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1290:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1298:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1306:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1314:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1322:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1330:6:17","type":""}],"src":"1160:1030:17"},{"body":{"nodeType":"YulBlock","src":"2250:325:17","statements":[{"nodeType":"YulAssignment","src":"2260:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2274:1:17","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2277:4:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2270:3:17"},"nodeType":"YulFunctionCall","src":"2270:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2260:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2291:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2321:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"2327:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2317:3:17"},"nodeType":"YulFunctionCall","src":"2317:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2295:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2368:31:17","statements":[{"nodeType":"YulAssignment","src":"2370:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2384:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2392:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2380:3:17"},"nodeType":"YulFunctionCall","src":"2380:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2370:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2348:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2341:6:17"},"nodeType":"YulFunctionCall","src":"2341:26:17"},"nodeType":"YulIf","src":"2338:61:17"},{"body":{"nodeType":"YulBlock","src":"2458:111:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2479:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2486:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2491:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2482:3:17"},"nodeType":"YulFunctionCall","src":"2482:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2472:6:17"},"nodeType":"YulFunctionCall","src":"2472:31:17"},"nodeType":"YulExpressionStatement","src":"2472:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2523:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2526:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2516:6:17"},"nodeType":"YulFunctionCall","src":"2516:15:17"},"nodeType":"YulExpressionStatement","src":"2516:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2551:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2554:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2544:6:17"},"nodeType":"YulFunctionCall","src":"2544:15:17"},"nodeType":"YulExpressionStatement","src":"2544:15:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2414:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2437:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2434:2:17"},"nodeType":"YulFunctionCall","src":"2434:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2411:2:17"},"nodeType":"YulFunctionCall","src":"2411:38:17"},"nodeType":"YulIf","src":"2408:161:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2230:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2239:6:17","type":""}],"src":"2195:380:17"},{"body":{"nodeType":"YulBlock","src":"2636:65:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2653:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2656:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2646:6:17"},"nodeType":"YulFunctionCall","src":"2646:14:17"},"nodeType":"YulExpressionStatement","src":"2646:14:17"},{"nodeType":"YulAssignment","src":"2669:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2687:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2690:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2677:9:17"},"nodeType":"YulFunctionCall","src":"2677:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2669:4:17"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2619:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2627:4:17","type":""}],"src":"2580:121:17"},{"body":{"nodeType":"YulBlock","src":"2787:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"2820:425:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2834:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2844:1:17","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2838:2:17","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2865:2:17"},{"name":"array","nodeType":"YulIdentifier","src":"2869:5:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2858:6:17"},"nodeType":"YulFunctionCall","src":"2858:17:17"},"nodeType":"YulExpressionStatement","src":"2858:17:17"},{"nodeType":"YulVariableDeclaration","src":"2888:31:17","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2910:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2900:9:17"},"nodeType":"YulFunctionCall","src":"2900:19:17"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2892:4:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2932:57:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2955:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2965:1:17","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2972:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"2984:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:17"},"nodeType":"YulFunctionCall","src":"2968:19:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2961:3:17"},"nodeType":"YulFunctionCall","src":"2961:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2951:3:17"},"nodeType":"YulFunctionCall","src":"2951:38:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2936:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3026:23:17","statements":[{"nodeType":"YulAssignment","src":"3028:19:17","value":{"name":"data","nodeType":"YulIdentifier","src":"3043:4:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3028:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3008:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3020:4:17","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3005:2:17"},"nodeType":"YulFunctionCall","src":"3005:20:17"},"nodeType":"YulIf","src":"3002:47:17"},{"nodeType":"YulVariableDeclaration","src":"3062:41:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3076:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3086:1:17","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3093:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3098:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:17"},"nodeType":"YulFunctionCall","src":"3089:12:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3082:3:17"},"nodeType":"YulFunctionCall","src":"3082:20:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3072:3:17"},"nodeType":"YulFunctionCall","src":"3072:31:17"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3066:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3116:24:17","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"3129:11:17"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3120:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3214:21:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3223:5:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3230:2:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3216:6:17"},"nodeType":"YulFunctionCall","src":"3216:17:17"},"nodeType":"YulExpressionStatement","src":"3216:17:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3164:5:17"},{"name":"_2","nodeType":"YulIdentifier","src":"3171:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3161:2:17"},"nodeType":"YulFunctionCall","src":"3161:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3175:26:17","statements":[{"nodeType":"YulAssignment","src":"3177:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3190:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3186:3:17"},"nodeType":"YulFunctionCall","src":"3186:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3177:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3157:3:17","statements":[]},"src":"3153:82:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2803:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2808:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2800:2:17"},"nodeType":"YulFunctionCall","src":"2800:11:17"},"nodeType":"YulIf","src":"2797:448:17"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2759:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"2766:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2771:10:17","type":""}],"src":"2706:545:17"},{"body":{"nodeType":"YulBlock","src":"3341:81:17","statements":[{"nodeType":"YulAssignment","src":"3351:65:17","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3366:4:17"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3384:1:17","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3387:3:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3380:3:17"},"nodeType":"YulFunctionCall","src":"3380:11:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3397:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3393:3:17"},"nodeType":"YulFunctionCall","src":"3393:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3376:3:17"},"nodeType":"YulFunctionCall","src":"3376:24:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3372:3:17"},"nodeType":"YulFunctionCall","src":"3372:29:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3362:3:17"},"nodeType":"YulFunctionCall","src":"3362:40:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3408:1:17","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3411:3:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3404:3:17"},"nodeType":"YulFunctionCall","src":"3404:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3359:2:17"},"nodeType":"YulFunctionCall","src":"3359:57:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3351:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3318:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"3324:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3332:4:17","type":""}],"src":"3256:166:17"},{"body":{"nodeType":"YulBlock","src":"3523:1256:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3533:24:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3553:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3547:5:17"},"nodeType":"YulFunctionCall","src":"3547:10:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3537:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3600:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3602:16:17"},"nodeType":"YulFunctionCall","src":"3602:18:17"},"nodeType":"YulExpressionStatement","src":"3602:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3572:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3588:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3592:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3584:3:17"},"nodeType":"YulFunctionCall","src":"3584:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3596:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3580:3:17"},"nodeType":"YulFunctionCall","src":"3580:18:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3569:2:17"},"nodeType":"YulFunctionCall","src":"3569:30:17"},"nodeType":"YulIf","src":"3566:56:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3675:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3713:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3707:5:17"},"nodeType":"YulFunctionCall","src":"3707:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3681:25:17"},"nodeType":"YulFunctionCall","src":"3681:38:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"3721:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3631:43:17"},"nodeType":"YulFunctionCall","src":"3631:97:17"},"nodeType":"YulExpressionStatement","src":"3631:97:17"},{"nodeType":"YulVariableDeclaration","src":"3737:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3754:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3741:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3764:23:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3783:4:17","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3768:11:17","type":""}]},{"nodeType":"YulAssignment","src":"3796:24:17","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3809:11:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3796:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3866:656:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3880:35:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3899:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3911:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3907:3:17"},"nodeType":"YulFunctionCall","src":"3907:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3895:3:17"},"nodeType":"YulFunctionCall","src":"3895:20:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3884:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3928:49:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3972:4:17"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3942:29:17"},"nodeType":"YulFunctionCall","src":"3942:35:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3932:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3990:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3999:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3994:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4077:172:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4102:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4120:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4125:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4116:3:17"},"nodeType":"YulFunctionCall","src":"4116:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4110:5:17"},"nodeType":"YulFunctionCall","src":"4110:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4095:6:17"},"nodeType":"YulFunctionCall","src":"4095:42:17"},"nodeType":"YulExpressionStatement","src":"4095:42:17"},{"nodeType":"YulAssignment","src":"4154:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4168:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4176:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:17"},"nodeType":"YulFunctionCall","src":"4164:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4154:6:17"}]},{"nodeType":"YulAssignment","src":"4195:40:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4212:9:17"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4223:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4208:3:17"},"nodeType":"YulFunctionCall","src":"4208:27:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4195:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4024:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4027:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4021:2:17"},"nodeType":"YulFunctionCall","src":"4021:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4036:28:17","statements":[{"nodeType":"YulAssignment","src":"4038:24:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4047:1:17"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4050:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:17"},"nodeType":"YulFunctionCall","src":"4043:19:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4038:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4017:3:17","statements":[]},"src":"4013:236:17"},{"body":{"nodeType":"YulBlock","src":"4297:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4315:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4342:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4347:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4338:3:17"},"nodeType":"YulFunctionCall","src":"4338:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4332:5:17"},"nodeType":"YulFunctionCall","src":"4332:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4319:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4382:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4394:9:17"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4421:1:17","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4424:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4417:3:17"},"nodeType":"YulFunctionCall","src":"4417:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4433:3:17","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4413:3:17"},"nodeType":"YulFunctionCall","src":"4413:24:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4443:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4439:3:17"},"nodeType":"YulFunctionCall","src":"4439:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4409:3:17"},"nodeType":"YulFunctionCall","src":"4409:37:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4405:3:17"},"nodeType":"YulFunctionCall","src":"4405:42:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4390:3:17"},"nodeType":"YulFunctionCall","src":"4390:58:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4375:6:17"},"nodeType":"YulFunctionCall","src":"4375:74:17"},"nodeType":"YulExpressionStatement","src":"4375:74:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4268:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4277:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4265:2:17"},"nodeType":"YulFunctionCall","src":"4265:19:17"},"nodeType":"YulIf","src":"4262:201:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4497:1:17","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4500:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4493:3:17"},"nodeType":"YulFunctionCall","src":"4493:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4509:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:17"},"nodeType":"YulFunctionCall","src":"4489:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4476:6:17"},"nodeType":"YulFunctionCall","src":"4476:36:17"},"nodeType":"YulExpressionStatement","src":"4476:36:17"}]},"nodeType":"YulCase","src":"3859:663:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3864:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4539:234:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4553:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4566:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4557:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4602:67:17","statements":[{"nodeType":"YulAssignment","src":"4620:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4639:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4644:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4635:3:17"},"nodeType":"YulFunctionCall","src":"4635:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4629:5:17"},"nodeType":"YulFunctionCall","src":"4629:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4620:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4583:6:17"},"nodeType":"YulIf","src":"4580:89:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4689:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4748:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4755:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4695:52:17"},"nodeType":"YulFunctionCall","src":"4695:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4682:6:17"},"nodeType":"YulFunctionCall","src":"4682:81:17"},"nodeType":"YulExpressionStatement","src":"4682:81:17"}]},"nodeType":"YulCase","src":"4531:242:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3839:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3847:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3836:2:17"},"nodeType":"YulFunctionCall","src":"3836:14:17"},"nodeType":"YulSwitch","src":"3829:944:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3508:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"3514:3:17","type":""}],"src":"3427:1352:17"},{"body":{"nodeType":"YulBlock","src":"4922:706:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4932:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4943:1:17","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"4936:3:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4953:30:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4976:6:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4970:5:17"},"nodeType":"YulFunctionCall","src":"4970:13:17"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"4957:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4992:50:17","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"5032:9:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5006:25:17"},"nodeType":"YulFunctionCall","src":"5006:36:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4996:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5051:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5061:1:17","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5055:2:17","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5112:126:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5133:3:17"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"5142:9:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5157:3:17","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5153:3:17"},"nodeType":"YulFunctionCall","src":"5153:8:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5138:3:17"},"nodeType":"YulFunctionCall","src":"5138:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5126:6:17"},"nodeType":"YulFunctionCall","src":"5126:37:17"},"nodeType":"YulExpressionStatement","src":"5126:37:17"},{"nodeType":"YulAssignment","src":"5176:52:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5187:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5196:6:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5218:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5211:6:17"},"nodeType":"YulFunctionCall","src":"5211:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5204:6:17"},"nodeType":"YulFunctionCall","src":"5204:22:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5192:3:17"},"nodeType":"YulFunctionCall","src":"5192:35:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5183:3:17"},"nodeType":"YulFunctionCall","src":"5183:45:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5176:3:17"}]}]},"nodeType":"YulCase","src":"5105:133:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5110:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"5254:349:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5275:1:17","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"5278:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5268:6:17"},"nodeType":"YulFunctionCall","src":"5268:17:17"},"nodeType":"YulExpressionStatement","src":"5268:17:17"},{"nodeType":"YulVariableDeclaration","src":"5298:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5308:4:17","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5302:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5325:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5350:1:17","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"5353:2:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5340:9:17"},"nodeType":"YulFunctionCall","src":"5340:16:17"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"5329:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5369:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5378:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5373:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5446:111:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5475:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5480:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5471:3:17"},"nodeType":"YulFunctionCall","src":"5471:11:17"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"5490:7:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5484:5:17"},"nodeType":"YulFunctionCall","src":"5484:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5464:6:17"},"nodeType":"YulFunctionCall","src":"5464:35:17"},"nodeType":"YulExpressionStatement","src":"5464:35:17"},{"nodeType":"YulAssignment","src":"5516:27:17","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"5531:7:17"},{"name":"_1","nodeType":"YulIdentifier","src":"5540:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5527:3:17"},"nodeType":"YulFunctionCall","src":"5527:16:17"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"5516:7:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5403:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"5406:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5400:2:17"},"nodeType":"YulFunctionCall","src":"5400:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5414:19:17","statements":[{"nodeType":"YulAssignment","src":"5416:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5425:1:17"},{"name":"_2","nodeType":"YulIdentifier","src":"5428:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:17"},"nodeType":"YulFunctionCall","src":"5421:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5416:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5396:3:17","statements":[]},"src":"5392:165:17"},{"nodeType":"YulAssignment","src":"5570:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5581:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5586:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5577:3:17"},"nodeType":"YulFunctionCall","src":"5577:16:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5570:3:17"}]}]},"nodeType":"YulCase","src":"5247:356:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5252:1:17","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"5082:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"5093:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5078:3:17"},"nodeType":"YulFunctionCall","src":"5078:18:17"},"nodeType":"YulSwitch","src":"5071:532:17"},{"nodeType":"YulAssignment","src":"5612:10:17","value":{"name":"ret","nodeType":"YulIdentifier","src":"5619:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5612:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4898:3:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4903:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4914:3:17","type":""}],"src":"4784:844:17"},{"body":{"nodeType":"YulBlock","src":"5846:276:17","statements":[{"nodeType":"YulAssignment","src":"5856:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5868:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5879:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5864:3:17"},"nodeType":"YulFunctionCall","src":"5864:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5856:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5899:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"5910:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5892:6:17"},"nodeType":"YulFunctionCall","src":"5892:25:17"},"nodeType":"YulExpressionStatement","src":"5892:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5937:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5948:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5933:3:17"},"nodeType":"YulFunctionCall","src":"5933:18:17"},{"name":"value1","nodeType":"YulIdentifier","src":"5953:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5926:6:17"},"nodeType":"YulFunctionCall","src":"5926:34:17"},"nodeType":"YulExpressionStatement","src":"5926:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5980:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5991:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5976:3:17"},"nodeType":"YulFunctionCall","src":"5976:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"5996:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5969:6:17"},"nodeType":"YulFunctionCall","src":"5969:34:17"},"nodeType":"YulExpressionStatement","src":"5969:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6023:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6019:3:17"},"nodeType":"YulFunctionCall","src":"6019:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"6039:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6012:6:17"},"nodeType":"YulFunctionCall","src":"6012:34:17"},"nodeType":"YulExpressionStatement","src":"6012:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6066:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6077:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6062:3:17"},"nodeType":"YulFunctionCall","src":"6062:19:17"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6087:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6103:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6108:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6099:3:17"},"nodeType":"YulFunctionCall","src":"6099:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"6112:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6095:3:17"},"nodeType":"YulFunctionCall","src":"6095:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6083:3:17"},"nodeType":"YulFunctionCall","src":"6083:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6055:6:17"},"nodeType":"YulFunctionCall","src":"6055:61:17"},"nodeType":"YulExpressionStatement","src":"6055:61:17"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5783:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5794:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5802:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5810:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5818:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5826:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5837:4:17","type":""}],"src":"5633:489:17"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        let value_1 := mload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value_1\n        value4 := abi_decode_bool_fromMemory(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040523480156200001257600080fd5b506040516200273d3803806200273d833981016040819052620000359162000296565b8230818189898960006200004a8482620003e4565b506001620000598382620003e4565b5060ff81166080524660a0526200006f6200011f565b60c0525050600680546001600160a01b038086166001600160a01b03199283168117909355600780549186169190921617905560405190915033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505090151560e05261010052506200052e92505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001539190620004b0565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e357600080fd5b81516001600160401b0380821115620002005762000200620001bb565b604051601f8301601f19908116603f011681019082821181831017156200022b576200022b620001bb565b816040528381526020925086838588010111156200024857600080fd5b600091505b838210156200026c57858201830151818301840152908201906200024d565b600093810190920192909252949350505050565b805180151581146200029157600080fd5b919050565b60008060008060008060c08789031215620002b057600080fd5b86516001600160401b0380821115620002c857600080fd5b620002d68a838b01620001d1565b97506020890151915080821115620002ed57600080fd5b50620002fc89828a01620001d1565b955050604087015160ff811681146200031457600080fd5b60608801519094506001600160a01b03811681146200033257600080fd5b9250620003426080880162000280565b915060a087015190509295509295509295565b600181811c908216806200036a57607f821691505b6020821081036200038b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003df57600081815260208120601f850160051c81016020861015620003ba5750805b601f850160051c820191505b81811015620003db57828155600101620003c6565b5050505b505050565b81516001600160401b03811115620004005762000400620001bb565b620004188162000411845462000355565b8462000391565b602080601f831160018114620004505760008415620004375750858301515b600019600386901b1c1916600185901b178555620003db565b600085815260208120601f198616915b82811015620004815788860151825594840194600190910190840162000460565b5085821015620004a05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620004c08162000355565b60018281168015620004db5760018114620004f15762000522565b60ff198416875282151583028701945062000522565b8760005260208060002060005b85811015620005195781548a820152908401908201620004fe565b50505082870194505b50929695505050505050565b60805160a05160c05160e051610100516121a06200059d600039600081816102c101528181610aeb01526112bd0152600081816103bb01528181610a3101528181610b830152818161113f015261120301526000610a0d015260006109d8015260006102fb01526121a06000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80637a8c63b51161012a578063b7009613116100bd578063dd62ed3e1161008c578063ea7ca27611610071578063ea7ca2761461058b578063ed0d0efb146105cf578063f2fde38b146105ef57600080fd5b8063dd62ed3e14610512578063e688747b1461053d57600080fd5b8063b700961314610496578063bf7e214f146104a9578063c53a3985146104c9578063d505accf146104ff57600080fd5b806395d89b41116100f957806395d89b41146104555780639dc29fac1461045d578063a0712d6814610470578063a9059cbb1461048357600080fd5b80637a8c63b5146103b65780637a9e5e4b146103dd5780637ecebe00146103f05780638da5cb5b1461041057600080fd5b8063313ce567116101a25780634b5159da116101715780634b5159da1461035d57806367aff4841461037057806370a0823114610383578063728b952b146103a357600080fd5b8063313ce567146102f65780633644e5151461032f57806340c10f191461033757806342966c681461034a57600080fd5b80630ea9b75b116101de5780630ea9b75b1461029e57806318160ddd146102b3578063239c70ae146102bc57806323b872dd146102e357600080fd5b806306a36aee1461021057806306fdde0314610243578063095ea7b3146102585780630bade8a41461027b575b600080fd5b61023061021e366004611c63565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b61024b610602565b60405161023a9190611c80565b61026b610266366004611cec565b610690565b604051901515815260200161023a565b61026b610289366004611d4d565b600a6020526000908152604090205460ff1681565b6102b16102ac366004611d87565b61070a565b005b61023060025481565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b61026b6102f1366004611dce565b61088e565b61031d7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161023a565b6102306109d4565b6102b1610345366004611cec565b610a2f565b6102b1610358366004611e0f565b610b81565b6102b161036b366004611e28565b610c48565b6102b161037e366004611e5f565b610d72565b610230610391366004611c63565b60036020526000908152604090205481565b6102b16103b1366004611e8d565b610ec3565b61026b7f000000000000000000000000000000000000000000000000000000000000000081565b6102b16103eb366004611c63565b610fd3565b6102306103fe366004611c63565b60056020526000908152604090205481565b6006546104309073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161023a565b61024b611130565b6102b161046b366004611cec565b61113d565b6102b161047e366004611e0f565b611201565b61026b610491366004611cec565b61134f565b61026b6104a4366004611ebb565b6113d4565b6007546104309073ffffffffffffffffffffffffffffffffffffffff1681565b6104306104d7366004611c63565b60086020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102b161050d366004611f02565b61156b565b610230610520366004611e8d565b600460209081526000928352604080842090915290825290205481565b61026b61054b366004611f70565b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600b602052604090205460ff919091161c600116151590565b61026b610599366004611fa3565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260096020526040902054600160ff9092161c16151590565b6102306105dd366004611d4d565b600b6020526000908152604090205481565b6102b16105fd366004611c63565b61188a565b6000805461060f90611fcf565b80601f016020809104026020016040519081016040528092919081815260200182805461063b90611fcf565b80156106885780601f1061065d57610100808354040283529160200191610688565b820191906000526020600020905b81548152906001019060200180831161066b57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106f89086815260200190565b60405180910390a35060015b92915050565b610738336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b6107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b80156107eb577fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b17905561082a565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b15183604051610881911515815260200190565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610922576108f08382612051565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610957908490612051565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109bf9087815260200190565b60405180910390a360019150505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a0a57610a05611aa0565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000015610ae957610a83336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b7f0000000000000000000000000000000000000000000000000000000000000000811115610b73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74604482015260640161079a565b610b7d8282611b3a565b5050565b7f000000000000000000000000000000000000000000000000000000000000000015610c3b57610bd5336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610c3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b610c453382611bb3565b50565b610c76336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610cdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000818152600a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b610da0336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610e06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b8015610e425773ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b179055610e75565b73ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610881911515815260200190565b610ef1336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526008602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b60065473ffffffffffffffffffffffffffffffffffffffff163314806110b657506007546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b69190612064565b6110bf57600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6001805461060f90611fcf565b7f0000000000000000000000000000000000000000000000000000000000000000156111f757611191336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b6111f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b610b7d8282611bb3565b7f0000000000000000000000000000000000000000000000000000000000000000156112bb57611255336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b6112bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b7f0000000000000000000000000000000000000000000000000000000000000000811115611345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74604482015260640161079a565b610c453382611b3a565b33600090815260036020526040812080548391908390611370908490612051565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106f89086815260200190565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526008602052604081205490911680156114cc576040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c49190612064565b9150506109cd565b7fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600a602052604090205460ff168061156257507fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600b602090815260408083205473ffffffffffffffffffffffffffffffffffffffff891684526009909252909120541615155b95945050505050565b428410156115d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161079a565b600060016115e16109d4565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611733573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906117ae57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e4552000000000000000000000000000000000000604482015260640161079a565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6118b8336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b61191e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60075460009073ffffffffffffffffffffffffffffffffffffffff168015801590611a7357506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a739190612064565b80611a98575060065473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611ad29190612081565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254611b4c9190612157565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611be8908490612051565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611ba7565b73ffffffffffffffffffffffffffffffffffffffff81168114610c4557600080fd5b600060208284031215611c7557600080fd5b81356109cd81611c41565b600060208083528351808285015260005b81811015611cad57858101830151858201604001528201611c91565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060408385031215611cff57600080fd5b8235611d0a81611c41565b946020939093013593505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114611d4857600080fd5b919050565b600060208284031215611d5f57600080fd5b6109cd82611d18565b803560ff81168114611d4857600080fd5b8015158114610c4557600080fd5b600080600060608486031215611d9c57600080fd5b611da584611d68565b9250611db360208501611d18565b91506040840135611dc381611d79565b809150509250925092565b600080600060608486031215611de357600080fd5b8335611dee81611c41565b92506020840135611dfe81611c41565b929592945050506040919091013590565b600060208284031215611e2157600080fd5b5035919050565b60008060408385031215611e3b57600080fd5b611e4483611d18565b91506020830135611e5481611d79565b809150509250929050565b600080600060608486031215611e7457600080fd5b8335611e7f81611c41565b9250611db360208501611d68565b60008060408385031215611ea057600080fd5b8235611eab81611c41565b91506020830135611e5481611c41565b600080600060608486031215611ed057600080fd5b8335611edb81611c41565b92506020840135611eeb81611c41565b9150611ef960408501611d18565b90509250925092565b600080600080600080600060e0888a031215611f1d57600080fd5b8735611f2881611c41565b96506020880135611f3881611c41565b95506040880135945060608801359350611f5460808901611d68565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f8357600080fd5b611f8c83611d68565b9150611f9a60208401611d18565b90509250929050565b60008060408385031215611fb657600080fd5b8235611fc181611c41565b9150611f9a60208401611d68565b600181811c90821680611fe357607f821691505b60208210810361201c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561070457610704612022565b60006020828403121561207657600080fd5b81516109cd81611d79565b600080835481600182811c91508083168061209d57607f831692505b602080841082036120d5577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156120e9576001811461211c57612149565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650612149565b60008a81526020902060005b868110156121415781548b820152908501908301612128565b505084890196505b509498975050505050505050565b808201808211156107045761070461202256fea2646970667358221220b76c7ec62b5ecc169e0ff3a686dee12fefe91891e3bd99bd111513209f402f3064736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x273D CODESIZE SUB DUP1 PUSH3 0x273D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x296 JUMP JUMPDEST DUP3 ADDRESS DUP2 DUP2 DUP10 DUP10 DUP10 PUSH1 0x0 PUSH3 0x4A DUP5 DUP3 PUSH3 0x3E4 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x59 DUP4 DUP3 PUSH3 0x3E4 JUMP JUMPDEST POP PUSH1 0xFF DUP2 AND PUSH1 0x80 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x6F PUSH3 0x11F JUMP JUMPDEST PUSH1 0xC0 MSTORE POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0xE0 MSTORE PUSH2 0x100 MSTORE POP PUSH3 0x52E SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x153 SWAP2 SWAP1 PUSH3 0x4B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x200 JUMPI PUSH3 0x200 PUSH3 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x22B JUMPI PUSH3 0x22B PUSH3 0x1BB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x26C JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x24D JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2D6 DUP11 DUP4 DUP12 ADD PUSH3 0x1D1 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2FC DUP10 DUP3 DUP11 ADD PUSH3 0x1D1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH3 0x342 PUSH1 0x80 DUP9 ADD PUSH3 0x280 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x36A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x38B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3DF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3BA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3DB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3C6 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x400 JUMPI PUSH3 0x400 PUSH3 0x1BB JUMP JUMPDEST PUSH3 0x418 DUP2 PUSH3 0x411 DUP5 SLOAD PUSH3 0x355 JUMP JUMPDEST DUP5 PUSH3 0x391 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x450 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x437 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3DB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x481 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x460 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4A0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH3 0x4C0 DUP2 PUSH3 0x355 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH3 0x4DB JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x4F1 JUMPI PUSH3 0x522 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH3 0x522 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x519 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH3 0x4FE JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x21A0 PUSH3 0x59D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2C1 ADD MSTORE DUP2 DUP2 PUSH2 0xAEB ADD MSTORE PUSH2 0x12BD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3BB ADD MSTORE DUP2 DUP2 PUSH2 0xA31 ADD MSTORE DUP2 DUP2 PUSH2 0xB83 ADD MSTORE DUP2 DUP2 PUSH2 0x113F ADD MSTORE PUSH2 0x1203 ADD MSTORE PUSH1 0x0 PUSH2 0xA0D ADD MSTORE PUSH1 0x0 PUSH2 0x9D8 ADD MSTORE PUSH1 0x0 PUSH2 0x2FB ADD MSTORE PUSH2 0x21A0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A8C63B5 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0xB7009613 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xEA7CA276 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEA7CA276 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xED0D0EFB EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xE688747B EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB7009613 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xC53A3985 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A8C63B5 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x4B5159DA GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4B5159DA EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x67AFF484 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x728B952B EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEA9B75B GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xEA9B75B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x239C70AE EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A36AEE EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xBADE8A4 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x26B PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1D87 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCE JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH2 0x31D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x230 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x26B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x430 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x24B PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x134F JUMP JUMPDEST PUSH2 0x26B PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x430 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x430 PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x156B JUMP JUMPDEST PUSH2 0x230 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F70 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x599 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SHR AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x188A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x60F SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x63B SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x688 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x65D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x688 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x66B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x6F8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x738 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL OR SWAP1 SSTORE PUSH2 0x82A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 PUSH1 0xFF AND PUSH32 0xBFE16B2C35CE23DFD1AB0E7B5D086A10060C9B52D1574E1680C881B3B3A2B151 DUP4 PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x922 JUMPI PUSH2 0x8F0 DUP4 DUP3 PUSH2 0x2051 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x957 SWAP1 DUP5 SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x9BF SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xA0A JUMPI PUSH2 0xA05 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xAE9 JUMPI PUSH2 0xA83 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xB7D DUP3 DUP3 PUSH2 0x1B3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xC3B JUMPI PUSH2 0xBD5 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xC45 CALLER DUP3 PUSH2 0x1BB3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC76 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xCDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x36D28126BEF21A4F3765D7FCB7C45CEAD463AE4C41094EF3B771EDE598544103 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xDA0 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE42 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL OR SWAP1 SSTORE PUSH2 0xE75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C9BDD0C8E073EB5EDA2250B18D8E5121FF27B62064FBEEEED4869BB99BC5BF2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xEF1 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xA4908E11A5F895B13D51526C331AC93CDD30E59772361C5D07874EB36BFF2065 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x10B6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x10BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x60F SWAP1 PUSH2 0x1FCF JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x1191 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xB7D DUP3 DUP3 PUSH2 0x1BB3 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x12BB JUMPI PUSH2 0x1255 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x12BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x1345 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xC45 CALLER DUP3 PUSH2 0x1B3A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x1370 SWAP1 DUP5 SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x6F8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9CD JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1562 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO ISZERO JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x15E1 PUSH2 0x9D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP14 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1733 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17AE JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18B8 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x191E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A73 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A73 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST DUP1 PUSH2 0x1A98 JUMPI POP PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1AD2 SWAP2 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B4C SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1BE8 SWAP1 DUP5 SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x1BA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9CD DUP2 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CAD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1C91 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D0A DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CD DUP3 PUSH2 0x1D18 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA5 DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DB3 PUSH1 0x20 DUP6 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1DC3 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1DEE DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1DFE DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E44 DUP4 PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E54 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E7F DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DB3 PUSH1 0x20 DUP6 ADD PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EAB DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E54 DUP2 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1EDB DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1EEB DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 PUSH1 0x40 DUP6 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1F28 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1F54 PUSH1 0x80 DUP10 ADD PUSH2 0x1D68 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8C DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9A PUSH1 0x20 DUP5 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FC1 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9A PUSH1 0x20 DUP5 ADD PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x201C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9CD DUP2 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x209D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x20D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x20E9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x211C JUMPI PUSH2 0x2149 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP7 AND DUP10 MSTORE DUP5 ISZERO ISZERO DUP6 MUL DUP10 ADD SWAP7 POP PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2141 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2128 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x2022 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 PUSH13 0x7EC62B5ECC169E0FF3A686DEE1 0x2F 0xEF 0xE9 XOR SWAP2 0xE3 0xBD SWAP10 0xBD GT ISZERO SGT KECCAK256 SWAP16 BLOCKHASH 0x2F ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"254:1501:12:-:0;;;403:395;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;657:5;690:4;657:5;690:4;605;611:6;619:8;2094:4:16;:12;605:4:12;2094::16;:12;:::i;:::-;-1:-1:-1;2116:6:16;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:16;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;;682:5:14;:14;;-1:-1:-1;;;;;682:14:14;;;-1:-1:-1;;;;;;682:14:14;;;;;;;;706:9;:22;;;;;;;;;;;;744:40;;682:14;;-1:-1:-1;765:10:14;;744:40;;682:5;;744:40;799;;-1:-1:-1;;;;;799:40:14;;;816:10;;799:40;;;;;-1:-1:-1;;;;713:38:12;::::2;;;::::0;761:30:::2;::::0;-1:-1:-1;254:1501:12;;-1:-1:-1;;;254:1501:12;5510:446:16;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;5892:25:17;;;;5933:18;;5926:34;;;;5833:14:16;5976:18:17;;;5969:34;5869:13:16;6019:18:17;;;6012:34;5912:4:16;6062:19:17;;;6055:61;5864:19;;5640:295:16;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:17:o;991:164::-;1067:13;;1116;;1109:21;1099:32;;1089:60;;1145:1;1142;1135:12;1089:60;991:164;;;:::o;1160:1030::-;1290:6;1298;1306;1314;1322;1330;1383:3;1371:9;1362:7;1358:23;1354:33;1351:53;;;1400:1;1397;1390:12;1351:53;1427:16;;-1:-1:-1;;;;;1492:14:17;;;1489:34;;;1519:1;1516;1509:12;1489:34;1542:61;1595:7;1586:6;1575:9;1571:22;1542:61;:::i;:::-;1532:71;;1649:2;1638:9;1634:18;1628:25;1612:41;;1678:2;1668:8;1665:16;1662:36;;;1694:1;1691;1684:12;1662:36;;1717:63;1772:7;1761:8;1750:9;1746:24;1717:63;:::i;:::-;1707:73;;;1823:2;1812:9;1808:18;1802:25;1867:4;1860:5;1856:16;1849:5;1846:27;1836:55;;1887:1;1884;1877:12;1836:55;1960:2;1945:18;;1939:25;1910:5;;-1:-1:-1;;;;;;1995:33:17;;1983:46;;1973:74;;2043:1;2040;2033:12;1973:74;2066:7;-1:-1:-1;2092:47:17;2134:3;2119:19;;2092:47;:::i;:::-;2082:57;;2179:3;2168:9;2164:19;2158:26;2148:36;;1160:1030;;;;;;;;:::o;2195:380::-;2274:1;2270:12;;;;2317;;;2338:61;;2392:4;2384:6;2380:17;2370:27;;2338:61;2445:2;2437:6;2434:14;2414:18;2411:38;2408:161;;2491:10;2486:3;2482:20;2479:1;2472:31;2526:4;2523:1;2516:15;2554:4;2551:1;2544:15;2408:161;;2195:380;;;:::o;2706:545::-;2808:2;2803:3;2800:11;2797:448;;;2844:1;2869:5;2865:2;2858:17;2914:4;2910:2;2900:19;2984:2;2972:10;2968:19;2965:1;2961:27;2955:4;2951:38;3020:4;3008:10;3005:20;3002:47;;;-1:-1:-1;3043:4:17;3002:47;3098:2;3093:3;3089:12;3086:1;3082:20;3076:4;3072:31;3062:41;;3153:82;3171:2;3164:5;3161:13;3153:82;;;3216:17;;;3197:1;3186:13;3153:82;;;3157:3;;;2797:448;2706:545;;;:::o;3427:1352::-;3547:10;;-1:-1:-1;;;;;3569:30:17;;3566:56;;;3602:18;;:::i;:::-;3631:97;3721:6;3681:38;3713:4;3707:11;3681:38;:::i;:::-;3675:4;3631:97;:::i;:::-;3783:4;;3847:2;3836:14;;3864:1;3859:663;;;;4566:1;4583:6;4580:89;;;-1:-1:-1;4635:19:17;;;4629:26;4580:89;-1:-1:-1;;3384:1:17;3380:11;;;3376:24;3372:29;3362:40;3408:1;3404:11;;;3359:57;4682:81;;3829:944;;3859:663;2653:1;2646:14;;;2690:4;2677:18;;-1:-1:-1;;3895:20:17;;;4013:236;4027:7;4024:1;4021:14;4013:236;;;4116:19;;;4110:26;4095:42;;4208:27;;;;4176:1;4164:14;;;;4043:19;;4013:236;;;4017:3;4277:6;4268:7;4265:19;4262:201;;;4338:19;;;4332:26;-1:-1:-1;;4421:1:17;4417:14;;;4433:3;4413:24;4409:37;4405:42;4390:58;4375:74;;4262:201;-1:-1:-1;;;;;4509:1:17;4493:14;;;4489:22;4476:36;;-1:-1:-1;3427:1352:17:o;4784:844::-;4914:3;4943:1;4976:6;4970:13;5006:36;5032:9;5006:36;:::i;:::-;5061:1;5078:18;;;5105:133;;;;5252:1;5247:356;;;;5071:532;;5105:133;-1:-1:-1;;5138:24:17;;5126:37;;5211:14;;5204:22;5192:35;;5183:45;;;-1:-1:-1;5105:133:17;;5247:356;5278:6;5275:1;5268:17;5308:4;5353:2;5350:1;5340:16;5378:1;5392:165;5406:6;5403:1;5400:13;5392:165;;;5484:14;;5471:11;;;5464:35;5527:16;;;;5421:10;;5392:165;;;5396:3;;;5586:6;5581:3;5577:16;5570:23;;5071:532;-1:-1:-1;5619:3:17;;4784:844;-1:-1:-1;;;;;;4784:844:17:o;5633:489::-;254:1501:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_3383":{"entryPoint":2516,"id":3383,"parameterSlots":0,"returnSlots":1},"@_burn_3469":{"entryPoint":7091,"id":3469,"parameterSlots":2,"returnSlots":0},"@_mint_3441":{"entryPoint":6970,"id":3441,"parameterSlots":2,"returnSlots":0},"@allowance_3119":{"entryPoint":null,"id":3119,"parameterSlots":0,"returnSlots":0},"@approve_3187":{"entryPoint":1680,"id":3187,"parameterSlots":2,"returnSlots":1},"@authority_2626":{"entryPoint":null,"id":2626,"parameterSlots":0,"returnSlots":0},"@balanceOf_3113":{"entryPoint":null,"id":3113,"parameterSlots":0,"returnSlots":0},"@burn_2270":{"entryPoint":2945,"id":2270,"parameterSlots":1,"returnSlots":0},"@burn_2285":{"entryPoint":4413,"id":2285,"parameterSlots":2,"returnSlots":0},"@canCall_2948":{"entryPoint":5076,"id":2948,"parameterSlots":3,"returnSlots":1},"@computeDomainSeparator_3413":{"entryPoint":6816,"id":3413,"parameterSlots":0,"returnSlots":1},"@decimals_3107":{"entryPoint":null,"id":3107,"parameterSlots":0,"returnSlots":0},"@doesRoleHaveCapability_2894":{"entryPoint":null,"id":2894,"parameterSlots":2,"returnSlots":1},"@doesUserHaveRole_2870":{"entryPoint":null,"id":2870,"parameterSlots":2,"returnSlots":1},"@getRolesWithCapability_2846":{"entryPoint":null,"id":2846,"parameterSlots":0,"returnSlots":0},"@getTargetCustomAuthority_2834":{"entryPoint":null,"id":2834,"parameterSlots":0,"returnSlots":0},"@getUserRoles_2838":{"entryPoint":null,"id":2838,"parameterSlots":0,"returnSlots":0},"@isAuthorized_2709":{"entryPoint":6543,"id":2709,"parameterSlots":2,"returnSlots":1},"@isCapabilityPublic_2842":{"entryPoint":null,"id":2842,"parameterSlots":0,"returnSlots":0},"@isCompetitionMode_2153":{"entryPoint":null,"id":2153,"parameterSlots":0,"returnSlots":0},"@maxMintAmount_2155":{"entryPoint":null,"id":2155,"parameterSlots":0,"returnSlots":0},"@mint_2234":{"entryPoint":4609,"id":2234,"parameterSlots":1,"returnSlots":0},"@mint_2256":{"entryPoint":2607,"id":2256,"parameterSlots":2,"returnSlots":0},"@name_3103":{"entryPoint":1538,"id":3103,"parameterSlots":0,"returnSlots":0},"@nonces_3127":{"entryPoint":null,"id":3127,"parameterSlots":0,"returnSlots":0},"@owner_2623":{"entryPoint":null,"id":2623,"parameterSlots":0,"returnSlots":0},"@permit_3368":{"entryPoint":5483,"id":3368,"parameterSlots":7,"returnSlots":0},"@setAuthority_2745":{"entryPoint":4051,"id":2745,"parameterSlots":1,"returnSlots":0},"@setPublicCapability_2991":{"entryPoint":3144,"id":2991,"parameterSlots":2,"returnSlots":0},"@setRoleCapability_3081":{"entryPoint":1802,"id":3081,"parameterSlots":3,"returnSlots":0},"@setTargetCustomAuthority_2970":{"entryPoint":3779,"id":2970,"parameterSlots":2,"returnSlots":0},"@setUserRole_3036":{"entryPoint":3442,"id":3036,"parameterSlots":3,"returnSlots":0},"@symbol_3105":{"entryPoint":4400,"id":3105,"parameterSlots":0,"returnSlots":0},"@totalSupply_3109":{"entryPoint":null,"id":3109,"parameterSlots":0,"returnSlots":0},"@transferFrom_3281":{"entryPoint":2190,"id":3281,"parameterSlots":3,"returnSlots":1},"@transferOwnership_2763":{"entryPoint":6282,"id":2763,"parameterSlots":1,"returnSlots":0},"@transfer_3220":{"entryPoint":4943,"id":3220,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4":{"entryPoint":7448,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_bytes4":{"entryPoint":7867,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7630,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7938,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_contract$_Authority_$2777":{"entryPoint":7821,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7404,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint8":{"entryPoint":8099,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint8t_bool":{"entryPoint":7775,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":8292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":7501,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4t_bool":{"entryPoint":7720,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_Authority_$2777":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8t_bytes4":{"entryPoint":8048,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8t_bytes4t_bool":{"entryPoint":7559,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint8":{"entryPoint":7528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_bytes_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8535,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8273,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8143,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8226,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":7233,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":7545,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14687:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:17","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:17"},"nodeType":"YulFunctionCall","src":"148:12:17"},"nodeType":"YulExpressionStatement","src":"148:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:17"},"nodeType":"YulFunctionCall","src":"89:54:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:17"},"nodeType":"YulFunctionCall","src":"79:65:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:17"},"nodeType":"YulFunctionCall","src":"72:73:17"},"nodeType":"YulIf","src":"69:93:17"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:17","type":""}],"src":"14:154:17"},{"body":{"nodeType":"YulBlock","src":"243:177:17","statements":[{"body":{"nodeType":"YulBlock","src":"289:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"301:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"291:6:17"},"nodeType":"YulFunctionCall","src":"291:12:17"},"nodeType":"YulExpressionStatement","src":"291:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"264:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"273:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"260:3:17"},"nodeType":"YulFunctionCall","src":"260:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"285:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"256:3:17"},"nodeType":"YulFunctionCall","src":"256:32:17"},"nodeType":"YulIf","src":"253:52:17"},{"nodeType":"YulVariableDeclaration","src":"314:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"340:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"327:12:17"},"nodeType":"YulFunctionCall","src":"327:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"318:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"384:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"359:24:17"},"nodeType":"YulFunctionCall","src":"359:31:17"},"nodeType":"YulExpressionStatement","src":"359:31:17"},{"nodeType":"YulAssignment","src":"399:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"409:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"399:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"209:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"220:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"232:6:17","type":""}],"src":"173:247:17"},{"body":{"nodeType":"YulBlock","src":"526:76:17","statements":[{"nodeType":"YulAssignment","src":"536:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"559:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"544:3:17"},"nodeType":"YulFunctionCall","src":"544:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"536:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"578:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"589:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"571:6:17"},"nodeType":"YulFunctionCall","src":"571:25:17"},"nodeType":"YulExpressionStatement","src":"571:25:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"495:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"506:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"517:4:17","type":""}],"src":"425:177:17"},{"body":{"nodeType":"YulBlock","src":"728:486:17","statements":[{"nodeType":"YulVariableDeclaration","src":"738:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"748:2:17","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"742:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"766:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"777:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"759:6:17"},"nodeType":"YulFunctionCall","src":"759:21:17"},"nodeType":"YulExpressionStatement","src":"759:21:17"},{"nodeType":"YulVariableDeclaration","src":"789:27:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"809:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"803:5:17"},"nodeType":"YulFunctionCall","src":"803:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"793:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"836:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"832:3:17"},"nodeType":"YulFunctionCall","src":"832:18:17"},{"name":"length","nodeType":"YulIdentifier","src":"852:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"825:6:17"},"nodeType":"YulFunctionCall","src":"825:34:17"},"nodeType":"YulExpressionStatement","src":"825:34:17"},{"nodeType":"YulVariableDeclaration","src":"868:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"877:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"872:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"937:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"966:9:17"},{"name":"i","nodeType":"YulIdentifier","src":"977:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"962:3:17"},"nodeType":"YulFunctionCall","src":"962:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"958:3:17"},"nodeType":"YulFunctionCall","src":"958:26:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1000:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"1008:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:17"},"nodeType":"YulFunctionCall","src":"996:14:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1012:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"992:3:17"},"nodeType":"YulFunctionCall","src":"992:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"986:5:17"},"nodeType":"YulFunctionCall","src":"986:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"951:6:17"},"nodeType":"YulFunctionCall","src":"951:66:17"},"nodeType":"YulExpressionStatement","src":"951:66:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"898:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"901:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"895:2:17"},"nodeType":"YulFunctionCall","src":"895:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"909:19:17","statements":[{"nodeType":"YulAssignment","src":"911:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"920:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"923:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:17"},"nodeType":"YulFunctionCall","src":"916:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"911:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"891:3:17","statements":[]},"src":"887:140:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1051:9:17"},{"name":"length","nodeType":"YulIdentifier","src":"1062:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:17"},"nodeType":"YulFunctionCall","src":"1047:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"1071:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:17"},"nodeType":"YulFunctionCall","src":"1043:31:17"},{"kind":"number","nodeType":"YulLiteral","src":"1076:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1036:6:17"},"nodeType":"YulFunctionCall","src":"1036:42:17"},"nodeType":"YulExpressionStatement","src":"1036:42:17"},{"nodeType":"YulAssignment","src":"1087:121:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1122:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1130:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:17"},"nodeType":"YulFunctionCall","src":"1118:15:17"},{"kind":"number","nodeType":"YulLiteral","src":"1135:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1114:3:17"},"nodeType":"YulFunctionCall","src":"1114:88:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:17"},"nodeType":"YulFunctionCall","src":"1099:104:17"},{"kind":"number","nodeType":"YulLiteral","src":"1205:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:17"},"nodeType":"YulFunctionCall","src":"1095:113:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1087:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"697:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"708:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"719:4:17","type":""}],"src":"607:607:17"},{"body":{"nodeType":"YulBlock","src":"1306:228:17","statements":[{"body":{"nodeType":"YulBlock","src":"1352:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1361:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1364:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1354:6:17"},"nodeType":"YulFunctionCall","src":"1354:12:17"},"nodeType":"YulExpressionStatement","src":"1354:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1336:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1323:3:17"},"nodeType":"YulFunctionCall","src":"1323:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1348:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1319:3:17"},"nodeType":"YulFunctionCall","src":"1319:32:17"},"nodeType":"YulIf","src":"1316:52:17"},{"nodeType":"YulVariableDeclaration","src":"1377:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1390:12:17"},"nodeType":"YulFunctionCall","src":"1390:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1381:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1422:24:17"},"nodeType":"YulFunctionCall","src":"1422:31:17"},"nodeType":"YulExpressionStatement","src":"1422:31:17"},{"nodeType":"YulAssignment","src":"1462:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1472:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1462:6:17"}]},{"nodeType":"YulAssignment","src":"1486:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:17"},"nodeType":"YulFunctionCall","src":"1509:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1496:12:17"},"nodeType":"YulFunctionCall","src":"1496:32:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1486:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1264:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1275:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1287:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1295:6:17","type":""}],"src":"1219:315:17"},{"body":{"nodeType":"YulBlock","src":"1634:92:17","statements":[{"nodeType":"YulAssignment","src":"1644:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:17"},"nodeType":"YulFunctionCall","src":"1652:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1711:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:17"},"nodeType":"YulFunctionCall","src":"1704:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1697:6:17"},"nodeType":"YulFunctionCall","src":"1697:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:17"},"nodeType":"YulFunctionCall","src":"1679:41:17"},"nodeType":"YulExpressionStatement","src":"1679:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:17","type":""}],"src":"1539:187:17"},{"body":{"nodeType":"YulBlock","src":"1779:171:17","statements":[{"nodeType":"YulAssignment","src":"1789:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1811:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1798:12:17"},"nodeType":"YulFunctionCall","src":"1798:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1789:5:17"}]},{"body":{"nodeType":"YulBlock","src":"1928:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1937:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1940:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1930:6:17"},"nodeType":"YulFunctionCall","src":"1930:12:17"},"nodeType":"YulExpressionStatement","src":"1930:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1840:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1858:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1847:3:17"},"nodeType":"YulFunctionCall","src":"1847:78:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1837:2:17"},"nodeType":"YulFunctionCall","src":"1837:89:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1830:6:17"},"nodeType":"YulFunctionCall","src":"1830:97:17"},"nodeType":"YulIf","src":"1827:117:17"}]},"name":"abi_decode_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1758:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1769:5:17","type":""}],"src":"1731:219:17"},{"body":{"nodeType":"YulBlock","src":"2024:115:17","statements":[{"body":{"nodeType":"YulBlock","src":"2070:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2079:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2082:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2072:6:17"},"nodeType":"YulFunctionCall","src":"2072:12:17"},"nodeType":"YulExpressionStatement","src":"2072:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2045:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2054:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2041:3:17"},"nodeType":"YulFunctionCall","src":"2041:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2066:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2037:3:17"},"nodeType":"YulFunctionCall","src":"2037:32:17"},"nodeType":"YulIf","src":"2034:52:17"},{"nodeType":"YulAssignment","src":"2095:38:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"2105:17:17"},"nodeType":"YulFunctionCall","src":"2105:28:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2095:6:17"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1990:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2001:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2013:6:17","type":""}],"src":"1955:184:17"},{"body":{"nodeType":"YulBlock","src":"2191:109:17","statements":[{"nodeType":"YulAssignment","src":"2201:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2223:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2210:12:17"},"nodeType":"YulFunctionCall","src":"2210:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2201:5:17"}]},{"body":{"nodeType":"YulBlock","src":"2278:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2290:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2280:6:17"},"nodeType":"YulFunctionCall","src":"2280:12:17"},"nodeType":"YulExpressionStatement","src":"2280:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2252:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2263:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2270:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2259:3:17"},"nodeType":"YulFunctionCall","src":"2259:16:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2249:2:17"},"nodeType":"YulFunctionCall","src":"2249:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2242:6:17"},"nodeType":"YulFunctionCall","src":"2242:35:17"},"nodeType":"YulIf","src":"2239:55:17"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2170:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2181:5:17","type":""}],"src":"2144:156:17"},{"body":{"nodeType":"YulBlock","src":"2347:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"2401:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2410:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2413:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2403:6:17"},"nodeType":"YulFunctionCall","src":"2403:12:17"},"nodeType":"YulExpressionStatement","src":"2403:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2370:5:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2391:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2384:6:17"},"nodeType":"YulFunctionCall","src":"2384:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2377:6:17"},"nodeType":"YulFunctionCall","src":"2377:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2367:2:17"},"nodeType":"YulFunctionCall","src":"2367:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2360:6:17"},"nodeType":"YulFunctionCall","src":"2360:40:17"},"nodeType":"YulIf","src":"2357:60:17"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2336:5:17","type":""}],"src":"2305:118:17"},{"body":{"nodeType":"YulBlock","src":"2526:285:17","statements":[{"body":{"nodeType":"YulBlock","src":"2572:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2581:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2584:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2574:6:17"},"nodeType":"YulFunctionCall","src":"2574:12:17"},"nodeType":"YulExpressionStatement","src":"2574:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2547:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2556:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2543:3:17"},"nodeType":"YulFunctionCall","src":"2543:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2539:3:17"},"nodeType":"YulFunctionCall","src":"2539:32:17"},"nodeType":"YulIf","src":"2536:52:17"},{"nodeType":"YulAssignment","src":"2597:37:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2624:9:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"2607:16:17"},"nodeType":"YulFunctionCall","src":"2607:27:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:17"}]},{"nodeType":"YulAssignment","src":"2643:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2686:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:17"},"nodeType":"YulFunctionCall","src":"2671:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"2653:17:17"},"nodeType":"YulFunctionCall","src":"2653:37:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2643:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2699:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:17"},"nodeType":"YulFunctionCall","src":"2725:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2712:12:17"},"nodeType":"YulFunctionCall","src":"2712:32:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2703:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2775:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2753:21:17"},"nodeType":"YulFunctionCall","src":"2753:28:17"},"nodeType":"YulExpressionStatement","src":"2753:28:17"},{"nodeType":"YulAssignment","src":"2790:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2800:5:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2790:6:17"}]}]},"name":"abi_decode_tuple_t_uint8t_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2476:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2487:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2499:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2507:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2515:6:17","type":""}],"src":"2428:383:17"},{"body":{"nodeType":"YulBlock","src":"2917:76:17","statements":[{"nodeType":"YulAssignment","src":"2927:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:17"},"nodeType":"YulFunctionCall","src":"2935:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2927:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"2980:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2962:6:17"},"nodeType":"YulFunctionCall","src":"2962:25:17"},"nodeType":"YulExpressionStatement","src":"2962:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2886:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2897:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2908:4:17","type":""}],"src":"2816:177:17"},{"body":{"nodeType":"YulBlock","src":"3102:352:17","statements":[{"body":{"nodeType":"YulBlock","src":"3148:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3157:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3160:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3150:6:17"},"nodeType":"YulFunctionCall","src":"3150:12:17"},"nodeType":"YulExpressionStatement","src":"3150:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3123:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3132:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3119:3:17"},"nodeType":"YulFunctionCall","src":"3119:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3144:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3115:3:17"},"nodeType":"YulFunctionCall","src":"3115:32:17"},"nodeType":"YulIf","src":"3112:52:17"},{"nodeType":"YulVariableDeclaration","src":"3173:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3199:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3186:12:17"},"nodeType":"YulFunctionCall","src":"3186:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3177:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3243:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3218:24:17"},"nodeType":"YulFunctionCall","src":"3218:31:17"},"nodeType":"YulExpressionStatement","src":"3218:31:17"},{"nodeType":"YulAssignment","src":"3258:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3268:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3258:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3282:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3325:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:17"},"nodeType":"YulFunctionCall","src":"3310:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3297:12:17"},"nodeType":"YulFunctionCall","src":"3297:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3286:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3363:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3338:24:17"},"nodeType":"YulFunctionCall","src":"3338:33:17"},"nodeType":"YulExpressionStatement","src":"3338:33:17"},{"nodeType":"YulAssignment","src":"3380:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3390:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3380:6:17"}]},{"nodeType":"YulAssignment","src":"3406:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3433:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3444:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3429:3:17"},"nodeType":"YulFunctionCall","src":"3429:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3416:12:17"},"nodeType":"YulFunctionCall","src":"3416:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3406:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3052:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3063:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3075:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3083:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3091:6:17","type":""}],"src":"2998:456:17"},{"body":{"nodeType":"YulBlock","src":"3556:87:17","statements":[{"nodeType":"YulAssignment","src":"3566:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3589:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:17"},"nodeType":"YulFunctionCall","src":"3574:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3566:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3608:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3623:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3631:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3619:3:17"},"nodeType":"YulFunctionCall","src":"3619:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3601:6:17"},"nodeType":"YulFunctionCall","src":"3601:36:17"},"nodeType":"YulExpressionStatement","src":"3601:36:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3536:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3547:4:17","type":""}],"src":"3459:184:17"},{"body":{"nodeType":"YulBlock","src":"3718:110:17","statements":[{"body":{"nodeType":"YulBlock","src":"3764:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3773:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3776:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3766:6:17"},"nodeType":"YulFunctionCall","src":"3766:12:17"},"nodeType":"YulExpressionStatement","src":"3766:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3739:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3748:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3735:3:17"},"nodeType":"YulFunctionCall","src":"3735:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3760:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3731:3:17"},"nodeType":"YulFunctionCall","src":"3731:32:17"},"nodeType":"YulIf","src":"3728:52:17"},{"nodeType":"YulAssignment","src":"3789:33:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3812:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3799:12:17"},"nodeType":"YulFunctionCall","src":"3799:23:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3789:6:17"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3684:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3695:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3707:6:17","type":""}],"src":"3648:180:17"},{"body":{"nodeType":"YulBlock","src":"3916:230:17","statements":[{"body":{"nodeType":"YulBlock","src":"3962:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:17"},"nodeType":"YulFunctionCall","src":"3964:12:17"},"nodeType":"YulExpressionStatement","src":"3964:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3937:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3933:3:17"},"nodeType":"YulFunctionCall","src":"3933:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3929:3:17"},"nodeType":"YulFunctionCall","src":"3929:32:17"},"nodeType":"YulIf","src":"3926:52:17"},{"nodeType":"YulAssignment","src":"3987:38:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4015:9:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"3997:17:17"},"nodeType":"YulFunctionCall","src":"3997:28:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3987:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4034:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4064:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4075:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:17"},"nodeType":"YulFunctionCall","src":"4060:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4047:12:17"},"nodeType":"YulFunctionCall","src":"4047:32:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4038:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4110:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4088:21:17"},"nodeType":"YulFunctionCall","src":"4088:28:17"},"nodeType":"YulExpressionStatement","src":"4088:28:17"},{"nodeType":"YulAssignment","src":"4125:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4135:5:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4125:6:17"}]}]},"name":"abi_decode_tuple_t_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3874:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3885:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3897:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3905:6:17","type":""}],"src":"3833:313:17"},{"body":{"nodeType":"YulBlock","src":"4250:353:17","statements":[{"body":{"nodeType":"YulBlock","src":"4296:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4305:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4308:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4298:6:17"},"nodeType":"YulFunctionCall","src":"4298:12:17"},"nodeType":"YulExpressionStatement","src":"4298:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4271:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4280:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4267:3:17"},"nodeType":"YulFunctionCall","src":"4267:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4292:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4263:3:17"},"nodeType":"YulFunctionCall","src":"4263:32:17"},"nodeType":"YulIf","src":"4260:52:17"},{"nodeType":"YulVariableDeclaration","src":"4321:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4347:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4334:12:17"},"nodeType":"YulFunctionCall","src":"4334:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4325:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4391:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4366:24:17"},"nodeType":"YulFunctionCall","src":"4366:31:17"},"nodeType":"YulExpressionStatement","src":"4366:31:17"},{"nodeType":"YulAssignment","src":"4406:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4416:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4406:6:17"}]},{"nodeType":"YulAssignment","src":"4430:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4461:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4472:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4457:3:17"},"nodeType":"YulFunctionCall","src":"4457:18:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"4440:16:17"},"nodeType":"YulFunctionCall","src":"4440:36:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4430:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4485:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4517:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4528:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4513:3:17"},"nodeType":"YulFunctionCall","src":"4513:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4500:12:17"},"nodeType":"YulFunctionCall","src":"4500:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4489:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4563:7:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4541:21:17"},"nodeType":"YulFunctionCall","src":"4541:30:17"},"nodeType":"YulExpressionStatement","src":"4541:30:17"},{"nodeType":"YulAssignment","src":"4580:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4590:7:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4580:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint8t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4200:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4211:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4223:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4231:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4239:6:17","type":""}],"src":"4151:452:17"},{"body":{"nodeType":"YulBlock","src":"4713:301:17","statements":[{"body":{"nodeType":"YulBlock","src":"4759:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4768:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4771:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4761:6:17"},"nodeType":"YulFunctionCall","src":"4761:12:17"},"nodeType":"YulExpressionStatement","src":"4761:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4734:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4743:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4730:3:17"},"nodeType":"YulFunctionCall","src":"4730:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4755:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4726:3:17"},"nodeType":"YulFunctionCall","src":"4726:32:17"},"nodeType":"YulIf","src":"4723:52:17"},{"nodeType":"YulVariableDeclaration","src":"4784:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4810:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4797:12:17"},"nodeType":"YulFunctionCall","src":"4797:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4788:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4854:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4829:24:17"},"nodeType":"YulFunctionCall","src":"4829:31:17"},"nodeType":"YulExpressionStatement","src":"4829:31:17"},{"nodeType":"YulAssignment","src":"4869:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4879:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4869:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4893:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4925:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4936:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4921:3:17"},"nodeType":"YulFunctionCall","src":"4921:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4908:12:17"},"nodeType":"YulFunctionCall","src":"4908:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4897:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4974:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4949:24:17"},"nodeType":"YulFunctionCall","src":"4949:33:17"},"nodeType":"YulExpressionStatement","src":"4949:33:17"},{"nodeType":"YulAssignment","src":"4991:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5001:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4991:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_contract$_Authority_$2777","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4671:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4682:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4694:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4702:6:17","type":""}],"src":"4608:406:17"},{"body":{"nodeType":"YulBlock","src":"5107:177:17","statements":[{"body":{"nodeType":"YulBlock","src":"5153:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5162:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5165:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5155:6:17"},"nodeType":"YulFunctionCall","src":"5155:12:17"},"nodeType":"YulExpressionStatement","src":"5155:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5128:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5124:3:17"},"nodeType":"YulFunctionCall","src":"5124:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5149:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5120:3:17"},"nodeType":"YulFunctionCall","src":"5120:32:17"},"nodeType":"YulIf","src":"5117:52:17"},{"nodeType":"YulVariableDeclaration","src":"5178:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5204:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5191:12:17"},"nodeType":"YulFunctionCall","src":"5191:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5182:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5248:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5223:24:17"},"nodeType":"YulFunctionCall","src":"5223:31:17"},"nodeType":"YulExpressionStatement","src":"5223:31:17"},{"nodeType":"YulAssignment","src":"5263:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5273:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5263:6:17"}]}]},"name":"abi_decode_tuple_t_contract$_Authority_$2777","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5073:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5084:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5096:6:17","type":""}],"src":"5019:265:17"},{"body":{"nodeType":"YulBlock","src":"5390:125:17","statements":[{"nodeType":"YulAssignment","src":"5400:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5412:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5423:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:17"},"nodeType":"YulFunctionCall","src":"5408:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5400:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5457:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5465:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5453:3:17"},"nodeType":"YulFunctionCall","src":"5453:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5435:6:17"},"nodeType":"YulFunctionCall","src":"5435:74:17"},"nodeType":"YulExpressionStatement","src":"5435:74:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5359:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5370:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5381:4:17","type":""}],"src":"5289:226:17"},{"body":{"nodeType":"YulBlock","src":"5623:357:17","statements":[{"body":{"nodeType":"YulBlock","src":"5669:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5678:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5681:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5671:6:17"},"nodeType":"YulFunctionCall","src":"5671:12:17"},"nodeType":"YulExpressionStatement","src":"5671:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5644:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5653:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5640:3:17"},"nodeType":"YulFunctionCall","src":"5640:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5665:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5636:3:17"},"nodeType":"YulFunctionCall","src":"5636:32:17"},"nodeType":"YulIf","src":"5633:52:17"},{"nodeType":"YulVariableDeclaration","src":"5694:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5720:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5707:12:17"},"nodeType":"YulFunctionCall","src":"5707:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5698:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5764:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5739:24:17"},"nodeType":"YulFunctionCall","src":"5739:31:17"},"nodeType":"YulExpressionStatement","src":"5739:31:17"},{"nodeType":"YulAssignment","src":"5779:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5789:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"5803:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5835:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5846:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:17"},"nodeType":"YulFunctionCall","src":"5831:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5818:12:17"},"nodeType":"YulFunctionCall","src":"5818:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5807:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5884:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5859:24:17"},"nodeType":"YulFunctionCall","src":"5859:33:17"},"nodeType":"YulExpressionStatement","src":"5859:33:17"},{"nodeType":"YulAssignment","src":"5901:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5911:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5901:6:17"}]},{"nodeType":"YulAssignment","src":"5927:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5959:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5970:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5955:3:17"},"nodeType":"YulFunctionCall","src":"5955:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"5937:17:17"},"nodeType":"YulFunctionCall","src":"5937:37:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5927:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5573:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5584:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5596:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5604:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5612:6:17","type":""}],"src":"5520:460:17"},{"body":{"nodeType":"YulBlock","src":"6104:125:17","statements":[{"nodeType":"YulAssignment","src":"6114:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6126:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6137:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6122:3:17"},"nodeType":"YulFunctionCall","src":"6122:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6114:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6156:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6171:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6179:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6167:3:17"},"nodeType":"YulFunctionCall","src":"6167:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6149:6:17"},"nodeType":"YulFunctionCall","src":"6149:74:17"},"nodeType":"YulExpressionStatement","src":"6149:74:17"}]},"name":"abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6084:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6095:4:17","type":""}],"src":"5985:244:17"},{"body":{"nodeType":"YulBlock","src":"6404:564:17","statements":[{"body":{"nodeType":"YulBlock","src":"6451:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6460:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6463:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6453:6:17"},"nodeType":"YulFunctionCall","src":"6453:12:17"},"nodeType":"YulExpressionStatement","src":"6453:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6425:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6434:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6421:3:17"},"nodeType":"YulFunctionCall","src":"6421:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6446:3:17","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6417:3:17"},"nodeType":"YulFunctionCall","src":"6417:33:17"},"nodeType":"YulIf","src":"6414:53:17"},{"nodeType":"YulVariableDeclaration","src":"6476:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6502:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6489:12:17"},"nodeType":"YulFunctionCall","src":"6489:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6480:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6546:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6521:24:17"},"nodeType":"YulFunctionCall","src":"6521:31:17"},"nodeType":"YulExpressionStatement","src":"6521:31:17"},{"nodeType":"YulAssignment","src":"6561:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"6571:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6561:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"6585:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6617:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6628:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:17"},"nodeType":"YulFunctionCall","src":"6613:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6600:12:17"},"nodeType":"YulFunctionCall","src":"6600:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6589:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6666:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6641:24:17"},"nodeType":"YulFunctionCall","src":"6641:33:17"},"nodeType":"YulExpressionStatement","src":"6641:33:17"},{"nodeType":"YulAssignment","src":"6683:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6693:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6683:6:17"}]},{"nodeType":"YulAssignment","src":"6709:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6747:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:17"},"nodeType":"YulFunctionCall","src":"6732:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6719:12:17"},"nodeType":"YulFunctionCall","src":"6719:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6709:6:17"}]},{"nodeType":"YulAssignment","src":"6760:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6798:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:17"},"nodeType":"YulFunctionCall","src":"6783:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6770:12:17"},"nodeType":"YulFunctionCall","src":"6770:32:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6760:6:17"}]},{"nodeType":"YulAssignment","src":"6811:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6842:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6853:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6838:3:17"},"nodeType":"YulFunctionCall","src":"6838:19:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6821:16:17"},"nodeType":"YulFunctionCall","src":"6821:37:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6811:6:17"}]},{"nodeType":"YulAssignment","src":"6867:43:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6894:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6905:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6890:3:17"},"nodeType":"YulFunctionCall","src":"6890:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6877:12:17"},"nodeType":"YulFunctionCall","src":"6877:33:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6867:6:17"}]},{"nodeType":"YulAssignment","src":"6919:43:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6957:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:17"},"nodeType":"YulFunctionCall","src":"6942:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6929:12:17"},"nodeType":"YulFunctionCall","src":"6929:33:17"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6919:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6322:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6333:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6345:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6353:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6361:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6369:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6377:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6385:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6393:6:17","type":""}],"src":"6234:734:17"},{"body":{"nodeType":"YulBlock","src":"7060:301:17","statements":[{"body":{"nodeType":"YulBlock","src":"7106:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7115:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7118:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7108:6:17"},"nodeType":"YulFunctionCall","src":"7108:12:17"},"nodeType":"YulExpressionStatement","src":"7108:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7081:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7090:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7077:3:17"},"nodeType":"YulFunctionCall","src":"7077:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7102:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7073:3:17"},"nodeType":"YulFunctionCall","src":"7073:32:17"},"nodeType":"YulIf","src":"7070:52:17"},{"nodeType":"YulVariableDeclaration","src":"7131:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7157:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7144:12:17"},"nodeType":"YulFunctionCall","src":"7144:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7135:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7201:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7176:24:17"},"nodeType":"YulFunctionCall","src":"7176:31:17"},"nodeType":"YulExpressionStatement","src":"7176:31:17"},{"nodeType":"YulAssignment","src":"7216:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7226:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7216:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"7240:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7272:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7283:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7268:3:17"},"nodeType":"YulFunctionCall","src":"7268:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7255:12:17"},"nodeType":"YulFunctionCall","src":"7255:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7244:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7321:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7296:24:17"},"nodeType":"YulFunctionCall","src":"7296:33:17"},"nodeType":"YulExpressionStatement","src":"7296:33:17"},{"nodeType":"YulAssignment","src":"7338:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7348:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7338:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7018:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7029:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7041:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7049:6:17","type":""}],"src":"6973:388:17"},{"body":{"nodeType":"YulBlock","src":"7450:170:17","statements":[{"body":{"nodeType":"YulBlock","src":"7496:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7505:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7508:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7498:6:17"},"nodeType":"YulFunctionCall","src":"7498:12:17"},"nodeType":"YulExpressionStatement","src":"7498:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7471:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7480:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7467:3:17"},"nodeType":"YulFunctionCall","src":"7467:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7492:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7463:3:17"},"nodeType":"YulFunctionCall","src":"7463:32:17"},"nodeType":"YulIf","src":"7460:52:17"},{"nodeType":"YulAssignment","src":"7521:37:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7548:9:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"7531:16:17"},"nodeType":"YulFunctionCall","src":"7531:27:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7521:6:17"}]},{"nodeType":"YulAssignment","src":"7567:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7599:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7610:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:17"},"nodeType":"YulFunctionCall","src":"7595:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"7577:17:17"},"nodeType":"YulFunctionCall","src":"7577:37:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7567:6:17"}]}]},"name":"abi_decode_tuple_t_uint8t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7408:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7419:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7431:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7439:6:17","type":""}],"src":"7366:254:17"},{"body":{"nodeType":"YulBlock","src":"7710:232:17","statements":[{"body":{"nodeType":"YulBlock","src":"7756:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7765:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7768:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7758:6:17"},"nodeType":"YulFunctionCall","src":"7758:12:17"},"nodeType":"YulExpressionStatement","src":"7758:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7731:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7727:3:17"},"nodeType":"YulFunctionCall","src":"7727:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7752:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7723:3:17"},"nodeType":"YulFunctionCall","src":"7723:32:17"},"nodeType":"YulIf","src":"7720:52:17"},{"nodeType":"YulVariableDeclaration","src":"7781:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7807:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7794:12:17"},"nodeType":"YulFunctionCall","src":"7794:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7785:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7851:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7826:24:17"},"nodeType":"YulFunctionCall","src":"7826:31:17"},"nodeType":"YulExpressionStatement","src":"7826:31:17"},{"nodeType":"YulAssignment","src":"7866:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7876:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7866:6:17"}]},{"nodeType":"YulAssignment","src":"7890:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7921:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7932:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7917:3:17"},"nodeType":"YulFunctionCall","src":"7917:18:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"7900:16:17"},"nodeType":"YulFunctionCall","src":"7900:36:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7890:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7668:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7679:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7691:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7699:6:17","type":""}],"src":"7625:317:17"},{"body":{"nodeType":"YulBlock","src":"8002:382:17","statements":[{"nodeType":"YulAssignment","src":"8012:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8026:1:17","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8029:4:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8022:3:17"},"nodeType":"YulFunctionCall","src":"8022:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8012:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"8043:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8073:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8079:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8069:3:17"},"nodeType":"YulFunctionCall","src":"8069:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8047:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8120:31:17","statements":[{"nodeType":"YulAssignment","src":"8122:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8136:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8144:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8132:3:17"},"nodeType":"YulFunctionCall","src":"8132:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8122:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8100:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8093:6:17"},"nodeType":"YulFunctionCall","src":"8093:26:17"},"nodeType":"YulIf","src":"8090:61:17"},{"body":{"nodeType":"YulBlock","src":"8210:168:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8231:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8234:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8224:6:17"},"nodeType":"YulFunctionCall","src":"8224:88:17"},"nodeType":"YulExpressionStatement","src":"8224:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8332:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8335:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8325:6:17"},"nodeType":"YulFunctionCall","src":"8325:15:17"},"nodeType":"YulExpressionStatement","src":"8325:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8360:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8363:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8353:6:17"},"nodeType":"YulFunctionCall","src":"8353:15:17"},"nodeType":"YulExpressionStatement","src":"8353:15:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8166:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8189:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8197:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8186:2:17"},"nodeType":"YulFunctionCall","src":"8186:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8163:2:17"},"nodeType":"YulFunctionCall","src":"8163:38:17"},"nodeType":"YulIf","src":"8160:218:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7982:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7991:6:17","type":""}],"src":"7947:437:17"},{"body":{"nodeType":"YulBlock","src":"8563:162:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8580:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8591:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8573:6:17"},"nodeType":"YulFunctionCall","src":"8573:21:17"},"nodeType":"YulExpressionStatement","src":"8573:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8614:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8625:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8610:3:17"},"nodeType":"YulFunctionCall","src":"8610:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"8630:2:17","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8603:6:17"},"nodeType":"YulFunctionCall","src":"8603:30:17"},"nodeType":"YulExpressionStatement","src":"8603:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8653:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8664:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:17"},"nodeType":"YulFunctionCall","src":"8649:18:17"},{"hexValue":"554e415554484f52495a4544","kind":"string","nodeType":"YulLiteral","src":"8669:14:17","type":"","value":"UNAUTHORIZED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:17"},"nodeType":"YulFunctionCall","src":"8642:42:17"},"nodeType":"YulExpressionStatement","src":"8642:42:17"},{"nodeType":"YulAssignment","src":"8693:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8705:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8716:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8701:3:17"},"nodeType":"YulFunctionCall","src":"8701:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8693:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8540:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8554:4:17","type":""}],"src":"8389:336:17"},{"body":{"nodeType":"YulBlock","src":"8762:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8779:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8782:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8772:6:17"},"nodeType":"YulFunctionCall","src":"8772:88:17"},"nodeType":"YulExpressionStatement","src":"8772:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8876:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8879:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8869:6:17"},"nodeType":"YulFunctionCall","src":"8869:15:17"},"nodeType":"YulExpressionStatement","src":"8869:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8900:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8903:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8893:6:17"},"nodeType":"YulFunctionCall","src":"8893:15:17"},"nodeType":"YulExpressionStatement","src":"8893:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8730:184:17"},{"body":{"nodeType":"YulBlock","src":"8968:79:17","statements":[{"nodeType":"YulAssignment","src":"8978:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8990:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"8993:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8986:3:17"},"nodeType":"YulFunctionCall","src":"8986:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8978:4:17"}]},{"body":{"nodeType":"YulBlock","src":"9019:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9021:16:17"},"nodeType":"YulFunctionCall","src":"9021:18:17"},"nodeType":"YulExpressionStatement","src":"9021:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9010:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"9016:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9007:2:17"},"nodeType":"YulFunctionCall","src":"9007:11:17"},"nodeType":"YulIf","src":"9004:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8950:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"8953:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8959:4:17","type":""}],"src":"8919:128:17"},{"body":{"nodeType":"YulBlock","src":"9226:179:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9243:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9254:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9236:6:17"},"nodeType":"YulFunctionCall","src":"9236:21:17"},"nodeType":"YulExpressionStatement","src":"9236:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9277:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9288:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9273:3:17"},"nodeType":"YulFunctionCall","src":"9273:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"9293:2:17","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9266:6:17"},"nodeType":"YulFunctionCall","src":"9266:30:17"},"nodeType":"YulExpressionStatement","src":"9266:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9316:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9327:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9312:3:17"},"nodeType":"YulFunctionCall","src":"9312:18:17"},{"hexValue":"45524332304d696e7461626c653a206e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"9332:31:17","type":"","value":"ERC20Mintable: not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9305:6:17"},"nodeType":"YulFunctionCall","src":"9305:59:17"},"nodeType":"YulExpressionStatement","src":"9305:59:17"},{"nodeType":"YulAssignment","src":"9373:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9385:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9396:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9381:3:17"},"nodeType":"YulFunctionCall","src":"9381:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9373:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9203:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9217:4:17","type":""}],"src":"9052:353:17"},{"body":{"nodeType":"YulBlock","src":"9584:182:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9601:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9612:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:17"},"nodeType":"YulFunctionCall","src":"9594:21:17"},"nodeType":"YulExpressionStatement","src":"9594:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9635:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9646:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9631:3:17"},"nodeType":"YulFunctionCall","src":"9631:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"9651:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9624:6:17"},"nodeType":"YulFunctionCall","src":"9624:30:17"},"nodeType":"YulExpressionStatement","src":"9624:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9674:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9685:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9670:3:17"},"nodeType":"YulFunctionCall","src":"9670:18:17"},{"hexValue":"4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"9690:34:17","type":"","value":"MockERC4626: Invalid mint amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9663:6:17"},"nodeType":"YulFunctionCall","src":"9663:62:17"},"nodeType":"YulExpressionStatement","src":"9663:62:17"},{"nodeType":"YulAssignment","src":"9734:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9746:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9757:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9742:3:17"},"nodeType":"YulFunctionCall","src":"9742:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9734:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9561:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9575:4:17","type":""}],"src":"9410:356:17"},{"body":{"nodeType":"YulBlock","src":"9926:314:17","statements":[{"nodeType":"YulAssignment","src":"9936:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9948:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9959:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9944:3:17"},"nodeType":"YulFunctionCall","src":"9944:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9936:4:17"}]},{"nodeType":"YulVariableDeclaration","src":"9971:52:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9981:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9975:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10039:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10054:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"10062:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10050:3:17"},"nodeType":"YulFunctionCall","src":"10050:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10032:6:17"},"nodeType":"YulFunctionCall","src":"10032:34:17"},"nodeType":"YulExpressionStatement","src":"10032:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10086:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10097:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10082:3:17"},"nodeType":"YulFunctionCall","src":"10082:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10106:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"10114:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10102:3:17"},"nodeType":"YulFunctionCall","src":"10102:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10075:6:17"},"nodeType":"YulFunctionCall","src":"10075:43:17"},"nodeType":"YulExpressionStatement","src":"10075:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10138:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10149:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10134:3:17"},"nodeType":"YulFunctionCall","src":"10134:18:17"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10158:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10166:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10154:3:17"},"nodeType":"YulFunctionCall","src":"10154:79:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:17"},"nodeType":"YulFunctionCall","src":"10127:107:17"},"nodeType":"YulExpressionStatement","src":"10127:107:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9879:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9890:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9898:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9906:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9917:4:17","type":""}],"src":"9771:469:17"},{"body":{"nodeType":"YulBlock","src":"10323:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"10369:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10378:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10381:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10371:6:17"},"nodeType":"YulFunctionCall","src":"10371:12:17"},"nodeType":"YulExpressionStatement","src":"10371:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10344:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10353:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10340:3:17"},"nodeType":"YulFunctionCall","src":"10340:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10365:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10336:3:17"},"nodeType":"YulFunctionCall","src":"10336:32:17"},"nodeType":"YulIf","src":"10333:52:17"},{"nodeType":"YulVariableDeclaration","src":"10394:29:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10413:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10407:5:17"},"nodeType":"YulFunctionCall","src":"10407:16:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10398:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10454:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"10432:21:17"},"nodeType":"YulFunctionCall","src":"10432:28:17"},"nodeType":"YulExpressionStatement","src":"10432:28:17"},{"nodeType":"YulAssignment","src":"10469:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10479:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10469:6:17"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10289:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10300:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10312:6:17","type":""}],"src":"10245:245:17"},{"body":{"nodeType":"YulBlock","src":"10669:173:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10686:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10697:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10679:6:17"},"nodeType":"YulFunctionCall","src":"10679:21:17"},"nodeType":"YulExpressionStatement","src":"10679:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10720:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10731:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:17"},"nodeType":"YulFunctionCall","src":"10716:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"10736:2:17","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10709:6:17"},"nodeType":"YulFunctionCall","src":"10709:30:17"},"nodeType":"YulExpressionStatement","src":"10709:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10759:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10770:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10755:3:17"},"nodeType":"YulFunctionCall","src":"10755:18:17"},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","kind":"string","nodeType":"YulLiteral","src":"10775:25:17","type":"","value":"PERMIT_DEADLINE_EXPIRED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10748:6:17"},"nodeType":"YulFunctionCall","src":"10748:53:17"},"nodeType":"YulExpressionStatement","src":"10748:53:17"},{"nodeType":"YulAssignment","src":"10810:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10822:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10833:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10818:3:17"},"nodeType":"YulFunctionCall","src":"10818:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10810:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10646:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10660:4:17","type":""}],"src":"10495:347:17"},{"body":{"nodeType":"YulBlock","src":"11088:373:17","statements":[{"nodeType":"YulAssignment","src":"11098:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11110:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11121:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11106:3:17"},"nodeType":"YulFunctionCall","src":"11106:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11098:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11141:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"11152:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11134:6:17"},"nodeType":"YulFunctionCall","src":"11134:25:17"},"nodeType":"YulExpressionStatement","src":"11134:25:17"},{"nodeType":"YulVariableDeclaration","src":"11168:52:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11178:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11172:2:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11240:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11251:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11236:3:17"},"nodeType":"YulFunctionCall","src":"11236:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11260:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"11268:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11256:3:17"},"nodeType":"YulFunctionCall","src":"11256:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11229:6:17"},"nodeType":"YulFunctionCall","src":"11229:43:17"},"nodeType":"YulExpressionStatement","src":"11229:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11292:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11303:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11288:3:17"},"nodeType":"YulFunctionCall","src":"11288:18:17"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11312:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"11320:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11308:3:17"},"nodeType":"YulFunctionCall","src":"11308:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11281:6:17"},"nodeType":"YulFunctionCall","src":"11281:43:17"},"nodeType":"YulExpressionStatement","src":"11281:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11344:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11355:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11340:3:17"},"nodeType":"YulFunctionCall","src":"11340:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"11360:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11333:6:17"},"nodeType":"YulFunctionCall","src":"11333:34:17"},"nodeType":"YulExpressionStatement","src":"11333:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11387:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11398:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11383:3:17"},"nodeType":"YulFunctionCall","src":"11383:19:17"},{"name":"value4","nodeType":"YulIdentifier","src":"11404:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11376:6:17"},"nodeType":"YulFunctionCall","src":"11376:35:17"},"nodeType":"YulExpressionStatement","src":"11376:35:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11431:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11442:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11427:3:17"},"nodeType":"YulFunctionCall","src":"11427:19:17"},{"name":"value5","nodeType":"YulIdentifier","src":"11448:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11420:6:17"},"nodeType":"YulFunctionCall","src":"11420:35:17"},"nodeType":"YulExpressionStatement","src":"11420:35:17"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11017:9:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11028:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11036:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11044:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11052:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11060:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11068:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11079:4:17","type":""}],"src":"10847:614:17"},{"body":{"nodeType":"YulBlock","src":"11714:196:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11731:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11736:66:17","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11724:6:17"},"nodeType":"YulFunctionCall","src":"11724:79:17"},"nodeType":"YulExpressionStatement","src":"11724:79:17"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11823:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11828:1:17","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11819:3:17"},"nodeType":"YulFunctionCall","src":"11819:11:17"},{"name":"value0","nodeType":"YulIdentifier","src":"11832:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11812:6:17"},"nodeType":"YulFunctionCall","src":"11812:27:17"},"nodeType":"YulExpressionStatement","src":"11812:27:17"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11859:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11864:2:17","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11855:3:17"},"nodeType":"YulFunctionCall","src":"11855:12:17"},{"name":"value1","nodeType":"YulIdentifier","src":"11869:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11848:6:17"},"nodeType":"YulFunctionCall","src":"11848:28:17"},"nodeType":"YulExpressionStatement","src":"11848:28:17"},{"nodeType":"YulAssignment","src":"11885:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11896:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11901:2:17","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11892:3:17"},"nodeType":"YulFunctionCall","src":"11892:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11885:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11682:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11687:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11695:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11706:3:17","type":""}],"src":"11466:444:17"},{"body":{"nodeType":"YulBlock","src":"12096:217:17","statements":[{"nodeType":"YulAssignment","src":"12106:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12118:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12129:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12114:3:17"},"nodeType":"YulFunctionCall","src":"12114:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12106:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12149:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"12160:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12142:6:17"},"nodeType":"YulFunctionCall","src":"12142:25:17"},"nodeType":"YulExpressionStatement","src":"12142:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12187:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12198:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:17"},"nodeType":"YulFunctionCall","src":"12183:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12207:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12215:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12203:3:17"},"nodeType":"YulFunctionCall","src":"12203:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12176:6:17"},"nodeType":"YulFunctionCall","src":"12176:45:17"},"nodeType":"YulExpressionStatement","src":"12176:45:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12241:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12252:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12237:3:17"},"nodeType":"YulFunctionCall","src":"12237:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"12257:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12230:6:17"},"nodeType":"YulFunctionCall","src":"12230:34:17"},"nodeType":"YulExpressionStatement","src":"12230:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12284:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12295:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12280:3:17"},"nodeType":"YulFunctionCall","src":"12280:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"12300:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12273:6:17"},"nodeType":"YulFunctionCall","src":"12273:34:17"},"nodeType":"YulExpressionStatement","src":"12273:34:17"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12041:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12052:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12060:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12068:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12076:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12087:4:17","type":""}],"src":"11915:398:17"},{"body":{"nodeType":"YulBlock","src":"12492:164:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12509:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12520:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12502:6:17"},"nodeType":"YulFunctionCall","src":"12502:21:17"},"nodeType":"YulExpressionStatement","src":"12502:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12543:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12554:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12539:3:17"},"nodeType":"YulFunctionCall","src":"12539:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"12559:2:17","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12532:6:17"},"nodeType":"YulFunctionCall","src":"12532:30:17"},"nodeType":"YulExpressionStatement","src":"12532:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12582:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12593:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12578:3:17"},"nodeType":"YulFunctionCall","src":"12578:18:17"},{"hexValue":"494e56414c49445f5349474e4552","kind":"string","nodeType":"YulLiteral","src":"12598:16:17","type":"","value":"INVALID_SIGNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12571:6:17"},"nodeType":"YulFunctionCall","src":"12571:44:17"},"nodeType":"YulExpressionStatement","src":"12571:44:17"},{"nodeType":"YulAssignment","src":"12624:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12636:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12647:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12632:3:17"},"nodeType":"YulFunctionCall","src":"12632:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12624:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12469:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12483:4:17","type":""}],"src":"12318:338:17"},{"body":{"nodeType":"YulBlock","src":"12720:65:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12737:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12740:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12730:6:17"},"nodeType":"YulFunctionCall","src":"12730:14:17"},"nodeType":"YulExpressionStatement","src":"12730:14:17"},{"nodeType":"YulAssignment","src":"12753:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12771:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12774:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12761:9:17"},"nodeType":"YulFunctionCall","src":"12761:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12753:4:17"}]}]},"name":"array_dataslot_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12703:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12711:4:17","type":""}],"src":"12661:124:17"},{"body":{"nodeType":"YulBlock","src":"12928:1110:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12938:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12949:1:17","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"12942:3:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12959:30:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12982:6:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12976:5:17"},"nodeType":"YulFunctionCall","src":"12976:13:17"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"12963:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12998:17:17","value":{"name":"ret","nodeType":"YulIdentifier","src":"13012:3:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13002:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13024:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13034:1:17","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13028:2:17","type":""}]},{"nodeType":"YulAssignment","src":"13044:28:17","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13058:2:17"},{"name":"slotValue","nodeType":"YulIdentifier","src":"13062:9:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13054:3:17"},"nodeType":"YulFunctionCall","src":"13054:18:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13044:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"13081:44:17","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13111:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"13122:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13107:3:17"},"nodeType":"YulFunctionCall","src":"13107:18:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13085:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13164:31:17","statements":[{"nodeType":"YulAssignment","src":"13166:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13180:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13188:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13176:3:17"},"nodeType":"YulFunctionCall","src":"13176:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13166:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13144:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13137:6:17"},"nodeType":"YulFunctionCall","src":"13137:26:17"},"nodeType":"YulIf","src":"13134:61:17"},{"nodeType":"YulVariableDeclaration","src":"13204:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13214:2:17","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13208:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13275:172:17","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13296:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13301:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13289:6:17"},"nodeType":"YulFunctionCall","src":"13289:90:17"},"nodeType":"YulExpressionStatement","src":"13289:90:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13399:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13402:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13392:6:17"},"nodeType":"YulFunctionCall","src":"13392:15:17"},"nodeType":"YulExpressionStatement","src":"13392:15:17"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13427:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13432:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13420:6:17"},"nodeType":"YulFunctionCall","src":"13420:17:17"},"nodeType":"YulExpressionStatement","src":"13420:17:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13231:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13254:6:17"},{"name":"_2","nodeType":"YulIdentifier","src":"13262:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13251:2:17"},"nodeType":"YulFunctionCall","src":"13251:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13228:2:17"},"nodeType":"YulFunctionCall","src":"13228:38:17"},"nodeType":"YulIf","src":"13225:222:17"},{"cases":[{"body":{"nodeType":"YulBlock","src":"13497:184:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13518:3:17"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13527:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13538:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13523:3:17"},"nodeType":"YulFunctionCall","src":"13523:82:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13511:6:17"},"nodeType":"YulFunctionCall","src":"13511:95:17"},"nodeType":"YulExpressionStatement","src":"13511:95:17"},{"nodeType":"YulAssignment","src":"13619:52:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13630:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13639:6:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13661:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13654:6:17"},"nodeType":"YulFunctionCall","src":"13654:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13647:6:17"},"nodeType":"YulFunctionCall","src":"13647:22:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13635:3:17"},"nodeType":"YulFunctionCall","src":"13635:35:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13626:3:17"},"nodeType":"YulFunctionCall","src":"13626:45:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13619:3:17"}]}]},"nodeType":"YulCase","src":"13490:191:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13495:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"13697:316:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13711:55:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13759:6:17"}],"functionName":{"name":"array_dataslot_bytes_storage_ptr","nodeType":"YulIdentifier","src":"13726:32:17"},"nodeType":"YulFunctionCall","src":"13726:40:17"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"13715:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13779:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13788:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13783:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13856:111:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13885:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"13890:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13881:3:17"},"nodeType":"YulFunctionCall","src":"13881:11:17"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13900:7:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13894:5:17"},"nodeType":"YulFunctionCall","src":"13894:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13874:6:17"},"nodeType":"YulFunctionCall","src":"13874:35:17"},"nodeType":"YulExpressionStatement","src":"13874:35:17"},{"nodeType":"YulAssignment","src":"13926:27:17","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13941:7:17"},{"name":"_1","nodeType":"YulIdentifier","src":"13950:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13937:3:17"},"nodeType":"YulFunctionCall","src":"13937:16:17"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13926:7:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13813:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"13816:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13810:2:17"},"nodeType":"YulFunctionCall","src":"13810:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13824:19:17","statements":[{"nodeType":"YulAssignment","src":"13826:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13835:1:17"},{"name":"_2","nodeType":"YulIdentifier","src":"13838:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13831:3:17"},"nodeType":"YulFunctionCall","src":"13831:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13826:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13806:3:17","statements":[]},"src":"13802:165:17"},{"nodeType":"YulAssignment","src":"13980:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13991:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"13996:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13987:3:17"},"nodeType":"YulFunctionCall","src":"13987:16:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13980:3:17"}]}]},"nodeType":"YulCase","src":"13690:323:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13695:1:17","type":"","value":"1"}}],"expression":{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13463:18:17"},"nodeType":"YulSwitch","src":"13456:557:17"},{"nodeType":"YulAssignment","src":"14022:10:17","value":{"name":"ret","nodeType":"YulIdentifier","src":"14029:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14022:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12904:3:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12909:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12920:3:17","type":""}],"src":"12790:1248:17"},{"body":{"nodeType":"YulBlock","src":"14256:299:17","statements":[{"nodeType":"YulAssignment","src":"14266:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14278:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14289:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14274:3:17"},"nodeType":"YulFunctionCall","src":"14274:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14266:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14309:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"14320:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14302:6:17"},"nodeType":"YulFunctionCall","src":"14302:25:17"},"nodeType":"YulExpressionStatement","src":"14302:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14347:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14358:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14343:3:17"},"nodeType":"YulFunctionCall","src":"14343:18:17"},{"name":"value1","nodeType":"YulIdentifier","src":"14363:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14336:6:17"},"nodeType":"YulFunctionCall","src":"14336:34:17"},"nodeType":"YulExpressionStatement","src":"14336:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14390:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14401:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14386:3:17"},"nodeType":"YulFunctionCall","src":"14386:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"14406:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14379:6:17"},"nodeType":"YulFunctionCall","src":"14379:34:17"},"nodeType":"YulExpressionStatement","src":"14379:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14433:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14444:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14429:3:17"},"nodeType":"YulFunctionCall","src":"14429:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"14449:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14422:6:17"},"nodeType":"YulFunctionCall","src":"14422:34:17"},"nodeType":"YulExpressionStatement","src":"14422:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14476:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14487:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14472:3:17"},"nodeType":"YulFunctionCall","src":"14472:19:17"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14497:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14505:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14493:3:17"},"nodeType":"YulFunctionCall","src":"14493:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14465:6:17"},"nodeType":"YulFunctionCall","src":"14465:84:17"},"nodeType":"YulExpressionStatement","src":"14465:84:17"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14193:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14204:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14212:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14220:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14228:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14236:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14247:4:17","type":""}],"src":"14043:512:17"},{"body":{"nodeType":"YulBlock","src":"14608:77:17","statements":[{"nodeType":"YulAssignment","src":"14618:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14629:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"14632:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14625:3:17"},"nodeType":"YulFunctionCall","src":"14625:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14618:3:17"}]},{"body":{"nodeType":"YulBlock","src":"14657:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14659:16:17"},"nodeType":"YulFunctionCall","src":"14659:18:17"},"nodeType":"YulExpressionStatement","src":"14659:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14649:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"14652:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14646:2:17"},"nodeType":"YulFunctionCall","src":"14646:10:17"},"nodeType":"YulIf","src":"14643:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14591:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"14594:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14600:3:17","type":""}],"src":"14560:125:17"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_bytes4t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_bytes4(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes4t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint8t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_addresst_contract$_Authority_$2777(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_Authority_$2777(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes4(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_bytes4(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint8t_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_bytes4(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Mintable: not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"MockERC4626: Invalid mint amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"PERMIT_DEADLINE_EXPIRED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"INVALID_SIGNER\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2153":[{"length":32,"start":955},{"length":32,"start":2609},{"length":32,"start":2947},{"length":32,"start":4415},{"length":32,"start":4611}],"2155":[{"length":32,"start":705},{"length":32,"start":2795},{"length":32,"start":4797}],"3107":[{"length":32,"start":763}],"3121":[{"length":32,"start":2520}],"3123":[{"length":32,"start":2573}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061020b5760003560e01c80637a8c63b51161012a578063b7009613116100bd578063dd62ed3e1161008c578063ea7ca27611610071578063ea7ca2761461058b578063ed0d0efb146105cf578063f2fde38b146105ef57600080fd5b8063dd62ed3e14610512578063e688747b1461053d57600080fd5b8063b700961314610496578063bf7e214f146104a9578063c53a3985146104c9578063d505accf146104ff57600080fd5b806395d89b41116100f957806395d89b41146104555780639dc29fac1461045d578063a0712d6814610470578063a9059cbb1461048357600080fd5b80637a8c63b5146103b65780637a9e5e4b146103dd5780637ecebe00146103f05780638da5cb5b1461041057600080fd5b8063313ce567116101a25780634b5159da116101715780634b5159da1461035d57806367aff4841461037057806370a0823114610383578063728b952b146103a357600080fd5b8063313ce567146102f65780633644e5151461032f57806340c10f191461033757806342966c681461034a57600080fd5b80630ea9b75b116101de5780630ea9b75b1461029e57806318160ddd146102b3578063239c70ae146102bc57806323b872dd146102e357600080fd5b806306a36aee1461021057806306fdde0314610243578063095ea7b3146102585780630bade8a41461027b575b600080fd5b61023061021e366004611c63565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b61024b610602565b60405161023a9190611c80565b61026b610266366004611cec565b610690565b604051901515815260200161023a565b61026b610289366004611d4d565b600a6020526000908152604090205460ff1681565b6102b16102ac366004611d87565b61070a565b005b61023060025481565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b61026b6102f1366004611dce565b61088e565b61031d7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161023a565b6102306109d4565b6102b1610345366004611cec565b610a2f565b6102b1610358366004611e0f565b610b81565b6102b161036b366004611e28565b610c48565b6102b161037e366004611e5f565b610d72565b610230610391366004611c63565b60036020526000908152604090205481565b6102b16103b1366004611e8d565b610ec3565b61026b7f000000000000000000000000000000000000000000000000000000000000000081565b6102b16103eb366004611c63565b610fd3565b6102306103fe366004611c63565b60056020526000908152604090205481565b6006546104309073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161023a565b61024b611130565b6102b161046b366004611cec565b61113d565b6102b161047e366004611e0f565b611201565b61026b610491366004611cec565b61134f565b61026b6104a4366004611ebb565b6113d4565b6007546104309073ffffffffffffffffffffffffffffffffffffffff1681565b6104306104d7366004611c63565b60086020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6102b161050d366004611f02565b61156b565b610230610520366004611e8d565b600460209081526000928352604080842090915290825290205481565b61026b61054b366004611f70565b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600b602052604090205460ff919091161c600116151590565b61026b610599366004611fa3565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260096020526040902054600160ff9092161c16151590565b6102306105dd366004611d4d565b600b6020526000908152604090205481565b6102b16105fd366004611c63565b61188a565b6000805461060f90611fcf565b80601f016020809104026020016040519081016040528092919081815260200182805461063b90611fcf565b80156106885780601f1061065d57610100808354040283529160200191610688565b820191906000526020600020905b81548152906001019060200180831161066b57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106f89086815260200190565b60405180910390a35060015b92915050565b610738336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b6107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b80156107eb577fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b17905561082a565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b15183604051610881911515815260200190565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610922576108f08382612051565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610957908490612051565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109bf9087815260200190565b60405180910390a360019150505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a0a57610a05611aa0565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000015610ae957610a83336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b7f0000000000000000000000000000000000000000000000000000000000000000811115610b73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74604482015260640161079a565b610b7d8282611b3a565b5050565b7f000000000000000000000000000000000000000000000000000000000000000015610c3b57610bd5336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610c3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b610c453382611bb3565b50565b610c76336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610cdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000818152600a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b610da0336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610e06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b8015610e425773ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b179055610e75565b73ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610881911515815260200190565b610ef1336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b610f57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526008602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b60065473ffffffffffffffffffffffffffffffffffffffff163314806110b657506007546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b69190612064565b6110bf57600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6001805461060f90611fcf565b7f0000000000000000000000000000000000000000000000000000000000000000156111f757611191336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b6111f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b610b7d8282611bb3565b7f0000000000000000000000000000000000000000000000000000000000000000156112bb57611255336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b6112bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604482015260640161079a565b7f0000000000000000000000000000000000000000000000000000000000000000811115611345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74604482015260640161079a565b610c453382611b3a565b33600090815260036020526040812080548391908390611370908490612051565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106f89086815260200190565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526008602052604081205490911680156114cc576040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c49190612064565b9150506109cd565b7fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600a602052604090205460ff168061156257507fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600b602090815260408083205473ffffffffffffffffffffffffffffffffffffffff891684526009909252909120541615155b95945050505050565b428410156115d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161079a565b600060016115e16109d4565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611733573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906117ae57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e4552000000000000000000000000000000000000604482015260640161079a565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6118b8336000357fffffffff000000000000000000000000000000000000000000000000000000001661198f565b61191e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161079a565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60075460009073ffffffffffffffffffffffffffffffffffffffff168015801590611a7357506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a739190612064565b80611a98575060065473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611ad29190612081565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8060026000828254611b4c9190612157565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604081208054839290611be8908490612051565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611ba7565b73ffffffffffffffffffffffffffffffffffffffff81168114610c4557600080fd5b600060208284031215611c7557600080fd5b81356109cd81611c41565b600060208083528351808285015260005b81811015611cad57858101830151858201604001528201611c91565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60008060408385031215611cff57600080fd5b8235611d0a81611c41565b946020939093013593505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114611d4857600080fd5b919050565b600060208284031215611d5f57600080fd5b6109cd82611d18565b803560ff81168114611d4857600080fd5b8015158114610c4557600080fd5b600080600060608486031215611d9c57600080fd5b611da584611d68565b9250611db360208501611d18565b91506040840135611dc381611d79565b809150509250925092565b600080600060608486031215611de357600080fd5b8335611dee81611c41565b92506020840135611dfe81611c41565b929592945050506040919091013590565b600060208284031215611e2157600080fd5b5035919050565b60008060408385031215611e3b57600080fd5b611e4483611d18565b91506020830135611e5481611d79565b809150509250929050565b600080600060608486031215611e7457600080fd5b8335611e7f81611c41565b9250611db360208501611d68565b60008060408385031215611ea057600080fd5b8235611eab81611c41565b91506020830135611e5481611c41565b600080600060608486031215611ed057600080fd5b8335611edb81611c41565b92506020840135611eeb81611c41565b9150611ef960408501611d18565b90509250925092565b600080600080600080600060e0888a031215611f1d57600080fd5b8735611f2881611c41565b96506020880135611f3881611c41565b95506040880135945060608801359350611f5460808901611d68565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f8357600080fd5b611f8c83611d68565b9150611f9a60208401611d18565b90509250929050565b60008060408385031215611fb657600080fd5b8235611fc181611c41565b9150611f9a60208401611d68565b600181811c90821680611fe357607f821691505b60208210810361201c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561070457610704612022565b60006020828403121561207657600080fd5b81516109cd81611d79565b600080835481600182811c91508083168061209d57607f831692505b602080841082036120d5577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156120e9576001811461211c57612149565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650612149565b60008a81526020902060005b868110156121415781548b820152908501908301612128565b505084890196505b509498975050505050505050565b808201808211156107045761070461202256fea2646970667358221220b76c7ec62b5ecc169e0ff3a686dee12fefe91891e3bd99bd111513209f402f3064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A8C63B5 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0xB7009613 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xEA7CA276 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEA7CA276 EQ PUSH2 0x58B JUMPI DUP1 PUSH4 0xED0D0EFB EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xE688747B EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB7009613 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xC53A3985 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A8C63B5 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x4B5159DA GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x4B5159DA EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x67AFF484 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x728B952B EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xEA9B75B GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xEA9B75B EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x239C70AE EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A36AEE EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xBADE8A4 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x26B PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x1D87 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCE JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH2 0x31D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x230 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x26B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x3FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x430 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23A JUMP JUMPDEST PUSH2 0x24B PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x46B CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0F JUMP JUMPDEST PUSH2 0x1201 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CEC JUMP JUMPDEST PUSH2 0x134F JUMP JUMPDEST PUSH2 0x26B PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x430 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x430 PUSH2 0x4D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x156B JUMP JUMPDEST PUSH2 0x230 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F70 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x599 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SHR AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4D JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x188A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x60F SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x63B SWAP1 PUSH2 0x1FCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x688 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x65D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x688 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x66B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x6F8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x738 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x7EB JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL OR SWAP1 SSTORE PUSH2 0x82A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 PUSH1 0xFF AND PUSH32 0xBFE16B2C35CE23DFD1AB0E7B5D086A10060C9B52D1574E1680C881B3B3A2B151 DUP4 PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x922 JUMPI PUSH2 0x8F0 DUP4 DUP3 PUSH2 0x2051 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x957 SWAP1 DUP5 SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x9BF SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xA0A JUMPI PUSH2 0xA05 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xAE9 JUMPI PUSH2 0xA83 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xB73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xB7D DUP3 DUP3 PUSH2 0x1B3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xC3B JUMPI PUSH2 0xBD5 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xC45 CALLER DUP3 PUSH2 0x1BB3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC76 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xCDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x36D28126BEF21A4F3765D7FCB7C45CEAD463AE4C41094EF3B771EDE598544103 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xDA0 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE42 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL OR SWAP1 SSTORE PUSH2 0xE75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C9BDD0C8E073EB5EDA2250B18D8E5121FF27B62064FBEEEED4869BB99BC5BF2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x881 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xEF1 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xA4908E11A5F895B13D51526C331AC93CDD30E59772361C5D07874EB36BFF2065 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x10B6 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1092 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x10BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x60F SWAP1 PUSH2 0x1FCF JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x1191 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xB7D DUP3 DUP3 PUSH2 0x1BB3 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x12BB JUMPI PUSH2 0x1255 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x12BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x1345 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH2 0xC45 CALLER DUP3 PUSH2 0x1B3A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x1370 SWAP1 DUP5 SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x6F8 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9CD JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1562 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO ISZERO JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x15D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x15E1 PUSH2 0x9D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP14 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1733 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17AE JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18B8 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x198F JUMP JUMPDEST PUSH2 0x191E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x79A JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A73 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A73 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST DUP1 PUSH2 0x1A98 JUMPI POP PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1AD2 SWAP2 SWAP1 PUSH2 0x2081 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B4C SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1BE8 SWAP1 DUP5 SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x1BA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9CD DUP2 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CAD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1C91 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D0A DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CD DUP3 PUSH2 0x1D18 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA5 DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DB3 PUSH1 0x20 DUP6 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1DC3 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1DEE DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1DFE DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E44 DUP4 PUSH2 0x1D18 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E54 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E7F DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DB3 PUSH1 0x20 DUP6 ADD PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1EAB DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E54 DUP2 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1EDB DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1EEB DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 PUSH1 0x40 DUP6 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1F28 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1F38 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1F54 PUSH1 0x80 DUP10 ADD PUSH2 0x1D68 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8C DUP4 PUSH2 0x1D68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9A PUSH1 0x20 DUP5 ADD PUSH2 0x1D18 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1FC1 DUP2 PUSH2 0x1C41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9A PUSH1 0x20 DUP5 ADD PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1FE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x201C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9CD DUP2 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x209D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x20D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x20E9 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x211C JUMPI PUSH2 0x2149 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP7 AND DUP10 MSTORE DUP5 ISZERO ISZERO DUP6 MUL DUP10 ADD SWAP7 POP PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2141 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x2128 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x2022 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 PUSH13 0x7EC62B5ECC169E0FF3A686DEE1 0x2F 0xEF 0xE9 XOR SWAP2 0xE3 0xBD SWAP10 0xBD GT ISZERO SGT KECCAK256 SWAP16 BLOCKHASH 0x2F ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"254:1501:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:47:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;571:25:17;;;559:2;544:18;1622:47:15;;;;;;;;1031:18:16;;;:::i;:::-;;;;;;;:::i;2461:211::-;;;;;;:::i;:::-;;:::i;:::-;;;1704:14:17;;1697:22;1679:41;;1667:2;1652:18;2461:211:16;1539:187:17;1676:49:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4390:396;;;;;;:::i;:::-;;:::i;:::-;;1304:26:16;;;;;;358:38:12;;;;;3057:592:16;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;3631:4:17;3619:17;;;3601:36;;3589:2;3574:18;1083:31:16;3459:184:17;5327:177:16;;;:::i;1242:233:12:-;;;;;;:::i;:::-;;:::i;1481:111::-;;;;;;:::i;:::-;;:::i;3448:210:15:-;;;;;;:::i;:::-;;:::i;3853:337::-;;;;;;:::i;:::-;;:::i;1337:44:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3006:241:15;;;;;;:::i;:::-;;:::i;313:39:12:-;;;;;1523:434:14;;;;;;:::i;:::-;;:::i;1751:41:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;562:20:14;;;;;;;;;;;;5465:42:17;5453:55;;;5435:74;;5423:2;5408:18;562:20:14;5289:226:17;1056:20:16;;;:::i;1598:155:12:-;;;;;;:::i;:::-;;:::i;1047:189::-;;;;;;:::i;:::-;;:::i;2678:373:16:-;;;;;;:::i;:::-;;:::i;2336:465:15:-;;;;;;:::i;:::-;;:::i;589:26:14:-;;;;;;;;;1369:61:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3838:1483:16;;;;;;:::i;:::-;;:::i;1388:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1958:186:15;;;;;;:::i;:::-;2083:35;;2051:4;2083:35;;;:22;:35;;;;;;2075:52;;;;;;2131:1;2074:58;:63;;;1958:186;1795:157;;;;;;:::i;:::-;1908:18;;;;;1876:4;1908:18;;;:12;:18;;;;;;1939:1;1900:35;;;;;1899:41;:46;;;1795:157;1732:56;;;;;;:::i;:::-;;;;;;;;;;;;;;1963:164:14;;;;;;:::i;:::-;;:::i;1031:18:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;;:30;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;571:25:17;;559:2;544:18;;425:177;2606:37:16;;;;;;;;-1:-1:-1;2661:4:16;2461:211;;;;;:::o;4390:396:15:-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;;;;;;;;;4535:7:15::1;4531:184;;;4558:35:::0;;::::1;4597:18;4558:35:::0;;;:22:::1;:35;::::0;;;;:57;;4605:1:::1;:9;::::0;::::1;;4558:57;::::0;;4531:184:::1;;;4646:35:::0;;::::1;4686:18;4646:35:::0;;;:22:::1;:35;::::0;;;;:58;;4694:1:::1;:9;::::0;::::1;;4685:19;4646:58;::::0;;4531:184:::1;4758:11;4730:49;;;4752:4;4730:49;;;4771:7;4730:49;;;;1704:14:17::0;1697:22;1679:41;;1667:2;1652:18;;1539:187;4730:49:15::1;;;;;;;;4390:396:::0;;;:::o;3057:592:16:-;3209:15;;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;3298:17;3287:28;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;3317:15;;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;3374:15;;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;3545:13:16;;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;;;;;3562:6;571:25:17;;559:2;544:18;;425:177;3594:26:16;;;;;;;;3638:4;3631:11;;;3057:592;;;;;;:::o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:16;;5327:177::o;1242:233:12:-;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1382:13:::1;1372:6;:23;;1364:68;;;::::0;::::1;::::0;;9612:2:17;1364:68:12::1;::::0;::::1;9594:21:17::0;;;9631:18;;;9624:30;9690:34;9670:18;;;9663:62;9742:18;;1364:68:12::1;9410:356:17::0;1364:68:12::1;1442:26;1448:11;1461:6;1442:5;:26::i;:::-;1242:233:::0;;:::o;1481:111::-;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1560:25:::1;1566:10;1578:6;1560:5;:25::i;:::-;1481:111:::0;:::o;3448:210:15:-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;3549:31:15;;::::1;;::::0;;;:18:::1;:31;::::0;;;;;;;;:41;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;3606:45;;1679:41:17;;;3606:45:15::1;::::0;1652:18:17;3606:45:15::1;;;;;;;3448:210:::0;;:::o;3853:337::-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;3986:7:15::1;3982:150;;;4009:18;::::0;::::1;4031;4009::::0;;;:12:::1;:18;::::0;;;;:40;;4039:1:::1;:9;::::0;::::1;;4009:40;::::0;;3982:150:::1;;;4080:18;::::0;::::1;4103;4080::::0;;;:12:::1;:18;::::0;;;;:41;;4111:1:::1;:9;::::0;::::1;;4102:19;4080:41;::::0;;3982:150:::1;4169:4;4147:36;;4163:4;4147:36;;;4175:7;4147:36;;;;1704:14:17::0;1697:22;1679:41;;1667:2;1652:18;;1539:187;3006:241:15;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;3121:32:15::1;::::0;;::::1;;::::0;;;:24:::1;:32;::::0;;;;;:50;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;3187:53;::::1;::::0;3121:32;3187:53:::1;3006:241:::0;;:::o;1523:434:14:-;1794:5;;;;1780:10;:19;;:76;;-1:-1:-1;1803:9:14;;:53;;;;;1821:10;1803:53;;;10032:34:17;1841:4:14;10082:18:17;;;10075:43;1803:9:14;1848:7;;;10134:18:17;;;10127:107;1803:9:14;;;;;:17;;9944:18:17;;1803:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1772:85;;;;;;1868:9;:24;;;;;;;;;;;;;1908:42;;1925:10;;1908:42;;-1:-1:-1;;1908:42:14;1523:434;:::o;1056:20:16:-;;;;;;;:::i;1598:155:12:-;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1720:26:::1;1726:11;1739:6;1720:5;:26::i;1047:189::-:0;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1144:13:::1;1134:6;:23;;1126:68;;;::::0;::::1;::::0;;9612:2:17;1126:68:12::1;::::0;::::1;9594:21:17::0;;;9631:18;;;9624:30;9690:34;9670:18;;;9663:62;9742:18;;1126:68:12::1;9410:356:17::0;1126:68:12::1;1204:25;1210:10;1222:6;1204:5;:25::i;2678:373:16:-:0;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;2941:13:16;;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;2990:32;;;;2958:6;571:25:17;;559:2;544:18;;425:177;2336:465:15;2515:32;;;;2471:4;2515:32;;;:24;:32;;;;;;2471:4;;2515:32;2562:38;;2558:101;;2609:50;;;;;:23;10050:15:17;;;2609:50:15;;;10032:34:17;10102:15;;;10082:18;;;10075:43;10166:66;10154:79;;10134:18;;;10127:107;2609:23:15;;;;;9944:18:17;;2609:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2602:57;;;;;2558:101;2689:31;;;;;;;:18;:31;;;;;;;;;:105;;-1:-1:-1;2759:35:15;;;;;;;:22;:35;;;;;;;;;2738:18;;;;;:12;:18;;;;;;;:56;2724:70;;2689:105;2670:124;2336:465;-1:-1:-1;;;;;2336:465:15:o;3838:1483:16:-;4057:15;4045:8;:27;;4037:63;;;;;;;10697:2:17;4037:63:16;;;10679:21:17;10736:2;10716:18;;;10709:30;10775:25;10755:18;;;10748:53;10818:18;;4037:63:16;10495:347:17;4037:63:16;4265:24;4292:805;4428:18;:16;:18::i;:::-;4873:13;;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;11134:25:17;11236:18;;;11229:43;;;;11308:15;;;11288:18;;;11281:43;11340:18;;;11333:34;;;11383:19;;;11376:35;;;;11427:19;;;;11420:35;;;4511:449:16;;;;;;;;;;11106:19:17;;;4511:449:16;;;4472:514;;;;;;;;11736:66:17;4350:658:16;;;11724:79:17;11819:11;;;11812:27;;;;11855:12;;;11848:28;;;;11892:12;;4350:658:16;;;;;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;12142:25:17;12215:4;12203:17;;12183:18;;;12176:45;12237:18;;;12230:34;;;12280:18;;;12273:34;;;12114:19;;4292:805:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:16;;;;;;-1:-1:-1;;5120:30:16;;;;;;;:59;;;5174:5;5154:25;;:16;:25;;;5120:59;5112:86;;;;;;;12520:2:17;5112:86:16;;;12502:21:17;12559:2;12539:18;;;12532:30;12598:16;12578:18;;;12571:44;12632:18;;5112:86:16;12318:338:17;5112:86:16;5213:27;;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;571:25:17;;;5213:36:16;;5283:31;;;;;544:18:17;5283:31:16;;;;;;;3838:1483;;;;;;;:::o;1963:164:14:-;902:33;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;2046:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;2078:42:::1;::::0;2099:10:::1;::::0;2078:42:::1;::::0;-1:-1:-1;;2078:42:14::1;1963:164:::0;:::o;977:540::-;1097:9;;1064:4;;1097:9;;1415:27;;;;;:77;;-1:-1:-1;1446:46:14;;;;;:12;10050:15:17;;;1446:46:14;;;10032:34:17;1473:4:14;10082:18:17;;;10075:43;10166:66;10154:79;;10134:18;;;10127:107;1446:12:14;;;;;9944:18:17;;1446:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1414:96;;;-1:-1:-1;1505:5:14;;;1497:13;;;1505:5;;1497:13;1414:96;1407:103;977:540;-1:-1:-1;;;;977:540:14:o;5510:446:16:-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;14302:25:17;;;;14343:18;;14336:34;;;;5833:14:16;14386:18:17;;;14379:34;5869:13:16;14429:18:17;;;14422:34;5912:4:16;14472:19:17;;;14465:84;14274:19;;5640:295:16;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;6150:325::-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:13:16;;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;571:25:17;;;6436:32:16;;544:18:17;6436:32:16;;;;;;;;6150:325;;:::o;6481:328::-;6553:15;;;;;;;:9;:15;;;;;:25;;6572:6;;6553:15;:25;;6572:6;;6553:25;:::i;:::-;;;;-1:-1:-1;;6721:11:16;:21;;;;;;;6768:34;;571:25:17;;;-1:-1:-1;;6768:34:16;;;;;;559:2:17;544:18;6768:34:16;425:177:17;14:154;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;607:607::-;719:4;748:2;777;766:9;759:21;809:6;803:13;852:6;847:2;836:9;832:18;825:34;877:1;887:140;901:6;898:1;895:13;887:140;;;996:14;;;992:23;;986:30;962:17;;;981:2;958:26;951:66;916:10;;887:140;;;891:3;1076:1;1071:2;1062:6;1051:9;1047:22;1043:31;1036:42;1205:2;1135:66;1130:2;1122:6;1118:15;1114:88;1103:9;1099:104;1095:113;1087:121;;;;607:607;;;;:::o;1219:315::-;1287:6;1295;1348:2;1336:9;1327:7;1323:23;1319:32;1316:52;;;1364:1;1361;1354:12;1316:52;1403:9;1390:23;1422:31;1447:5;1422:31;:::i;:::-;1472:5;1524:2;1509:18;;;;1496:32;;-1:-1:-1;;;1219:315:17:o;1731:219::-;1798:20;;1858:66;1847:78;;1837:89;;1827:117;;1940:1;1937;1930:12;1827:117;1731:219;;;:::o;1955:184::-;2013:6;2066:2;2054:9;2045:7;2041:23;2037:32;2034:52;;;2082:1;2079;2072:12;2034:52;2105:28;2123:9;2105:28;:::i;2144:156::-;2210:20;;2270:4;2259:16;;2249:27;;2239:55;;2290:1;2287;2280:12;2305:118;2391:5;2384:13;2377:21;2370:5;2367:32;2357:60;;2413:1;2410;2403:12;2428:383;2499:6;2507;2515;2568:2;2556:9;2547:7;2543:23;2539:32;2536:52;;;2584:1;2581;2574:12;2536:52;2607:27;2624:9;2607:27;:::i;:::-;2597:37;;2653;2686:2;2675:9;2671:18;2653:37;:::i;:::-;2643:47;;2740:2;2729:9;2725:18;2712:32;2753:28;2775:5;2753:28;:::i;:::-;2800:5;2790:15;;;2428:383;;;;;:::o;2998:456::-;3075:6;3083;3091;3144:2;3132:9;3123:7;3119:23;3115:32;3112:52;;;3160:1;3157;3150:12;3112:52;3199:9;3186:23;3218:31;3243:5;3218:31;:::i;:::-;3268:5;-1:-1:-1;3325:2:17;3310:18;;3297:32;3338:33;3297:32;3338:33;:::i;:::-;2998:456;;3390:7;;-1:-1:-1;;;3444:2:17;3429:18;;;;3416:32;;2998:456::o;3648:180::-;3707:6;3760:2;3748:9;3739:7;3735:23;3731:32;3728:52;;;3776:1;3773;3766:12;3728:52;-1:-1:-1;3799:23:17;;3648:180;-1:-1:-1;3648:180:17:o;3833:313::-;3897:6;3905;3958:2;3946:9;3937:7;3933:23;3929:32;3926:52;;;3974:1;3971;3964:12;3926:52;3997:28;4015:9;3997:28;:::i;:::-;3987:38;;4075:2;4064:9;4060:18;4047:32;4088:28;4110:5;4088:28;:::i;:::-;4135:5;4125:15;;;3833:313;;;;;:::o;4151:452::-;4223:6;4231;4239;4292:2;4280:9;4271:7;4267:23;4263:32;4260:52;;;4308:1;4305;4298:12;4260:52;4347:9;4334:23;4366:31;4391:5;4366:31;:::i;:::-;4416:5;-1:-1:-1;4440:36:17;4472:2;4457:18;;4440:36;:::i;4608:406::-;4694:6;4702;4755:2;4743:9;4734:7;4730:23;4726:32;4723:52;;;4771:1;4768;4761:12;4723:52;4810:9;4797:23;4829:31;4854:5;4829:31;:::i;:::-;4879:5;-1:-1:-1;4936:2:17;4921:18;;4908:32;4949:33;4908:32;4949:33;:::i;5520:460::-;5596:6;5604;5612;5665:2;5653:9;5644:7;5640:23;5636:32;5633:52;;;5681:1;5678;5671:12;5633:52;5720:9;5707:23;5739:31;5764:5;5739:31;:::i;:::-;5789:5;-1:-1:-1;5846:2:17;5831:18;;5818:32;5859:33;5818:32;5859:33;:::i;:::-;5911:7;-1:-1:-1;5937:37:17;5970:2;5955:18;;5937:37;:::i;:::-;5927:47;;5520:460;;;;;:::o;6234:734::-;6345:6;6353;6361;6369;6377;6385;6393;6446:3;6434:9;6425:7;6421:23;6417:33;6414:53;;;6463:1;6460;6453:12;6414:53;6502:9;6489:23;6521:31;6546:5;6521:31;:::i;:::-;6571:5;-1:-1:-1;6628:2:17;6613:18;;6600:32;6641:33;6600:32;6641:33;:::i;:::-;6693:7;-1:-1:-1;6747:2:17;6732:18;;6719:32;;-1:-1:-1;6798:2:17;6783:18;;6770:32;;-1:-1:-1;6821:37:17;6853:3;6838:19;;6821:37;:::i;:::-;6811:47;;6905:3;6894:9;6890:19;6877:33;6867:43;;6957:3;6946:9;6942:19;6929:33;6919:43;;6234:734;;;;;;;;;;:::o;7366:254::-;7431:6;7439;7492:2;7480:9;7471:7;7467:23;7463:32;7460:52;;;7508:1;7505;7498:12;7460:52;7531:27;7548:9;7531:27;:::i;:::-;7521:37;;7577;7610:2;7599:9;7595:18;7577:37;:::i;:::-;7567:47;;7366:254;;;;;:::o;7625:317::-;7691:6;7699;7752:2;7740:9;7731:7;7727:23;7723:32;7720:52;;;7768:1;7765;7758:12;7720:52;7807:9;7794:23;7826:31;7851:5;7826:31;:::i;:::-;7876:5;-1:-1:-1;7900:36:17;7932:2;7917:18;;7900:36;:::i;7947:437::-;8026:1;8022:12;;;;8069;;;8090:61;;8144:4;8136:6;8132:17;8122:27;;8090:61;8197:2;8189:6;8186:14;8166:18;8163:38;8160:218;;8234:77;8231:1;8224:88;8335:4;8332:1;8325:15;8363:4;8360:1;8353:15;8160:218;;7947:437;;;:::o;8730:184::-;8782:77;8779:1;8772:88;8879:4;8876:1;8869:15;8903:4;8900:1;8893:15;8919:128;8986:9;;;9007:11;;;9004:37;;;9021:18;;:::i;10245:245::-;10312:6;10365:2;10353:9;10344:7;10340:23;10336:32;10333:52;;;10381:1;10378;10371:12;10333:52;10413:9;10407:16;10432:28;10454:5;10432:28;:::i;12790:1248::-;12920:3;12949:1;12982:6;12976:13;13012:3;13034:1;13062:9;13058:2;13054:18;13044:28;;13122:2;13111:9;13107:18;13144;13134:61;;13188:4;13180:6;13176:17;13166:27;;13134:61;13214:2;13262;13254:6;13251:14;13231:18;13228:38;13225:222;;13301:77;13296:3;13289:90;13402:4;13399:1;13392:15;13432:4;13427:3;13420:17;13225:222;13463:18;13490:191;;;;13695:1;13690:323;;;;13456:557;;13490:191;13538:66;13527:9;13523:82;13518:3;13511:95;13661:6;13654:14;13647:22;13639:6;13635:35;13630:3;13626:45;13619:52;;13490:191;;13690:323;12737:1;12730:14;;;12774:4;12761:18;;13788:1;13802:165;13816:6;13813:1;13810:13;13802:165;;;13894:14;;13881:11;;;13874:35;13937:16;;;;13831:10;;13802:165;;;13806:3;;13996:6;13991:3;13987:16;13980:23;;13456:557;-1:-1:-1;14029:3:17;;12790:1248;-1:-1:-1;;;;;;;;12790:1248:17:o;14560:125::-;14625:9;;;14646:10;;;14643:36;;;14659:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1721600","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"24561","authority()":"2380","balanceOf(address)":"2579","burn(address,uint256)":"infinite","burn(uint256)":"infinite","canCall(address,address,bytes4)":"infinite","decimals()":"infinite","doesRoleHaveCapability(uint8,bytes4)":"infinite","doesUserHaveRole(address,uint8)":"2705","getRolesWithCapability(bytes4)":"2584","getTargetCustomAuthority(address)":"2605","getUserRoles(address)":"2537","isCapabilityPublic(bytes4)":"2632","isCompetitionMode()":"infinite","maxMintAmount()":"infinite","mint(address,uint256)":"infinite","mint(uint256)":"infinite","name()":"infinite","nonces(address)":"2580","owner()":"2425","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","setAuthority(address)":"infinite","setPublicCapability(bytes4,bool)":"infinite","setRoleCapability(uint8,bytes4,bool)":"infinite","setTargetCustomAuthority(address,address)":"infinite","setUserRole(address,uint8,bool)":"infinite","symbol()":"infinite","totalSupply()":"2352","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authority()":"bf7e214f","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","burn(uint256)":"42966c68","canCall(address,address,bytes4)":"b7009613","decimals()":"313ce567","doesRoleHaveCapability(uint8,bytes4)":"e688747b","doesUserHaveRole(address,uint8)":"ea7ca276","getRolesWithCapability(bytes4)":"ed0d0efb","getTargetCustomAuthority(address)":"c53a3985","getUserRoles(address)":"06a36aee","isCapabilityPublic(bytes4)":"0bade8a4","isCompetitionMode()":"7a8c63b5","maxMintAmount()":"239c70ae","mint(address,uint256)":"40c10f19","mint(uint256)":"a0712d68","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","setAuthority(address)":"7a9e5e4b","setPublicCapability(bytes4,bool)":"4b5159da","setRoleCapability(uint8,bytes4,bool)":"0ea9b75b","setTargetCustomAuthority(address,address)":"728b952b","setUserRole(address,uint8,bool)":"67aff484","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isCompetitionMode_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxMintAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"PublicCapabilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RoleCapabilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"TargetCustomAuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"UserRoleUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"doesRoleHaveCapability\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"doesUserHaveRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"getRolesWithCapability\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getTargetCustomAuthority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserRoles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"isCapabilityPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCompetitionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setPublicCapability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRoleCapability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"customAuthority\",\"type\":\"address\"}],\"name\":\"setTargetCustomAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC20Mintable.sol\":\"ERC20Mintable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/test/ERC20Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { Authority } from \\\"solmate/auth/Auth.sol\\\";\\nimport { MultiRolesAuthority } from \\\"solmate/auth/authorities/MultiRolesAuthority.sol\\\";\\nimport { ERC20 } from \\\"solmate/tokens/ERC20.sol\\\";\\n\\ncontract ERC20Mintable is ERC20, MultiRolesAuthority {\\n    bool public immutable isCompetitionMode;\\n    uint256 public immutable maxMintAmount;\\n\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint8 decimals,\\n        address admin,\\n        bool isCompetitionMode_,\\n        uint256 maxMintAmount_\\n    )\\n        ERC20(name, symbol, decimals)\\n        MultiRolesAuthority(admin, Authority(address(address(this))))\\n    {\\n        isCompetitionMode = isCompetitionMode_;\\n        maxMintAmount = maxMintAmount_;\\n    }\\n\\n    modifier requiresAuthDuringCompetition() {\\n        if (isCompetitionMode) {\\n            require(\\n                isAuthorized(msg.sender, msg.sig),\\n                \\\"ERC20Mintable: not authorized\\\"\\n            );\\n        }\\n        _;\\n    }\\n\\n    function mint(uint256 amount) external requiresAuthDuringCompetition {\\n        require(amount <= maxMintAmount, \\\"MockERC4626: Invalid mint amount\\\");\\n        _mint(msg.sender, amount);\\n    }\\n\\n    function mint(\\n        address destination,\\n        uint256 amount\\n    ) external requiresAuthDuringCompetition {\\n        require(amount <= maxMintAmount, \\\"MockERC4626: Invalid mint amount\\\");\\n        _mint(destination, amount);\\n    }\\n\\n    function burn(uint256 amount) external requiresAuthDuringCompetition {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function burn(\\n        address destination,\\n        uint256 amount\\n    ) external requiresAuthDuringCompetition {\\n        _burn(destination, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xe39cce294bb9af75378c32ebd831b76f146d105d1a42c93a002a4c045f4e16e5\",\"license\":\"Apache-2.0\"},\"solmate/auth/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\nabstract contract Auth {\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    event AuthorityUpdated(address indexed user, Authority indexed newAuthority);\\n\\n    address public owner;\\n\\n    Authority public authority;\\n\\n    constructor(address _owner, Authority _authority) {\\n        owner = _owner;\\n        authority = _authority;\\n\\n        emit OwnershipTransferred(msg.sender, _owner);\\n        emit AuthorityUpdated(msg.sender, _authority);\\n    }\\n\\n    modifier requiresAuth() virtual {\\n        require(isAuthorized(msg.sender, msg.sig), \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    function isAuthorized(address user, bytes4 functionSig) internal view virtual returns (bool) {\\n        Authority auth = authority; // Memoizing authority saves us a warm SLOAD, around 100 gas.\\n\\n        // Checking if the caller is the owner only after calling the authority saves gas in most cases, but be\\n        // aware that this makes protected functions uncallable even to the owner if the authority is out of order.\\n        return (address(auth) != address(0) && auth.canCall(user, address(this), functionSig)) || user == owner;\\n    }\\n\\n    function setAuthority(Authority newAuthority) public virtual {\\n        // We check if the caller is the owner first because we want to ensure they can\\n        // always swap out the authority even if it's reverting or using up a lot of gas.\\n        require(msg.sender == owner || authority.canCall(msg.sender, address(this), msg.sig));\\n\\n        authority = newAuthority;\\n\\n        emit AuthorityUpdated(msg.sender, newAuthority);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual requiresAuth {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which provides authorization data to an Auth instance.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\ninterface Authority {\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\"},\"solmate/auth/authorities/MultiRolesAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {Auth, Authority} from \\\"../Auth.sol\\\";\\n\\n/// @notice Flexible and target agnostic role based Authority that supports up to 256 roles.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)\\ncontract MultiRolesAuthority is Auth, Authority {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled);\\n\\n    event PublicCapabilityUpdated(bytes4 indexed functionSig, bool enabled);\\n\\n    event RoleCapabilityUpdated(uint8 indexed role, bytes4 indexed functionSig, bool enabled);\\n\\n    event TargetCustomAuthorityUpdated(address indexed target, Authority indexed authority);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner, Authority _authority) Auth(_owner, _authority) {}\\n\\n    /*//////////////////////////////////////////////////////////////\\n                     CUSTOM TARGET AUTHORITY STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => Authority) public getTargetCustomAuthority;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ROLE/USER STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => bytes32) public getUserRoles;\\n\\n    mapping(bytes4 => bool) public isCapabilityPublic;\\n\\n    mapping(bytes4 => bytes32) public getRolesWithCapability;\\n\\n    function doesUserHaveRole(address user, uint8 role) public view virtual returns (bool) {\\n        return (uint256(getUserRoles[user]) >> role) & 1 != 0;\\n    }\\n\\n    function doesRoleHaveCapability(uint8 role, bytes4 functionSig) public view virtual returns (bool) {\\n        return (uint256(getRolesWithCapability[functionSig]) >> role) & 1 != 0;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                           AUTHORIZATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) public view virtual override returns (bool) {\\n        Authority customAuthority = getTargetCustomAuthority[target];\\n\\n        if (address(customAuthority) != address(0)) return customAuthority.canCall(user, target, functionSig);\\n\\n        return\\n            isCapabilityPublic[functionSig] || bytes32(0) != getUserRoles[user] & getRolesWithCapability[functionSig];\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n               CUSTOM TARGET AUTHORITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setTargetCustomAuthority(address target, Authority customAuthority) public virtual requiresAuth {\\n        getTargetCustomAuthority[target] = customAuthority;\\n\\n        emit TargetCustomAuthorityUpdated(target, customAuthority);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                  PUBLIC CAPABILITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setPublicCapability(bytes4 functionSig, bool enabled) public virtual requiresAuth {\\n        isCapabilityPublic[functionSig] = enabled;\\n\\n        emit PublicCapabilityUpdated(functionSig, enabled);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                       USER ROLE ASSIGNMENT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setUserRole(\\n        address user,\\n        uint8 role,\\n        bool enabled\\n    ) public virtual requiresAuth {\\n        if (enabled) {\\n            getUserRoles[user] |= bytes32(1 << role);\\n        } else {\\n            getUserRoles[user] &= ~bytes32(1 << role);\\n        }\\n\\n        emit UserRoleUpdated(user, role, enabled);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                   ROLE CAPABILITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setRoleCapability(\\n        uint8 role,\\n        bytes4 functionSig,\\n        bool enabled\\n    ) public virtual requiresAuth {\\n        if (enabled) {\\n            getRolesWithCapability[functionSig] |= bytes32(1 << role);\\n        } else {\\n            getRolesWithCapability[functionSig] &= ~bytes32(1 << role);\\n        }\\n\\n        emit RoleCapabilityUpdated(role, functionSig, enabled);\\n    }\\n}\\n\",\"keccak256\":\"0x5544e61f98c0e80a8c4b9b691952122d3547ade0c0ad830ae6d5fd65f2d0dbe3\",\"license\":\"AGPL-3.0-only\"},\"solmate/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3103,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3105,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3109,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3113,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3119,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3127,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2623,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"owner","offset":0,"slot":"6","type":"t_address"},{"astId":2626,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"authority","offset":0,"slot":"7","type":"t_contract(Authority)2777"},{"astId":2834,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"getTargetCustomAuthority","offset":0,"slot":"8","type":"t_mapping(t_address,t_contract(Authority)2777)"},{"astId":2838,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"getUserRoles","offset":0,"slot":"9","type":"t_mapping(t_address,t_bytes32)"},{"astId":2842,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"isCapabilityPublic","offset":0,"slot":"10","type":"t_mapping(t_bytes4,t_bool)"},{"astId":2846,"contract":"contracts/test/ERC20Mintable.sol:ERC20Mintable","label":"getRolesWithCapability","offset":0,"slot":"11","type":"t_mapping(t_bytes4,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_contract(Authority)2777":{"encoding":"inplace","label":"contract Authority","numberOfBytes":"20"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_contract(Authority)2777)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract Authority)","numberOfBytes":"32","value":"t_contract(Authority)2777"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes4,t_bytes32)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/MockRocketPool.sol":{"MockRocketPool":{"abi":[{"inputs":[{"internalType":"uint256","name":"_initialRate","type":"uint256"},{"internalType":"address","name":"_admin","type":"address"},{"internalType":"bool","name":"_isCompetitionMode","type":"bool"},{"internalType":"uint256","name":"_maxMintAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"PublicCapabilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint8","name":"role","type":"uint8"},{"indexed":true,"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"RoleCapabilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"authority","type":"address"}],"name":"TargetCustomAuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint8","name":"role","type":"uint8"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"UserRoleUpdated","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"authority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"doesRoleHaveCapability","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"}],"name":"doesUserHaveRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rethAmount","type":"uint256"}],"name":"getEthValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ethAmount","type":"uint256"}],"name":"getRethValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"getRolesWithCapability","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getTargetCustomAuthority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPooledEther","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getUserRoles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"isCapabilityPublic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isCompetitionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxMintAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setPublicCapability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rate_","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setRoleCapability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"contract Authority","name":"customAuthority","type":"address"}],"name":"setTargetCustomAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setUserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"submit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_sharesAmount","type":"uint256"}],"name":"transferShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_sharesAmount","type":"uint256"}],"name":"transferSharesFrom","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"DELV","custom:disclaimer":"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.","kind":"dev","methods":{},"title":"MockRocketPool","version":1},"evm":{"bytecode":{"functionDebugData":{"@_2196":{"entryPoint":null,"id":2196,"parameterSlots":6,"returnSlots":0},"@_2339":{"entryPoint":null,"id":2339,"parameterSlots":4,"returnSlots":0},"@_2655":{"entryPoint":null,"id":2655,"parameterSlots":2,"returnSlots":0},"@_2829":{"entryPoint":null,"id":2829,"parameterSlots":2,"returnSlots":0},"@_3159":{"entryPoint":null,"id":3159,"parameterSlots":3,"returnSlots":0},"@computeDomainSeparator_3413":{"entryPoint":376,"id":3413,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_boolt_uint256_fromMemory":{"entryPoint":532,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":708,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":791,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":648,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":626,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4655:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:446:17","statements":[{"body":{"nodeType":"YulBlock","src":"190:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"199:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"202:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"192:6:17"},"nodeType":"YulFunctionCall","src":"192:12:17"},"nodeType":"YulExpressionStatement","src":"192:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"164:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"160:3:17"},"nodeType":"YulFunctionCall","src":"160:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"185:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"156:3:17"},"nodeType":"YulFunctionCall","src":"156:33:17"},"nodeType":"YulIf","src":"153:53:17"},{"nodeType":"YulAssignment","src":"215:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"231:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"225:5:17"},"nodeType":"YulFunctionCall","src":"225:16:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"215:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"250:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"273:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"284:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"269:3:17"},"nodeType":"YulFunctionCall","src":"269:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"263:5:17"},"nodeType":"YulFunctionCall","src":"263:25:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"254:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"351:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"360:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"353:6:17"},"nodeType":"YulFunctionCall","src":"353:12:17"},"nodeType":"YulExpressionStatement","src":"353:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"310:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"321:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"336:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"341:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"332:3:17"},"nodeType":"YulFunctionCall","src":"332:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"345:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:17"},"nodeType":"YulFunctionCall","src":"328:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"317:3:17"},"nodeType":"YulFunctionCall","src":"317:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"307:2:17"},"nodeType":"YulFunctionCall","src":"307:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"300:6:17"},"nodeType":"YulFunctionCall","src":"300:50:17"},"nodeType":"YulIf","src":"297:70:17"},{"nodeType":"YulAssignment","src":"376:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"386:5:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"376:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"400:40:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:17"},"nodeType":"YulFunctionCall","src":"421:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"415:5:17"},"nodeType":"YulFunctionCall","src":"415:25:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"404:7:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"497:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"506:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"509:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"499:6:17"},"nodeType":"YulFunctionCall","src":"499:12:17"},"nodeType":"YulExpressionStatement","src":"499:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"462:7:17"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"485:7:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"478:6:17"},"nodeType":"YulFunctionCall","src":"478:15:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"471:6:17"},"nodeType":"YulFunctionCall","src":"471:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"459:2:17"},"nodeType":"YulFunctionCall","src":"459:36:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"452:6:17"},"nodeType":"YulFunctionCall","src":"452:44:17"},"nodeType":"YulIf","src":"449:64:17"},{"nodeType":"YulAssignment","src":"522:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"532:7:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"522:6:17"}]},{"nodeType":"YulAssignment","src":"548:35:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"568:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"579:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"564:3:17"},"nodeType":"YulFunctionCall","src":"564:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"558:5:17"},"nodeType":"YulFunctionCall","src":"558:25:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"548:6:17"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"85:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"96:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"108:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"116:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"124:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"132:6:17","type":""}],"src":"14:575:17"},{"body":{"nodeType":"YulBlock","src":"626:95:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"643:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"650:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"655:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"646:3:17"},"nodeType":"YulFunctionCall","src":"646:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"636:6:17"},"nodeType":"YulFunctionCall","src":"636:31:17"},"nodeType":"YulExpressionStatement","src":"636:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"683:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"686:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"676:6:17"},"nodeType":"YulFunctionCall","src":"676:15:17"},"nodeType":"YulExpressionStatement","src":"676:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"710:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"700:6:17"},"nodeType":"YulFunctionCall","src":"700:15:17"},"nodeType":"YulExpressionStatement","src":"700:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"594:127:17"},{"body":{"nodeType":"YulBlock","src":"781:325:17","statements":[{"nodeType":"YulAssignment","src":"791:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"805:1:17","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"808:4:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"801:3:17"},"nodeType":"YulFunctionCall","src":"801:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"791:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"822:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"852:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"858:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"848:3:17"},"nodeType":"YulFunctionCall","src":"848:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"826:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"899:31:17","statements":[{"nodeType":"YulAssignment","src":"901:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"915:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"923:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"911:3:17"},"nodeType":"YulFunctionCall","src":"911:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"901:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"879:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"872:6:17"},"nodeType":"YulFunctionCall","src":"872:26:17"},"nodeType":"YulIf","src":"869:61:17"},{"body":{"nodeType":"YulBlock","src":"989:111:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1010:1:17","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1017:3:17","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1022:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1013:3:17"},"nodeType":"YulFunctionCall","src":"1013:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:17"},"nodeType":"YulFunctionCall","src":"1003:31:17"},"nodeType":"YulExpressionStatement","src":"1003:31:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1054:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1057:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1047:6:17"},"nodeType":"YulFunctionCall","src":"1047:15:17"},"nodeType":"YulExpressionStatement","src":"1047:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1082:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1085:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1075:6:17"},"nodeType":"YulFunctionCall","src":"1075:15:17"},"nodeType":"YulExpressionStatement","src":"1075:15:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"945:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"968:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"976:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"965:2:17"},"nodeType":"YulFunctionCall","src":"965:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"942:2:17"},"nodeType":"YulFunctionCall","src":"942:38:17"},"nodeType":"YulIf","src":"939:161:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"761:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"770:6:17","type":""}],"src":"726:380:17"},{"body":{"nodeType":"YulBlock","src":"1167:65:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1184:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1187:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1177:6:17"},"nodeType":"YulFunctionCall","src":"1177:14:17"},"nodeType":"YulExpressionStatement","src":"1177:14:17"},{"nodeType":"YulAssignment","src":"1200:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1218:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1221:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1208:9:17"},"nodeType":"YulFunctionCall","src":"1208:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1200:4:17"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1150:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1158:4:17","type":""}],"src":"1111:121:17"},{"body":{"nodeType":"YulBlock","src":"1318:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"1351:425:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1365:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1375:1:17","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1369:2:17","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1396:2:17"},{"name":"array","nodeType":"YulIdentifier","src":"1400:5:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1389:6:17"},"nodeType":"YulFunctionCall","src":"1389:17:17"},"nodeType":"YulExpressionStatement","src":"1389:17:17"},{"nodeType":"YulVariableDeclaration","src":"1419:31:17","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1441:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"1445:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1431:9:17"},"nodeType":"YulFunctionCall","src":"1431:19:17"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1423:4:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1463:57:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1486:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1496:1:17","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1503:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1515:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:17"},"nodeType":"YulFunctionCall","src":"1499:19:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1492:3:17"},"nodeType":"YulFunctionCall","src":"1492:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1482:3:17"},"nodeType":"YulFunctionCall","src":"1482:38:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1467:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1557:23:17","statements":[{"nodeType":"YulAssignment","src":"1559:19:17","value":{"name":"data","nodeType":"YulIdentifier","src":"1574:4:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1559:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1539:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1551:4:17","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1536:2:17"},"nodeType":"YulFunctionCall","src":"1536:20:17"},"nodeType":"YulIf","src":"1533:47:17"},{"nodeType":"YulVariableDeclaration","src":"1593:41:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1607:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1617:1:17","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1624:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1629:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1620:3:17"},"nodeType":"YulFunctionCall","src":"1620:12:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1613:3:17"},"nodeType":"YulFunctionCall","src":"1613:20:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1603:3:17"},"nodeType":"YulFunctionCall","src":"1603:31:17"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1597:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1647:24:17","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1660:11:17"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1651:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1745:21:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1754:5:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1761:2:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1747:6:17"},"nodeType":"YulFunctionCall","src":"1747:17:17"},"nodeType":"YulExpressionStatement","src":"1747:17:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1695:5:17"},{"name":"_2","nodeType":"YulIdentifier","src":"1702:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1692:2:17"},"nodeType":"YulFunctionCall","src":"1692:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1706:26:17","statements":[{"nodeType":"YulAssignment","src":"1708:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1721:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1728:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:17"},"nodeType":"YulFunctionCall","src":"1717:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1708:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1688:3:17","statements":[]},"src":"1684:82:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1334:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1339:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1331:2:17"},"nodeType":"YulFunctionCall","src":"1331:11:17"},"nodeType":"YulIf","src":"1328:448:17"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1290:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"1297:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1302:10:17","type":""}],"src":"1237:545:17"},{"body":{"nodeType":"YulBlock","src":"1872:81:17","statements":[{"nodeType":"YulAssignment","src":"1882:65:17","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1897:4:17"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1915:1:17","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1918:3:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1911:3:17"},"nodeType":"YulFunctionCall","src":"1911:11:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1928:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1924:3:17"},"nodeType":"YulFunctionCall","src":"1924:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1907:3:17"},"nodeType":"YulFunctionCall","src":"1907:24:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1903:3:17"},"nodeType":"YulFunctionCall","src":"1903:29:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1893:3:17"},"nodeType":"YulFunctionCall","src":"1893:40:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:1:17","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1942:3:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1935:3:17"},"nodeType":"YulFunctionCall","src":"1935:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1890:2:17"},"nodeType":"YulFunctionCall","src":"1890:57:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1882:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1849:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"1855:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1863:4:17","type":""}],"src":"1787:166:17"},{"body":{"nodeType":"YulBlock","src":"2054:1256:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2064:24:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2084:3:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2078:5:17"},"nodeType":"YulFunctionCall","src":"2078:10:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2068:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2131:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2133:16:17"},"nodeType":"YulFunctionCall","src":"2133:18:17"},"nodeType":"YulExpressionStatement","src":"2133:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2103:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2119:2:17","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2123:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2115:3:17"},"nodeType":"YulFunctionCall","src":"2115:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2111:3:17"},"nodeType":"YulFunctionCall","src":"2111:18:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2100:2:17"},"nodeType":"YulFunctionCall","src":"2100:30:17"},"nodeType":"YulIf","src":"2097:56:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2206:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2244:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2238:5:17"},"nodeType":"YulFunctionCall","src":"2238:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2212:25:17"},"nodeType":"YulFunctionCall","src":"2212:38:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"2252:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2162:43:17"},"nodeType":"YulFunctionCall","src":"2162:97:17"},"nodeType":"YulExpressionStatement","src":"2162:97:17"},{"nodeType":"YulVariableDeclaration","src":"2268:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2285:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2272:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:23:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2314:4:17","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2299:11:17","type":""}]},{"nodeType":"YulAssignment","src":"2327:24:17","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2340:11:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2327:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2397:656:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2411:35:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2430:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2442:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2438:3:17"},"nodeType":"YulFunctionCall","src":"2438:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2426:3:17"},"nodeType":"YulFunctionCall","src":"2426:20:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2415:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2459:49:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2503:4:17"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2473:29:17"},"nodeType":"YulFunctionCall","src":"2473:35:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2463:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2521:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2530:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2525:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2608:172:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2633:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2651:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2656:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2647:3:17"},"nodeType":"YulFunctionCall","src":"2647:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2641:5:17"},"nodeType":"YulFunctionCall","src":"2641:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2626:6:17"},"nodeType":"YulFunctionCall","src":"2626:42:17"},"nodeType":"YulExpressionStatement","src":"2626:42:17"},{"nodeType":"YulAssignment","src":"2685:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2699:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2707:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:17"},"nodeType":"YulFunctionCall","src":"2695:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2685:6:17"}]},{"nodeType":"YulAssignment","src":"2726:40:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2743:9:17"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2754:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2739:3:17"},"nodeType":"YulFunctionCall","src":"2739:27:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2726:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2555:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2558:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2552:2:17"},"nodeType":"YulFunctionCall","src":"2552:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2567:28:17","statements":[{"nodeType":"YulAssignment","src":"2569:24:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2578:1:17"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2581:11:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2574:3:17"},"nodeType":"YulFunctionCall","src":"2574:19:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2569:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2548:3:17","statements":[]},"src":"2544:236:17"},{"body":{"nodeType":"YulBlock","src":"2828:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2846:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2873:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2878:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2869:3:17"},"nodeType":"YulFunctionCall","src":"2869:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2863:5:17"},"nodeType":"YulFunctionCall","src":"2863:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2850:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2913:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2925:9:17"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2952:1:17","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2955:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2948:3:17"},"nodeType":"YulFunctionCall","src":"2948:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"2964:3:17","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2944:3:17"},"nodeType":"YulFunctionCall","src":"2944:24:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2974:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2970:3:17"},"nodeType":"YulFunctionCall","src":"2970:6:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2940:3:17"},"nodeType":"YulFunctionCall","src":"2940:37:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2936:3:17"},"nodeType":"YulFunctionCall","src":"2936:42:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2921:3:17"},"nodeType":"YulFunctionCall","src":"2921:58:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2906:6:17"},"nodeType":"YulFunctionCall","src":"2906:74:17"},"nodeType":"YulExpressionStatement","src":"2906:74:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2799:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"2808:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2796:2:17"},"nodeType":"YulFunctionCall","src":"2796:19:17"},"nodeType":"YulIf","src":"2793:201:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3014:4:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3028:1:17","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3031:6:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3024:3:17"},"nodeType":"YulFunctionCall","src":"3024:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"3040:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3020:3:17"},"nodeType":"YulFunctionCall","src":"3020:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3007:6:17"},"nodeType":"YulFunctionCall","src":"3007:36:17"},"nodeType":"YulExpressionStatement","src":"3007:36:17"}]},"nodeType":"YulCase","src":"2390:663:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2395:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3070:234:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3084:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3097:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3088:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3133:67:17","statements":[{"nodeType":"YulAssignment","src":"3151:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3170:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3175:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3166:3:17"},"nodeType":"YulFunctionCall","src":"3166:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3160:5:17"},"nodeType":"YulFunctionCall","src":"3160:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3151:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3114:6:17"},"nodeType":"YulIf","src":"3111:89:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3220:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3279:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"3286:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3226:52:17"},"nodeType":"YulFunctionCall","src":"3226:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3213:6:17"},"nodeType":"YulFunctionCall","src":"3213:81:17"},"nodeType":"YulExpressionStatement","src":"3213:81:17"}]},"nodeType":"YulCase","src":"3062:242:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2370:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2378:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2367:2:17"},"nodeType":"YulFunctionCall","src":"2367:14:17"},"nodeType":"YulSwitch","src":"2360:944:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2039:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"2045:3:17","type":""}],"src":"1958:1352:17"},{"body":{"nodeType":"YulBlock","src":"3453:706:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3463:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3474:1:17","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"3467:3:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3484:30:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3507:6:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3501:5:17"},"nodeType":"YulFunctionCall","src":"3501:13:17"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"3488:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3523:50:17","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"3563:9:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3537:25:17"},"nodeType":"YulFunctionCall","src":"3537:36:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3527:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3582:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3592:1:17","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3586:2:17","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3643:126:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3664:3:17"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"3673:9:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3688:3:17","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3684:3:17"},"nodeType":"YulFunctionCall","src":"3684:8:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3669:3:17"},"nodeType":"YulFunctionCall","src":"3669:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3657:6:17"},"nodeType":"YulFunctionCall","src":"3657:37:17"},"nodeType":"YulExpressionStatement","src":"3657:37:17"},{"nodeType":"YulAssignment","src":"3707:52:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3718:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3727:6:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3749:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3742:6:17"},"nodeType":"YulFunctionCall","src":"3742:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3735:6:17"},"nodeType":"YulFunctionCall","src":"3735:22:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3723:3:17"},"nodeType":"YulFunctionCall","src":"3723:35:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3714:3:17"},"nodeType":"YulFunctionCall","src":"3714:45:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3707:3:17"}]}]},"nodeType":"YulCase","src":"3636:133:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3641:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"3785:349:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:17","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"3809:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3799:6:17"},"nodeType":"YulFunctionCall","src":"3799:17:17"},"nodeType":"YulExpressionStatement","src":"3799:17:17"},{"nodeType":"YulVariableDeclaration","src":"3829:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3839:4:17","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3833:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3856:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3881:1:17","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"3884:2:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3871:9:17"},"nodeType":"YulFunctionCall","src":"3871:16:17"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"3860:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3900:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3977:111:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4006:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"4011:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4002:3:17"},"nodeType":"YulFunctionCall","src":"4002:11:17"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"4021:7:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4015:5:17"},"nodeType":"YulFunctionCall","src":"4015:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3995:6:17"},"nodeType":"YulFunctionCall","src":"3995:35:17"},"nodeType":"YulExpressionStatement","src":"3995:35:17"},{"nodeType":"YulAssignment","src":"4047:27:17","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"4062:7:17"},{"name":"_1","nodeType":"YulIdentifier","src":"4071:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4058:3:17"},"nodeType":"YulFunctionCall","src":"4058:16:17"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"4047:7:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3934:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"3937:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3931:2:17"},"nodeType":"YulFunctionCall","src":"3931:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3945:19:17","statements":[{"nodeType":"YulAssignment","src":"3947:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3956:1:17"},{"name":"_2","nodeType":"YulIdentifier","src":"3959:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3952:3:17"},"nodeType":"YulFunctionCall","src":"3952:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3947:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3927:3:17","statements":[]},"src":"3923:165:17"},{"nodeType":"YulAssignment","src":"4101:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4112:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4117:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4108:3:17"},"nodeType":"YulFunctionCall","src":"4108:16:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4101:3:17"}]}]},"nodeType":"YulCase","src":"3778:356:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3783:1:17","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"3613:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"3624:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3609:3:17"},"nodeType":"YulFunctionCall","src":"3609:18:17"},"nodeType":"YulSwitch","src":"3602:532:17"},{"nodeType":"YulAssignment","src":"4143:10:17","value":{"name":"ret","nodeType":"YulIdentifier","src":"4150:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4143:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3429:3:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3434:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3445:3:17","type":""}],"src":"3315:844:17"},{"body":{"nodeType":"YulBlock","src":"4377:276:17","statements":[{"nodeType":"YulAssignment","src":"4387:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4410:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4395:3:17"},"nodeType":"YulFunctionCall","src":"4395:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4387:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4430:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"4441:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4423:6:17"},"nodeType":"YulFunctionCall","src":"4423:25:17"},"nodeType":"YulExpressionStatement","src":"4423:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4468:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4479:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4464:3:17"},"nodeType":"YulFunctionCall","src":"4464:18:17"},{"name":"value1","nodeType":"YulIdentifier","src":"4484:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4457:6:17"},"nodeType":"YulFunctionCall","src":"4457:34:17"},"nodeType":"YulExpressionStatement","src":"4457:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4511:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4522:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4507:3:17"},"nodeType":"YulFunctionCall","src":"4507:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"4527:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4500:6:17"},"nodeType":"YulFunctionCall","src":"4500:34:17"},"nodeType":"YulExpressionStatement","src":"4500:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4554:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4565:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4550:3:17"},"nodeType":"YulFunctionCall","src":"4550:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"4570:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4543:6:17"},"nodeType":"YulFunctionCall","src":"4543:34:17"},"nodeType":"YulExpressionStatement","src":"4543:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4597:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4608:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:17"},"nodeType":"YulFunctionCall","src":"4593:19:17"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4618:6:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4634:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4630:3:17"},"nodeType":"YulFunctionCall","src":"4630:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"4643:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4626:3:17"},"nodeType":"YulFunctionCall","src":"4626:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4614:3:17"},"nodeType":"YulFunctionCall","src":"4614:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:17"},"nodeType":"YulFunctionCall","src":"4586:61:17"},"nodeType":"YulExpressionStatement","src":"4586:61:17"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4314:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4325:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4333:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4341:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4349:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4357:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4368:4:17","type":""}],"src":"4164:489:17"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_addresst_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n        let value_1 := mload(add(headStart, 64))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value2 := value_1\n        value3 := mload(add(headStart, 96))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040523480156200001257600080fd5b5060405162002cc838038062002cc8833981016040819052620000359162000214565b6040518060400160405280600e81526020016d0a4dec6d6cae8a0deded8408aa8960931b815250604051806040016040528060048152602001630a48aa8960e31b815250601285858582308181898989826000908162000096919062000317565b506001620000a5838262000317565b5060ff81166080524660a052620000bb62000178565b60c0525050600680546001600160a01b038086166001600160a01b03199283168117909355600780549186169190921617905560405190915033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505090151560e05261010052505050600c94909455505042600d5550620004619050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001ac9190620003e3565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080600080608085870312156200022b57600080fd5b845160208601519094506001600160a01b03811681146200024b57600080fd5b604086015190935080151581146200026257600080fd5b6060959095015193969295505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029d57607f821691505b602082108103620002be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031257600081815260208120601f850160051c81016020861015620002ed5750805b601f850160051c820191505b818110156200030e57828155600101620002f9565b5050505b505050565b81516001600160401b0381111562000333576200033362000272565b6200034b8162000344845462000288565b84620002c4565b602080601f8311600181146200038357600084156200036a5750858301515b600019600386901b1c1916600185901b1785556200030e565b600085815260208120601f198616915b82811015620003b45788860151825594840194600190910190840162000393565b5085821015620003d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003f38162000288565b600182811680156200040e5760018114620004245762000455565b60ff198416875282151583028701945062000455565b8760005260208060002060005b858110156200044c5781548a82015290840190820162000431565b50505082870194505b50929695505050505050565b60805160a05160c05160e051610100516127f1620004d7600039600081816103e201528181610f2e01526117960152600081816105e801528181610d3b01528181610e7401528181610fc60152818161161801526116dc01526000610e3901526000610e040152600061043601526127f16000f3fe6080604052600436106102d15760003560e01c80637a8c63b511610179578063a9059cbb116100d6578063d505accf1161008a578063ea7ca27611610064578063ea7ca276146108c9578063ed0d0efb1461091a578063f2fde38b1461094757600080fd5b8063d505accf14610816578063dd62ed3e14610836578063e688747b1461086e57600080fd5b8063bf7e214f116100bb578063bf7e214f14610791578063c53a3985146107be578063d5002f2e1461080157600080fd5b8063a9059cbb14610751578063b70096131461077157600080fd5b80638fcb4e5b1161012d5780639dc29fac116101125780639dc29fac146106fe578063a0712d681461071e578063a1903eab1461073e57600080fd5b80638fcb4e5b146106c957806395d89b41146106e957600080fd5b80637ecebe001161015e5780637ecebe001461062a5780638b32fa23146106575780638da5cb5b1461067757600080fd5b80637a8c63b5146105d65780637a9e5e4b1461060a57600080fd5b80633644e515116102325780634b5159da116101e65780636d780459116101c05780636d7804591461056957806370a0823114610589578063728b952b146105b657600080fd5b80634b5159da14610514578063679aefce1461053457806367aff4841461054957600080fd5b806340c10f191161021757806340c10f19146104b457806342966c68146104d45780634346f03e146104f457600080fd5b80633644e5151461048a57806337cfdaca1461049f57600080fd5b806318160ddd1161028957806323b872dd1161026e57806323b872dd14610404578063313ce5671461042457806334fcf4371461046a57600080fd5b806318160ddd146103ba578063239c70ae146103d057600080fd5b8063095ea7b3116102ba578063095ea7b3146103385780630bade8a4146103685780630ea9b75b1461039857600080fd5b806306a36aee146102d657806306fdde0314610316575b600080fd5b3480156102e257600080fd5b506103036102f13660046122b4565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561032257600080fd5b5061032b610967565b60405161030d91906122d1565b34801561034457600080fd5b5061035861035336600461233d565b6109f5565b604051901515815260200161030d565b34801561037457600080fd5b5061035861038336600461239e565b600a6020526000908152604090205460ff1681565b3480156103a457600080fd5b506103b86103b33660046123d8565b610a6f565b005b3480156103c657600080fd5b5061030360025481565b3480156103dc57600080fd5b506103037f000000000000000000000000000000000000000000000000000000000000000081565b34801561041057600080fd5b5061035861041f36600461241f565b610bf3565b34801561043057600080fd5b506104587f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161030d565b34801561047657600080fd5b506103b8610485366004612460565b610d39565b34801561049657600080fd5b50610303610e00565b3480156104ab57600080fd5b50610303610e5b565b3480156104c057600080fd5b506103b86104cf36600461233d565b610e72565b3480156104e057600080fd5b506103b86104ef366004612460565b610fc4565b34801561050057600080fd5b5061030361050f366004612460565b61108b565b34801561052057600080fd5b506103b861052f366004612479565b6110a9565b34801561054057600080fd5b50600c54610303565b34801561055557600080fd5b506103b86105643660046124b0565b6111d3565b34801561057557600080fd5b5061030361058436600461241f565b611324565b34801561059557600080fd5b506103036105a43660046122b4565b60036020526000908152604090205481565b3480156105c257600080fd5b506103b86105d13660046124de565b61135c565b3480156105e257600080fd5b506103587f000000000000000000000000000000000000000000000000000000000000000081565b34801561061657600080fd5b506103b86106253660046122b4565b61146c565b34801561063657600080fd5b506103036106453660046122b4565b60056020526000908152604090205481565b34801561066357600080fd5b50610303610672366004612460565b6115c9565b34801561068357600080fd5b506006546106a49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161030d565b3480156106d557600080fd5b506103036106e436600461233d565b6115de565b3480156106f557600080fd5b5061032b611609565b34801561070a57600080fd5b506103b861071936600461233d565b611616565b34801561072a57600080fd5b506103b8610739366004612460565b6116da565b61030361074c3660046122b4565b611828565b34801561075d57600080fd5b5061035861076c36600461233d565b6118b4565b34801561077d57600080fd5b5061035861078c36600461250c565b611939565b34801561079d57600080fd5b506007546106a49073ffffffffffffffffffffffffffffffffffffffff1681565b3480156107ca57600080fd5b506106a46107d93660046122b4565b60086020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561080d57600080fd5b50600f54610303565b34801561082257600080fd5b506103b8610831366004612553565b611ad0565b34801561084257600080fd5b506103036108513660046124de565b600460209081526000928352604080842090915290825290205481565b34801561087a57600080fd5b506103586108893660046125c1565b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600b602052604090205460ff919091161c600116151590565b3480156108d557600080fd5b506103586108e43660046125f4565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260096020526040902054600160ff9092161c16151590565b34801561092657600080fd5b5061030361093536600461239e565b600b6020526000908152604090205481565b34801561095357600080fd5b506103b86109623660046122b4565b611def565b6000805461097490612620565b80601f01602080910402602001604051908101604052809291908181526020018280546109a090612620565b80156109ed5780601f106109c2576101008083540402835291602001916109ed565b820191906000526020600020905b8154815290600101906020018083116109d057829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a5d9086815260200190565b60405180910390a35060015b92915050565b610a9d336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b610b08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b8015610b50577fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b179055610b8f565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b15183604051610be6911515815260200190565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c8757610c5583826126a2565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610cbc9084906126a2565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d249087815260200190565b60405180910390a360019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000015610df357610d8d336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b610df3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b610dfb612005565b600c55565b60007f00000000000000000000000000000000000000000000000000000000000000004614610e3657610e31612036565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6000610e656120d0565b600e54610e3191906126b5565b7f000000000000000000000000000000000000000000000000000000000000000015610f2c57610ec6336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b610f2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b7f0000000000000000000000000000000000000000000000000000000000000000811115610fb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e746044820152606401610aff565b610fc08282612125565b5050565b7f00000000000000000000000000000000000000000000000000000000000000001561107e57611018336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b61107e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b611088338261219e565b50565b6000610a69611099600f5490565b6110a1610e5b565b84919061222c565b6110d7336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b61113d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000818152600a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b611201336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b80156112a35773ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b1790556112d6565b73ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610be6911515815260200190565b600061132e612005565b600061134661133b610e5b565b600f5485919061222c565b9050611353858583610bf3565b50949350505050565b61138a336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b6113f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526008602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b60065473ffffffffffffffffffffffffffffffffffffffff1633148061154f57506007546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f91906126c8565b61155857600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000610a696115d6610e5b565b600f546110a1565b60006115e8612005565b60006115f561133b610e5b565b905061160184826118b4565b509392505050565b6001805461097490612620565b7f0000000000000000000000000000000000000000000000000000000000000000156116d05761166a336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b6116d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b610fc0828261219e565b7f0000000000000000000000000000000000000000000000000000000000000000156117945761172e336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b611794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b7f000000000000000000000000000000000000000000000000000000000000000081111561181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e746044820152606401610aff565b6110883382612125565b6000611832612005565b600f546000036118595734600f819055600e819055611852903390612125565b5034919050565b6000611877611867600f5490565b61186f610e5b565b34919061222c565b905034600e600082825461188b91906126b5565b9250508190555080600f60008282546118a491906126b5565b90915550610a6990503334612125565b336000908152600360205260408120805483919083906118d59084906126a2565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a5d9086815260200190565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152600860205260408120549091168015611a31576040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2991906126c8565b915050610d32565b7fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600a602052604090205460ff1680611ac757507fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600b602090815260408083205473ffffffffffffffffffffffffffffffffffffffff891684526009909252909120541615155b95945050505050565b42841015611b3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610aff565b60006001611b46610e00565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611c98573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611d1357508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610aff565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b611e1d336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b611e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60075460009073ffffffffffffffffffffffffffffffffffffffff168015801590611fd857506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd891906126c8565b80611ffd575060065473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b600061200f6120d0565b9050801561202f5780600e600082825461202991906126b5565b90915550505b5042600d55565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161206891906126e5565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000600c546000036120e25750600090565b60006121006301e13380600d54426120fa91906126a2565b90612268565b90506000610d3261211c83600c5461227d90919063ffffffff16565b600e549061227d565b806002600082825461213791906126b5565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906121d39084906126a2565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612192565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048411830215820261226157600080fd5b5091020490565b6000610d3283670de0b6b3a76400008461222c565b6000610d328383670de0b6b3a764000061222c565b73ffffffffffffffffffffffffffffffffffffffff8116811461108857600080fd5b6000602082840312156122c657600080fd5b8135610d3281612292565b600060208083528351808285015260005b818110156122fe578581018301518582016040015282016122e2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806040838503121561235057600080fd5b823561235b81612292565b946020939093013593505050565b80357fffffffff000000000000000000000000000000000000000000000000000000008116811461239957600080fd5b919050565b6000602082840312156123b057600080fd5b610d3282612369565b803560ff8116811461239957600080fd5b801515811461108857600080fd5b6000806000606084860312156123ed57600080fd5b6123f6846123b9565b925061240460208501612369565b91506040840135612414816123ca565b809150509250925092565b60008060006060848603121561243457600080fd5b833561243f81612292565b9250602084013561244f81612292565b929592945050506040919091013590565b60006020828403121561247257600080fd5b5035919050565b6000806040838503121561248c57600080fd5b61249583612369565b915060208301356124a5816123ca565b809150509250929050565b6000806000606084860312156124c557600080fd5b83356124d081612292565b9250612404602085016123b9565b600080604083850312156124f157600080fd5b82356124fc81612292565b915060208301356124a581612292565b60008060006060848603121561252157600080fd5b833561252c81612292565b9250602084013561253c81612292565b915061254a60408501612369565b90509250925092565b600080600080600080600060e0888a03121561256e57600080fd5b873561257981612292565b9650602088013561258981612292565b955060408801359450606088013593506125a5608089016123b9565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156125d457600080fd5b6125dd836123b9565b91506125eb60208401612369565b90509250929050565b6000806040838503121561260757600080fd5b823561261281612292565b91506125eb602084016123b9565b600181811c9082168061263457607f821691505b60208210810361266d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610a6957610a69612673565b80820180821115610a6957610a69612673565b6000602082840312156126da57600080fd5b8151610d32816123ca565b600080835481600182811c91508083168061270157607f831692505b60208084108203612739577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561274d5760018114612780576127ad565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528415158502890196506127ad565b60008a81526020902060005b868110156127a55781548b82015290850190830161278c565b505084890196505b50949897505050505050505056fea2646970667358221220cfd6eb454aa625b34bc581747d599dcdaaeb852a30b300e05d15c414f1fb8dcb64736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CC8 CODESIZE SUB DUP1 PUSH3 0x2CC8 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0xA4DEC6D6CAE8A0DEDED8408AA89 PUSH1 0x93 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xA48AA89 PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH1 0x12 DUP6 DUP6 DUP6 DUP3 ADDRESS DUP2 DUP2 DUP10 DUP10 DUP10 DUP3 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x317 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0xA5 DUP4 DUP3 PUSH3 0x317 JUMP JUMPDEST POP PUSH1 0xFF DUP2 AND PUSH1 0x80 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0xBB PUSH3 0x178 JUMP JUMPDEST PUSH1 0xC0 MSTORE POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0xE0 MSTORE PUSH2 0x100 MSTORE POP POP POP PUSH1 0xC SWAP5 SWAP1 SWAP5 SSTORE POP POP TIMESTAMP PUSH1 0xD SSTORE POP PUSH3 0x461 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x1AC SWAP2 SWAP1 PUSH3 0x3E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x29D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x312 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2ED JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x30E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2F9 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x333 JUMPI PUSH3 0x333 PUSH3 0x272 JUMP JUMPDEST PUSH3 0x34B DUP2 PUSH3 0x344 DUP5 SLOAD PUSH3 0x288 JUMP JUMPDEST DUP5 PUSH3 0x2C4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x383 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x36A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x30E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3B4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x393 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3D3 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH3 0x3F3 DUP2 PUSH3 0x288 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH3 0x40E JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x424 JUMPI PUSH3 0x455 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH3 0x455 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x44C JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH3 0x431 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x27F1 PUSH3 0x4D7 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3E2 ADD MSTORE DUP2 DUP2 PUSH2 0xF2E ADD MSTORE PUSH2 0x1796 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x5E8 ADD MSTORE DUP2 DUP2 PUSH2 0xD3B ADD MSTORE DUP2 DUP2 PUSH2 0xE74 ADD MSTORE DUP2 DUP2 PUSH2 0xFC6 ADD MSTORE DUP2 DUP2 PUSH2 0x1618 ADD MSTORE PUSH2 0x16DC ADD MSTORE PUSH1 0x0 PUSH2 0xE39 ADD MSTORE PUSH1 0x0 PUSH2 0xE04 ADD MSTORE PUSH1 0x0 PUSH2 0x436 ADD MSTORE PUSH2 0x27F1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A8C63B5 GT PUSH2 0x179 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEA7CA276 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEA7CA276 EQ PUSH2 0x8C9 JUMPI DUP1 PUSH4 0xED0D0EFB EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xE688747B EQ PUSH2 0x86E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF7E214F GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xC53A3985 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xB7009613 EQ PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8FCB4E5B GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x71E JUMPI DUP1 PUSH4 0xA1903EAB EQ PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8FCB4E5B EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x8B32FA23 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A8C63B5 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x232 JUMPI DUP1 PUSH4 0x4B5159DA GT PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x6D780459 GT PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x6D780459 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x728B952B EQ PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B5159DA EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x67AFF484 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x217 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x4346F03E EQ PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x37CFDACA EQ PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x289 JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x26E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x239C70AE EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x2BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xBADE8A4 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEA9B75B EQ PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A36AEE EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x316 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x241F JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xE00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xE5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x50F CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x10A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x584 CALLDATASIZE PUSH1 0x4 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x1324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x146C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x15C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x6A4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x15DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x1609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x719 CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x739 CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x303 PUSH2 0x74C CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1828 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x76C CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x78C CALLDATASIZE PUSH1 0x4 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1939 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x6A4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A4 PUSH2 0x7D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x831 CALLDATASIZE PUSH1 0x4 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x851 CALLDATASIZE PUSH1 0x4 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x889 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x8E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SHR AND ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x935 CALLDATASIZE PUSH1 0x4 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x962 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x974 SWAP1 PUSH2 0x2620 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A0 SWAP1 PUSH2 0x2620 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xA5D SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL OR SWAP1 SSTORE PUSH2 0xB8F JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 PUSH1 0xFF AND PUSH32 0xBFE16B2C35CE23DFD1AB0E7B5D086A10060C9B52D1574E1680C881B3B3A2B151 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE6 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC87 JUMPI PUSH2 0xC55 DUP4 DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xCBC SWAP1 DUP5 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xD24 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDF3 JUMPI PUSH2 0xD8D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xDFB PUSH2 0x2005 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xE36 JUMPI PUSH2 0xE31 PUSH2 0x2036 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xF2C JUMPI PUSH2 0xEC6 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xFC0 DUP3 DUP3 PUSH2 0x2125 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x107E JUMPI PUSH2 0x1018 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x1088 CALLER DUP3 PUSH2 0x219E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA69 PUSH2 0x1099 PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10A1 PUSH2 0xE5B JUMP JUMPDEST DUP5 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x10D7 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x36D28126BEF21A4F3765D7FCB7C45CEAD463AE4C41094EF3B771EDE598544103 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1201 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x1267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12A3 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL OR SWAP1 SSTORE PUSH2 0x12D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C9BDD0C8E073EB5EDA2250B18D8E5121FF27B62064FBEEEED4869BB99BC5BF2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE6 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132E PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 PUSH2 0x133B PUSH2 0xE5B JUMP JUMPDEST PUSH1 0xF SLOAD DUP6 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP PUSH2 0x1353 DUP6 DUP6 DUP4 PUSH2 0xBF3 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x138A CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x13F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xA4908E11A5F895B13D51526C331AC93CDD30E59772361C5D07874EB36BFF2065 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x154F JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154F SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA69 PUSH2 0x15D6 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E8 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x133B PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP PUSH2 0x1601 DUP5 DUP3 PUSH2 0x18B4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x974 SWAP1 PUSH2 0x2620 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x16D0 JUMPI PUSH2 0x166A CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x16D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xFC0 DUP3 DUP3 PUSH2 0x219E JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x1794 JUMPI PUSH2 0x172E CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x1088 CALLER DUP3 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1832 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SUB PUSH2 0x1859 JUMPI CALLVALUE PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0xE DUP2 SWAP1 SSTORE PUSH2 0x1852 SWAP1 CALLER SWAP1 PUSH2 0x2125 JUMP JUMPDEST POP CALLVALUE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1877 PUSH2 0x1867 PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x186F PUSH2 0xE5B JUMP JUMPDEST CALLVALUE SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x188B SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18A4 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA69 SWAP1 POP CALLER CALLVALUE PUSH2 0x2125 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x18D5 SWAP1 DUP5 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xA5D SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A29 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD32 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1AC7 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO ISZERO JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B46 PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP14 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D13 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E1D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x1E83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1FD8 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD8 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST DUP1 PUSH2 0x1FFD JUMPI POP PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200F PUSH2 0x20D0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x202F JUMPI DUP1 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2029 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP TIMESTAMP PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 SUB PUSH2 0x20E2 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2100 PUSH4 0x1E13380 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x20FA SWAP2 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 PUSH2 0x2268 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD32 PUSH2 0x211C DUP4 PUSH1 0xC SLOAD PUSH2 0x227D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0x227D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2137 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x21D3 SWAP1 DUP5 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP5 GT DUP4 MUL ISZERO DUP3 MUL PUSH2 0x2261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 MUL DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP4 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x222C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD32 DUP2 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22FE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x22E2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x235B DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x2399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD32 DUP3 PUSH2 0x2369 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F6 DUP5 PUSH2 0x23B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2404 PUSH1 0x20 DUP6 ADD PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2414 DUP2 PUSH2 0x23CA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x243F DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x244F DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x248C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2495 DUP4 PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24A5 DUP2 PUSH2 0x23CA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x24D0 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 POP PUSH2 0x2404 PUSH1 0x20 DUP6 ADD PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x24FC DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24A5 DUP2 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x252C DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x253C DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP2 POP PUSH2 0x254A PUSH1 0x40 DUP6 ADD PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x256E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2579 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2589 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x25A5 PUSH1 0x80 DUP10 ADD PUSH2 0x23B9 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25DD DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25EB PUSH1 0x20 DUP5 ADD PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2612 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP2 POP PUSH2 0x25EB PUSH1 0x20 DUP5 ADD PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2634 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x266D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x2673 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD32 DUP2 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x2701 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x2739 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x274D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2780 JUMPI PUSH2 0x27AD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP7 AND DUP10 MSTORE DUP5 ISZERO ISZERO DUP6 MUL DUP10 ADD SWAP7 POP PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x27A5 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x278C JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xD6 0xEB GASLIMIT 0x4A 0xA6 0x25 0xB3 0x4B 0xC5 DUP2 PUSH21 0x7D599DCDAAEB852A30B300E05D15C414F1FB8DCB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"811:3935:13:-:0;;;1078:396;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;403:395:12;;;;;;;;;;;;;-1:-1:-1;;;403:395:12;;;;;;;;;;;;;;;;-1:-1:-1;;;403:395:12;;;1300:2:13;1316:6;1336:18;1368:14;657:5:12;690:4;1149:6:15;1157:10;605:4:12;611:6;619:8;2101:5:16;2094:4;:12;;;;;;:::i;:::-;-1:-1:-1;2116:6:16;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:16;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;;682:5:14;:14;;-1:-1:-1;;;;;682:14:14;;;-1:-1:-1;;;;;;682:14:14;;;;;;;;706:9;:22;;;;;;;;;;;;744:40;;682:14;;-1:-1:-1;765:10:14;;744:40;;682:5;;744:40;799;;-1:-1:-1;;;;;799:40:14;;;816:10;;799:40;;;;;-1:-1:-1;;;;713:38:12;::::2;;;::::0;761:30:::2;::::0;-1:-1:-1;;;1407:5:13::1;:20:::0;;;;-1:-1:-1;;1452:15:13::1;1437:12;:30:::0;-1:-1:-1;811:3935:13;;-1:-1:-1;811:3935:13;5510:446:16;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;4423:25:17;;;;4464:18;;4457:34;;;;5833:14:16;4507:18:17;;;4500:34;5869:13:16;4550:18:17;;;4543:34;5912:4:16;4593:19:17;;;4586:61;4395:19;;5640:295:16;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;14:575:17:-;108:6;116;124;132;185:3;173:9;164:7;160:23;156:33;153:53;;;202:1;199;192:12;153:53;225:16;;284:2;269:18;;263:25;225:16;;-1:-1:-1;;;;;;317:31:17;;307:42;;297:70;;363:1;360;353:12;297:70;436:2;421:18;;415:25;386:5;;-1:-1:-1;478:15:17;;471:23;459:36;;449:64;;509:1;506;499:12;449:64;579:2;564:18;;;;558:25;14:575;;;;-1:-1:-1;;;14:575:17:o;594:127::-;655:10;650:3;646:20;643:1;636:31;686:4;683:1;676:15;710:4;707:1;700:15;726:380;805:1;801:12;;;;848;;;869:61;;923:4;915:6;911:17;901:27;;869:61;976:2;968:6;965:14;945:18;942:38;939:161;;1022:10;1017:3;1013:20;1010:1;1003:31;1057:4;1054:1;1047:15;1085:4;1082:1;1075:15;939:161;;726:380;;;:::o;1237:545::-;1339:2;1334:3;1331:11;1328:448;;;1375:1;1400:5;1396:2;1389:17;1445:4;1441:2;1431:19;1515:2;1503:10;1499:19;1496:1;1492:27;1486:4;1482:38;1551:4;1539:10;1536:20;1533:47;;;-1:-1:-1;1574:4:17;1533:47;1629:2;1624:3;1620:12;1617:1;1613:20;1607:4;1603:31;1593:41;;1684:82;1702:2;1695:5;1692:13;1684:82;;;1747:17;;;1728:1;1717:13;1684:82;;;1688:3;;;1328:448;1237:545;;;:::o;1958:1352::-;2078:10;;-1:-1:-1;;;;;2100:30:17;;2097:56;;;2133:18;;:::i;:::-;2162:97;2252:6;2212:38;2244:4;2238:11;2212:38;:::i;:::-;2206:4;2162:97;:::i;:::-;2314:4;;2378:2;2367:14;;2395:1;2390:663;;;;3097:1;3114:6;3111:89;;;-1:-1:-1;3166:19:17;;;3160:26;3111:89;-1:-1:-1;;1915:1:17;1911:11;;;1907:24;1903:29;1893:40;1939:1;1935:11;;;1890:57;3213:81;;2360:944;;2390:663;1184:1;1177:14;;;1221:4;1208:18;;-1:-1:-1;;2426:20:17;;;2544:236;2558:7;2555:1;2552:14;2544:236;;;2647:19;;;2641:26;2626:42;;2739:27;;;;2707:1;2695:14;;;;2574:19;;2544:236;;;2548:3;2808:6;2799:7;2796:19;2793:201;;;2869:19;;;2863:26;-1:-1:-1;;2952:1:17;2948:14;;;2964:3;2944:24;2940:37;2936:42;2921:58;2906:74;;2793:201;-1:-1:-1;;;;;3040:1:17;3024:14;;;3020:22;3007:36;;-1:-1:-1;1958:1352:17:o;3315:844::-;3445:3;3474:1;3507:6;3501:13;3537:36;3563:9;3537:36;:::i;:::-;3592:1;3609:18;;;3636:133;;;;3783:1;3778:356;;;;3602:532;;3636:133;-1:-1:-1;;3669:24:17;;3657:37;;3742:14;;3735:22;3723:35;;3714:45;;;-1:-1:-1;3636:133:17;;3778:356;3809:6;3806:1;3799:17;3839:4;3884:2;3881:1;3871:16;3909:1;3923:165;3937:6;3934:1;3931:13;3923:165;;;4015:14;;4002:11;;;3995:35;4058:16;;;;3952:10;;3923:165;;;3927:3;;;4117:6;4112:3;4108:16;4101:23;;3602:532;-1:-1:-1;4150:3:17;;3315:844;-1:-1:-1;;;;;;3315:844:17:o;4164:489::-;811:3935:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_3383":{"entryPoint":3584,"id":3383,"parameterSlots":0,"returnSlots":1},"@_accrue_2568":{"entryPoint":8197,"id":2568,"parameterSlots":0,"returnSlots":0},"@_burn_3469":{"entryPoint":8606,"id":3469,"parameterSlots":2,"returnSlots":0},"@_getAccruedInterest_2604":{"entryPoint":8400,"id":2604,"parameterSlots":0,"returnSlots":1},"@_mint_3441":{"entryPoint":8485,"id":3441,"parameterSlots":2,"returnSlots":0},"@allowance_3119":{"entryPoint":null,"id":3119,"parameterSlots":0,"returnSlots":0},"@approve_3187":{"entryPoint":2549,"id":3187,"parameterSlots":2,"returnSlots":1},"@authority_2626":{"entryPoint":null,"id":2626,"parameterSlots":0,"returnSlots":0},"@balanceOf_3113":{"entryPoint":null,"id":3113,"parameterSlots":0,"returnSlots":0},"@burn_2270":{"entryPoint":4036,"id":2270,"parameterSlots":1,"returnSlots":0},"@burn_2285":{"entryPoint":5654,"id":2285,"parameterSlots":2,"returnSlots":0},"@canCall_2948":{"entryPoint":6457,"id":2948,"parameterSlots":3,"returnSlots":1},"@computeDomainSeparator_3413":{"entryPoint":8246,"id":3413,"parameterSlots":0,"returnSlots":1},"@decimals_3107":{"entryPoint":null,"id":3107,"parameterSlots":0,"returnSlots":0},"@divDown_1263":{"entryPoint":8808,"id":1263,"parameterSlots":2,"returnSlots":1},"@doesRoleHaveCapability_2894":{"entryPoint":null,"id":2894,"parameterSlots":2,"returnSlots":1},"@doesUserHaveRole_2870":{"entryPoint":null,"id":2870,"parameterSlots":2,"returnSlots":1},"@getEthValue_2505":{"entryPoint":5577,"id":2505,"parameterSlots":1,"returnSlots":1},"@getRate_2545":{"entryPoint":null,"id":2545,"parameterSlots":0,"returnSlots":1},"@getRethValue_2521":{"entryPoint":4235,"id":2521,"parameterSlots":1,"returnSlots":1},"@getRolesWithCapability_2846":{"entryPoint":null,"id":2846,"parameterSlots":0,"returnSlots":0},"@getTargetCustomAuthority_2834":{"entryPoint":null,"id":2834,"parameterSlots":0,"returnSlots":0},"@getTotalPooledEther_2480":{"entryPoint":3675,"id":2480,"parameterSlots":0,"returnSlots":1},"@getTotalShares_2488":{"entryPoint":null,"id":2488,"parameterSlots":0,"returnSlots":1},"@getUserRoles_2838":{"entryPoint":null,"id":2838,"parameterSlots":0,"returnSlots":0},"@isAuthorized_2709":{"entryPoint":7924,"id":2709,"parameterSlots":2,"returnSlots":1},"@isCapabilityPublic_2842":{"entryPoint":null,"id":2842,"parameterSlots":0,"returnSlots":0},"@isCompetitionMode_2153":{"entryPoint":null,"id":2153,"parameterSlots":0,"returnSlots":0},"@maxMintAmount_2155":{"entryPoint":null,"id":2155,"parameterSlots":0,"returnSlots":0},"@mint_2234":{"entryPoint":5850,"id":2234,"parameterSlots":1,"returnSlots":0},"@mint_2256":{"entryPoint":3698,"id":2256,"parameterSlots":2,"returnSlots":0},"@mulDivDown_1227":{"entryPoint":8748,"id":1227,"parameterSlots":3,"returnSlots":1},"@mulDown_1245":{"entryPoint":8829,"id":1245,"parameterSlots":2,"returnSlots":1},"@name_3103":{"entryPoint":2407,"id":3103,"parameterSlots":0,"returnSlots":0},"@nonces_3127":{"entryPoint":null,"id":3127,"parameterSlots":0,"returnSlots":0},"@owner_2623":{"entryPoint":null,"id":2623,"parameterSlots":0,"returnSlots":0},"@permit_3368":{"entryPoint":6864,"id":3368,"parameterSlots":7,"returnSlots":0},"@setAuthority_2745":{"entryPoint":5228,"id":2745,"parameterSlots":1,"returnSlots":0},"@setPublicCapability_2991":{"entryPoint":4265,"id":2991,"parameterSlots":2,"returnSlots":0},"@setRate_2537":{"entryPoint":3385,"id":2537,"parameterSlots":1,"returnSlots":0},"@setRoleCapability_3081":{"entryPoint":2671,"id":3081,"parameterSlots":3,"returnSlots":0},"@setTargetCustomAuthority_2970":{"entryPoint":4956,"id":2970,"parameterSlots":2,"returnSlots":0},"@setUserRole_3036":{"entryPoint":4563,"id":3036,"parameterSlots":3,"returnSlots":0},"@submit_2406":{"entryPoint":6184,"id":2406,"parameterSlots":1,"returnSlots":1},"@symbol_3105":{"entryPoint":5641,"id":3105,"parameterSlots":0,"returnSlots":0},"@totalSupply_3109":{"entryPoint":null,"id":3109,"parameterSlots":0,"returnSlots":0},"@transferFrom_3281":{"entryPoint":3059,"id":3281,"parameterSlots":3,"returnSlots":1},"@transferOwnership_2763":{"entryPoint":7663,"id":2763,"parameterSlots":1,"returnSlots":0},"@transferSharesFrom_2469":{"entryPoint":4900,"id":2469,"parameterSlots":3,"returnSlots":1},"@transferShares_2436":{"entryPoint":5598,"id":2436,"parameterSlots":2,"returnSlots":1},"@transfer_3220":{"entryPoint":6324,"id":3220,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4":{"entryPoint":9065,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_bytes4":{"entryPoint":9484,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9247,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":9555,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_contract$_Authority_$2777":{"entryPoint":9438,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9021,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint8":{"entryPoint":9716,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint8t_bool":{"entryPoint":9392,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":9118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4t_bool":{"entryPoint":9337,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_Authority_$2777":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8t_bytes4":{"entryPoint":9665,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8t_bytes4t_bool":{"entryPoint":9176,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint8":{"entryPoint":9145,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_bytes_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9909,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9890,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9760,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9843,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":8850,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":9162,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14687:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:17","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:17"},"nodeType":"YulFunctionCall","src":"148:12:17"},"nodeType":"YulExpressionStatement","src":"148:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:17"},"nodeType":"YulFunctionCall","src":"89:54:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:17"},"nodeType":"YulFunctionCall","src":"79:65:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:17"},"nodeType":"YulFunctionCall","src":"72:73:17"},"nodeType":"YulIf","src":"69:93:17"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:17","type":""}],"src":"14:154:17"},{"body":{"nodeType":"YulBlock","src":"243:177:17","statements":[{"body":{"nodeType":"YulBlock","src":"289:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"301:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"291:6:17"},"nodeType":"YulFunctionCall","src":"291:12:17"},"nodeType":"YulExpressionStatement","src":"291:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"264:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"273:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"260:3:17"},"nodeType":"YulFunctionCall","src":"260:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"285:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"256:3:17"},"nodeType":"YulFunctionCall","src":"256:32:17"},"nodeType":"YulIf","src":"253:52:17"},{"nodeType":"YulVariableDeclaration","src":"314:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"340:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"327:12:17"},"nodeType":"YulFunctionCall","src":"327:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"318:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"384:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"359:24:17"},"nodeType":"YulFunctionCall","src":"359:31:17"},"nodeType":"YulExpressionStatement","src":"359:31:17"},{"nodeType":"YulAssignment","src":"399:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"409:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"399:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"209:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"220:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"232:6:17","type":""}],"src":"173:247:17"},{"body":{"nodeType":"YulBlock","src":"526:76:17","statements":[{"nodeType":"YulAssignment","src":"536:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"559:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"544:3:17"},"nodeType":"YulFunctionCall","src":"544:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"536:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"578:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"589:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"571:6:17"},"nodeType":"YulFunctionCall","src":"571:25:17"},"nodeType":"YulExpressionStatement","src":"571:25:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"495:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"506:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"517:4:17","type":""}],"src":"425:177:17"},{"body":{"nodeType":"YulBlock","src":"728:486:17","statements":[{"nodeType":"YulVariableDeclaration","src":"738:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"748:2:17","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"742:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"766:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"777:2:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"759:6:17"},"nodeType":"YulFunctionCall","src":"759:21:17"},"nodeType":"YulExpressionStatement","src":"759:21:17"},{"nodeType":"YulVariableDeclaration","src":"789:27:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"809:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"803:5:17"},"nodeType":"YulFunctionCall","src":"803:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"793:6:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"836:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"832:3:17"},"nodeType":"YulFunctionCall","src":"832:18:17"},{"name":"length","nodeType":"YulIdentifier","src":"852:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"825:6:17"},"nodeType":"YulFunctionCall","src":"825:34:17"},"nodeType":"YulExpressionStatement","src":"825:34:17"},{"nodeType":"YulVariableDeclaration","src":"868:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"877:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"872:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"937:90:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"966:9:17"},{"name":"i","nodeType":"YulIdentifier","src":"977:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"962:3:17"},"nodeType":"YulFunctionCall","src":"962:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"958:3:17"},"nodeType":"YulFunctionCall","src":"958:26:17"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1000:6:17"},{"name":"i","nodeType":"YulIdentifier","src":"1008:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:17"},"nodeType":"YulFunctionCall","src":"996:14:17"},{"name":"_1","nodeType":"YulIdentifier","src":"1012:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"992:3:17"},"nodeType":"YulFunctionCall","src":"992:23:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"986:5:17"},"nodeType":"YulFunctionCall","src":"986:30:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"951:6:17"},"nodeType":"YulFunctionCall","src":"951:66:17"},"nodeType":"YulExpressionStatement","src":"951:66:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"898:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"901:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"895:2:17"},"nodeType":"YulFunctionCall","src":"895:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"909:19:17","statements":[{"nodeType":"YulAssignment","src":"911:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"920:1:17"},{"name":"_1","nodeType":"YulIdentifier","src":"923:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"916:3:17"},"nodeType":"YulFunctionCall","src":"916:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"911:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"891:3:17","statements":[]},"src":"887:140:17"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1051:9:17"},{"name":"length","nodeType":"YulIdentifier","src":"1062:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:17"},"nodeType":"YulFunctionCall","src":"1047:22:17"},{"kind":"number","nodeType":"YulLiteral","src":"1071:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:17"},"nodeType":"YulFunctionCall","src":"1043:31:17"},{"kind":"number","nodeType":"YulLiteral","src":"1076:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1036:6:17"},"nodeType":"YulFunctionCall","src":"1036:42:17"},"nodeType":"YulExpressionStatement","src":"1036:42:17"},{"nodeType":"YulAssignment","src":"1087:121:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1103:9:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1122:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1130:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:17"},"nodeType":"YulFunctionCall","src":"1118:15:17"},{"kind":"number","nodeType":"YulLiteral","src":"1135:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1114:3:17"},"nodeType":"YulFunctionCall","src":"1114:88:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1099:3:17"},"nodeType":"YulFunctionCall","src":"1099:104:17"},{"kind":"number","nodeType":"YulLiteral","src":"1205:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:17"},"nodeType":"YulFunctionCall","src":"1095:113:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1087:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"697:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"708:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"719:4:17","type":""}],"src":"607:607:17"},{"body":{"nodeType":"YulBlock","src":"1306:228:17","statements":[{"body":{"nodeType":"YulBlock","src":"1352:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1361:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1364:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1354:6:17"},"nodeType":"YulFunctionCall","src":"1354:12:17"},"nodeType":"YulExpressionStatement","src":"1354:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1336:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1323:3:17"},"nodeType":"YulFunctionCall","src":"1323:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1348:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1319:3:17"},"nodeType":"YulFunctionCall","src":"1319:32:17"},"nodeType":"YulIf","src":"1316:52:17"},{"nodeType":"YulVariableDeclaration","src":"1377:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1390:12:17"},"nodeType":"YulFunctionCall","src":"1390:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1381:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1422:24:17"},"nodeType":"YulFunctionCall","src":"1422:31:17"},"nodeType":"YulExpressionStatement","src":"1422:31:17"},{"nodeType":"YulAssignment","src":"1462:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1472:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1462:6:17"}]},{"nodeType":"YulAssignment","src":"1486:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:17"},"nodeType":"YulFunctionCall","src":"1509:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1496:12:17"},"nodeType":"YulFunctionCall","src":"1496:32:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1486:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1264:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1275:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1287:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1295:6:17","type":""}],"src":"1219:315:17"},{"body":{"nodeType":"YulBlock","src":"1634:92:17","statements":[{"nodeType":"YulAssignment","src":"1644:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:17"},"nodeType":"YulFunctionCall","src":"1652:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1711:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:17"},"nodeType":"YulFunctionCall","src":"1704:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1697:6:17"},"nodeType":"YulFunctionCall","src":"1697:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:17"},"nodeType":"YulFunctionCall","src":"1679:41:17"},"nodeType":"YulExpressionStatement","src":"1679:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:17","type":""}],"src":"1539:187:17"},{"body":{"nodeType":"YulBlock","src":"1779:171:17","statements":[{"nodeType":"YulAssignment","src":"1789:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1811:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1798:12:17"},"nodeType":"YulFunctionCall","src":"1798:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1789:5:17"}]},{"body":{"nodeType":"YulBlock","src":"1928:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1937:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1940:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1930:6:17"},"nodeType":"YulFunctionCall","src":"1930:12:17"},"nodeType":"YulExpressionStatement","src":"1930:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1840:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1858:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1847:3:17"},"nodeType":"YulFunctionCall","src":"1847:78:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1837:2:17"},"nodeType":"YulFunctionCall","src":"1837:89:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1830:6:17"},"nodeType":"YulFunctionCall","src":"1830:97:17"},"nodeType":"YulIf","src":"1827:117:17"}]},"name":"abi_decode_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1758:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1769:5:17","type":""}],"src":"1731:219:17"},{"body":{"nodeType":"YulBlock","src":"2024:115:17","statements":[{"body":{"nodeType":"YulBlock","src":"2070:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2079:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2082:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2072:6:17"},"nodeType":"YulFunctionCall","src":"2072:12:17"},"nodeType":"YulExpressionStatement","src":"2072:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2045:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2054:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2041:3:17"},"nodeType":"YulFunctionCall","src":"2041:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2066:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2037:3:17"},"nodeType":"YulFunctionCall","src":"2037:32:17"},"nodeType":"YulIf","src":"2034:52:17"},{"nodeType":"YulAssignment","src":"2095:38:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2123:9:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"2105:17:17"},"nodeType":"YulFunctionCall","src":"2105:28:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2095:6:17"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1990:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2001:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2013:6:17","type":""}],"src":"1955:184:17"},{"body":{"nodeType":"YulBlock","src":"2191:109:17","statements":[{"nodeType":"YulAssignment","src":"2201:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2223:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2210:12:17"},"nodeType":"YulFunctionCall","src":"2210:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2201:5:17"}]},{"body":{"nodeType":"YulBlock","src":"2278:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2290:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2280:6:17"},"nodeType":"YulFunctionCall","src":"2280:12:17"},"nodeType":"YulExpressionStatement","src":"2280:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2252:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2263:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2270:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2259:3:17"},"nodeType":"YulFunctionCall","src":"2259:16:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2249:2:17"},"nodeType":"YulFunctionCall","src":"2249:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2242:6:17"},"nodeType":"YulFunctionCall","src":"2242:35:17"},"nodeType":"YulIf","src":"2239:55:17"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2170:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2181:5:17","type":""}],"src":"2144:156:17"},{"body":{"nodeType":"YulBlock","src":"2347:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"2401:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2410:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2413:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2403:6:17"},"nodeType":"YulFunctionCall","src":"2403:12:17"},"nodeType":"YulExpressionStatement","src":"2403:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2370:5:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2391:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2384:6:17"},"nodeType":"YulFunctionCall","src":"2384:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2377:6:17"},"nodeType":"YulFunctionCall","src":"2377:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2367:2:17"},"nodeType":"YulFunctionCall","src":"2367:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2360:6:17"},"nodeType":"YulFunctionCall","src":"2360:40:17"},"nodeType":"YulIf","src":"2357:60:17"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2336:5:17","type":""}],"src":"2305:118:17"},{"body":{"nodeType":"YulBlock","src":"2526:285:17","statements":[{"body":{"nodeType":"YulBlock","src":"2572:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2581:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2584:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2574:6:17"},"nodeType":"YulFunctionCall","src":"2574:12:17"},"nodeType":"YulExpressionStatement","src":"2574:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2547:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2556:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2543:3:17"},"nodeType":"YulFunctionCall","src":"2543:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2568:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2539:3:17"},"nodeType":"YulFunctionCall","src":"2539:32:17"},"nodeType":"YulIf","src":"2536:52:17"},{"nodeType":"YulAssignment","src":"2597:37:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2624:9:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"2607:16:17"},"nodeType":"YulFunctionCall","src":"2607:27:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:17"}]},{"nodeType":"YulAssignment","src":"2643:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2686:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:17"},"nodeType":"YulFunctionCall","src":"2671:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"2653:17:17"},"nodeType":"YulFunctionCall","src":"2653:37:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2643:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2699:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:17"},"nodeType":"YulFunctionCall","src":"2725:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2712:12:17"},"nodeType":"YulFunctionCall","src":"2712:32:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2703:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2775:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2753:21:17"},"nodeType":"YulFunctionCall","src":"2753:28:17"},"nodeType":"YulExpressionStatement","src":"2753:28:17"},{"nodeType":"YulAssignment","src":"2790:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2800:5:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2790:6:17"}]}]},"name":"abi_decode_tuple_t_uint8t_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2476:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2487:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2499:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2507:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2515:6:17","type":""}],"src":"2428:383:17"},{"body":{"nodeType":"YulBlock","src":"2917:76:17","statements":[{"nodeType":"YulAssignment","src":"2927:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:17"},"nodeType":"YulFunctionCall","src":"2935:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2927:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"2980:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2962:6:17"},"nodeType":"YulFunctionCall","src":"2962:25:17"},"nodeType":"YulExpressionStatement","src":"2962:25:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2886:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2897:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2908:4:17","type":""}],"src":"2816:177:17"},{"body":{"nodeType":"YulBlock","src":"3102:352:17","statements":[{"body":{"nodeType":"YulBlock","src":"3148:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3157:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3160:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3150:6:17"},"nodeType":"YulFunctionCall","src":"3150:12:17"},"nodeType":"YulExpressionStatement","src":"3150:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3123:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3132:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3119:3:17"},"nodeType":"YulFunctionCall","src":"3119:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3144:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3115:3:17"},"nodeType":"YulFunctionCall","src":"3115:32:17"},"nodeType":"YulIf","src":"3112:52:17"},{"nodeType":"YulVariableDeclaration","src":"3173:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3199:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3186:12:17"},"nodeType":"YulFunctionCall","src":"3186:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3177:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3243:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3218:24:17"},"nodeType":"YulFunctionCall","src":"3218:31:17"},"nodeType":"YulExpressionStatement","src":"3218:31:17"},{"nodeType":"YulAssignment","src":"3258:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3268:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3258:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3282:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3325:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:17"},"nodeType":"YulFunctionCall","src":"3310:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3297:12:17"},"nodeType":"YulFunctionCall","src":"3297:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3286:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3363:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3338:24:17"},"nodeType":"YulFunctionCall","src":"3338:33:17"},"nodeType":"YulExpressionStatement","src":"3338:33:17"},{"nodeType":"YulAssignment","src":"3380:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3390:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3380:6:17"}]},{"nodeType":"YulAssignment","src":"3406:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3433:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3444:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3429:3:17"},"nodeType":"YulFunctionCall","src":"3429:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3416:12:17"},"nodeType":"YulFunctionCall","src":"3416:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3406:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3052:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3063:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3075:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3083:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3091:6:17","type":""}],"src":"2998:456:17"},{"body":{"nodeType":"YulBlock","src":"3556:87:17","statements":[{"nodeType":"YulAssignment","src":"3566:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3589:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:17"},"nodeType":"YulFunctionCall","src":"3574:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3566:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3608:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3623:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3631:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3619:3:17"},"nodeType":"YulFunctionCall","src":"3619:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3601:6:17"},"nodeType":"YulFunctionCall","src":"3601:36:17"},"nodeType":"YulExpressionStatement","src":"3601:36:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3536:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3547:4:17","type":""}],"src":"3459:184:17"},{"body":{"nodeType":"YulBlock","src":"3718:110:17","statements":[{"body":{"nodeType":"YulBlock","src":"3764:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3773:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3776:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3766:6:17"},"nodeType":"YulFunctionCall","src":"3766:12:17"},"nodeType":"YulExpressionStatement","src":"3766:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3739:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3748:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3735:3:17"},"nodeType":"YulFunctionCall","src":"3735:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3760:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3731:3:17"},"nodeType":"YulFunctionCall","src":"3731:32:17"},"nodeType":"YulIf","src":"3728:52:17"},{"nodeType":"YulAssignment","src":"3789:33:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3812:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3799:12:17"},"nodeType":"YulFunctionCall","src":"3799:23:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3789:6:17"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3684:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3695:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3707:6:17","type":""}],"src":"3648:180:17"},{"body":{"nodeType":"YulBlock","src":"3916:230:17","statements":[{"body":{"nodeType":"YulBlock","src":"3962:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:17"},"nodeType":"YulFunctionCall","src":"3964:12:17"},"nodeType":"YulExpressionStatement","src":"3964:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3937:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3933:3:17"},"nodeType":"YulFunctionCall","src":"3933:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3929:3:17"},"nodeType":"YulFunctionCall","src":"3929:32:17"},"nodeType":"YulIf","src":"3926:52:17"},{"nodeType":"YulAssignment","src":"3987:38:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4015:9:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"3997:17:17"},"nodeType":"YulFunctionCall","src":"3997:28:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3987:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4034:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4064:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4075:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:17"},"nodeType":"YulFunctionCall","src":"4060:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4047:12:17"},"nodeType":"YulFunctionCall","src":"4047:32:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4038:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4110:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4088:21:17"},"nodeType":"YulFunctionCall","src":"4088:28:17"},"nodeType":"YulExpressionStatement","src":"4088:28:17"},{"nodeType":"YulAssignment","src":"4125:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4135:5:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4125:6:17"}]}]},"name":"abi_decode_tuple_t_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3874:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3885:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3897:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3905:6:17","type":""}],"src":"3833:313:17"},{"body":{"nodeType":"YulBlock","src":"4250:353:17","statements":[{"body":{"nodeType":"YulBlock","src":"4296:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4305:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4308:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4298:6:17"},"nodeType":"YulFunctionCall","src":"4298:12:17"},"nodeType":"YulExpressionStatement","src":"4298:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4271:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4280:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4267:3:17"},"nodeType":"YulFunctionCall","src":"4267:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4292:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4263:3:17"},"nodeType":"YulFunctionCall","src":"4263:32:17"},"nodeType":"YulIf","src":"4260:52:17"},{"nodeType":"YulVariableDeclaration","src":"4321:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4347:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4334:12:17"},"nodeType":"YulFunctionCall","src":"4334:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4325:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4391:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4366:24:17"},"nodeType":"YulFunctionCall","src":"4366:31:17"},"nodeType":"YulExpressionStatement","src":"4366:31:17"},{"nodeType":"YulAssignment","src":"4406:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4416:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4406:6:17"}]},{"nodeType":"YulAssignment","src":"4430:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4461:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4472:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4457:3:17"},"nodeType":"YulFunctionCall","src":"4457:18:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"4440:16:17"},"nodeType":"YulFunctionCall","src":"4440:36:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4430:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4485:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4517:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4528:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4513:3:17"},"nodeType":"YulFunctionCall","src":"4513:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4500:12:17"},"nodeType":"YulFunctionCall","src":"4500:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4489:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4563:7:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4541:21:17"},"nodeType":"YulFunctionCall","src":"4541:30:17"},"nodeType":"YulExpressionStatement","src":"4541:30:17"},{"nodeType":"YulAssignment","src":"4580:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4590:7:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4580:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint8t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4200:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4211:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4223:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4231:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4239:6:17","type":""}],"src":"4151:452:17"},{"body":{"nodeType":"YulBlock","src":"4713:301:17","statements":[{"body":{"nodeType":"YulBlock","src":"4759:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4768:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4771:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4761:6:17"},"nodeType":"YulFunctionCall","src":"4761:12:17"},"nodeType":"YulExpressionStatement","src":"4761:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4734:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4743:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4730:3:17"},"nodeType":"YulFunctionCall","src":"4730:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4755:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4726:3:17"},"nodeType":"YulFunctionCall","src":"4726:32:17"},"nodeType":"YulIf","src":"4723:52:17"},{"nodeType":"YulVariableDeclaration","src":"4784:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4810:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4797:12:17"},"nodeType":"YulFunctionCall","src":"4797:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4788:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4854:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4829:24:17"},"nodeType":"YulFunctionCall","src":"4829:31:17"},"nodeType":"YulExpressionStatement","src":"4829:31:17"},{"nodeType":"YulAssignment","src":"4869:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4879:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4869:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"4893:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4925:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4936:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4921:3:17"},"nodeType":"YulFunctionCall","src":"4921:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4908:12:17"},"nodeType":"YulFunctionCall","src":"4908:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4897:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4974:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4949:24:17"},"nodeType":"YulFunctionCall","src":"4949:33:17"},"nodeType":"YulExpressionStatement","src":"4949:33:17"},{"nodeType":"YulAssignment","src":"4991:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5001:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4991:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_contract$_Authority_$2777","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4671:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4682:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4694:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4702:6:17","type":""}],"src":"4608:406:17"},{"body":{"nodeType":"YulBlock","src":"5107:177:17","statements":[{"body":{"nodeType":"YulBlock","src":"5153:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5162:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5165:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5155:6:17"},"nodeType":"YulFunctionCall","src":"5155:12:17"},"nodeType":"YulExpressionStatement","src":"5155:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5128:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5124:3:17"},"nodeType":"YulFunctionCall","src":"5124:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5149:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5120:3:17"},"nodeType":"YulFunctionCall","src":"5120:32:17"},"nodeType":"YulIf","src":"5117:52:17"},{"nodeType":"YulVariableDeclaration","src":"5178:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5204:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5191:12:17"},"nodeType":"YulFunctionCall","src":"5191:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5182:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5248:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5223:24:17"},"nodeType":"YulFunctionCall","src":"5223:31:17"},"nodeType":"YulExpressionStatement","src":"5223:31:17"},{"nodeType":"YulAssignment","src":"5263:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5273:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5263:6:17"}]}]},"name":"abi_decode_tuple_t_contract$_Authority_$2777","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5073:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5084:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5096:6:17","type":""}],"src":"5019:265:17"},{"body":{"nodeType":"YulBlock","src":"5390:125:17","statements":[{"nodeType":"YulAssignment","src":"5400:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5412:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5423:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:17"},"nodeType":"YulFunctionCall","src":"5408:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5400:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5457:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5465:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5453:3:17"},"nodeType":"YulFunctionCall","src":"5453:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5435:6:17"},"nodeType":"YulFunctionCall","src":"5435:74:17"},"nodeType":"YulExpressionStatement","src":"5435:74:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5359:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5370:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5381:4:17","type":""}],"src":"5289:226:17"},{"body":{"nodeType":"YulBlock","src":"5623:357:17","statements":[{"body":{"nodeType":"YulBlock","src":"5669:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5678:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5681:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5671:6:17"},"nodeType":"YulFunctionCall","src":"5671:12:17"},"nodeType":"YulExpressionStatement","src":"5671:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5644:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5653:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5640:3:17"},"nodeType":"YulFunctionCall","src":"5640:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5665:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5636:3:17"},"nodeType":"YulFunctionCall","src":"5636:32:17"},"nodeType":"YulIf","src":"5633:52:17"},{"nodeType":"YulVariableDeclaration","src":"5694:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5720:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5707:12:17"},"nodeType":"YulFunctionCall","src":"5707:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5698:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5764:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5739:24:17"},"nodeType":"YulFunctionCall","src":"5739:31:17"},"nodeType":"YulExpressionStatement","src":"5739:31:17"},{"nodeType":"YulAssignment","src":"5779:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5789:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"5803:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5835:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5846:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5831:3:17"},"nodeType":"YulFunctionCall","src":"5831:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5818:12:17"},"nodeType":"YulFunctionCall","src":"5818:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5807:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5884:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5859:24:17"},"nodeType":"YulFunctionCall","src":"5859:33:17"},"nodeType":"YulExpressionStatement","src":"5859:33:17"},{"nodeType":"YulAssignment","src":"5901:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5911:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5901:6:17"}]},{"nodeType":"YulAssignment","src":"5927:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5959:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5970:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5955:3:17"},"nodeType":"YulFunctionCall","src":"5955:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"5937:17:17"},"nodeType":"YulFunctionCall","src":"5937:37:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5927:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5573:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5584:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5596:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5604:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5612:6:17","type":""}],"src":"5520:460:17"},{"body":{"nodeType":"YulBlock","src":"6104:125:17","statements":[{"nodeType":"YulAssignment","src":"6114:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6126:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6137:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6122:3:17"},"nodeType":"YulFunctionCall","src":"6122:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6114:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6156:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6171:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6179:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6167:3:17"},"nodeType":"YulFunctionCall","src":"6167:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6149:6:17"},"nodeType":"YulFunctionCall","src":"6149:74:17"},"nodeType":"YulExpressionStatement","src":"6149:74:17"}]},"name":"abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6084:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6095:4:17","type":""}],"src":"5985:244:17"},{"body":{"nodeType":"YulBlock","src":"6404:564:17","statements":[{"body":{"nodeType":"YulBlock","src":"6451:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6460:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6463:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6453:6:17"},"nodeType":"YulFunctionCall","src":"6453:12:17"},"nodeType":"YulExpressionStatement","src":"6453:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6425:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6434:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6421:3:17"},"nodeType":"YulFunctionCall","src":"6421:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6446:3:17","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6417:3:17"},"nodeType":"YulFunctionCall","src":"6417:33:17"},"nodeType":"YulIf","src":"6414:53:17"},{"nodeType":"YulVariableDeclaration","src":"6476:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6502:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6489:12:17"},"nodeType":"YulFunctionCall","src":"6489:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6480:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6546:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6521:24:17"},"nodeType":"YulFunctionCall","src":"6521:31:17"},"nodeType":"YulExpressionStatement","src":"6521:31:17"},{"nodeType":"YulAssignment","src":"6561:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"6571:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6561:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"6585:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6617:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6628:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:17"},"nodeType":"YulFunctionCall","src":"6613:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6600:12:17"},"nodeType":"YulFunctionCall","src":"6600:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6589:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6666:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6641:24:17"},"nodeType":"YulFunctionCall","src":"6641:33:17"},"nodeType":"YulExpressionStatement","src":"6641:33:17"},{"nodeType":"YulAssignment","src":"6683:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6693:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6683:6:17"}]},{"nodeType":"YulAssignment","src":"6709:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6736:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6747:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6732:3:17"},"nodeType":"YulFunctionCall","src":"6732:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6719:12:17"},"nodeType":"YulFunctionCall","src":"6719:32:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6709:6:17"}]},{"nodeType":"YulAssignment","src":"6760:42:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6798:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:17"},"nodeType":"YulFunctionCall","src":"6783:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6770:12:17"},"nodeType":"YulFunctionCall","src":"6770:32:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6760:6:17"}]},{"nodeType":"YulAssignment","src":"6811:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6842:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6853:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6838:3:17"},"nodeType":"YulFunctionCall","src":"6838:19:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6821:16:17"},"nodeType":"YulFunctionCall","src":"6821:37:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6811:6:17"}]},{"nodeType":"YulAssignment","src":"6867:43:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6894:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6905:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6890:3:17"},"nodeType":"YulFunctionCall","src":"6890:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6877:12:17"},"nodeType":"YulFunctionCall","src":"6877:33:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6867:6:17"}]},{"nodeType":"YulAssignment","src":"6919:43:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6957:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:17"},"nodeType":"YulFunctionCall","src":"6942:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6929:12:17"},"nodeType":"YulFunctionCall","src":"6929:33:17"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6919:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6322:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6333:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6345:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6353:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6361:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6369:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6377:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6385:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6393:6:17","type":""}],"src":"6234:734:17"},{"body":{"nodeType":"YulBlock","src":"7060:301:17","statements":[{"body":{"nodeType":"YulBlock","src":"7106:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7115:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7118:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7108:6:17"},"nodeType":"YulFunctionCall","src":"7108:12:17"},"nodeType":"YulExpressionStatement","src":"7108:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7081:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7090:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7077:3:17"},"nodeType":"YulFunctionCall","src":"7077:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7102:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7073:3:17"},"nodeType":"YulFunctionCall","src":"7073:32:17"},"nodeType":"YulIf","src":"7070:52:17"},{"nodeType":"YulVariableDeclaration","src":"7131:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7157:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7144:12:17"},"nodeType":"YulFunctionCall","src":"7144:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7135:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7201:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7176:24:17"},"nodeType":"YulFunctionCall","src":"7176:31:17"},"nodeType":"YulExpressionStatement","src":"7176:31:17"},{"nodeType":"YulAssignment","src":"7216:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7226:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7216:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"7240:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7272:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7283:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7268:3:17"},"nodeType":"YulFunctionCall","src":"7268:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7255:12:17"},"nodeType":"YulFunctionCall","src":"7255:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7244:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7321:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7296:24:17"},"nodeType":"YulFunctionCall","src":"7296:33:17"},"nodeType":"YulExpressionStatement","src":"7296:33:17"},{"nodeType":"YulAssignment","src":"7338:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7348:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7338:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7018:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7029:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7041:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7049:6:17","type":""}],"src":"6973:388:17"},{"body":{"nodeType":"YulBlock","src":"7450:170:17","statements":[{"body":{"nodeType":"YulBlock","src":"7496:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7505:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7508:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7498:6:17"},"nodeType":"YulFunctionCall","src":"7498:12:17"},"nodeType":"YulExpressionStatement","src":"7498:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7471:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7480:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7467:3:17"},"nodeType":"YulFunctionCall","src":"7467:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7492:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7463:3:17"},"nodeType":"YulFunctionCall","src":"7463:32:17"},"nodeType":"YulIf","src":"7460:52:17"},{"nodeType":"YulAssignment","src":"7521:37:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7548:9:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"7531:16:17"},"nodeType":"YulFunctionCall","src":"7531:27:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7521:6:17"}]},{"nodeType":"YulAssignment","src":"7567:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7599:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7610:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:17"},"nodeType":"YulFunctionCall","src":"7595:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"7577:17:17"},"nodeType":"YulFunctionCall","src":"7577:37:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7567:6:17"}]}]},"name":"abi_decode_tuple_t_uint8t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7408:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7419:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7431:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7439:6:17","type":""}],"src":"7366:254:17"},{"body":{"nodeType":"YulBlock","src":"7710:232:17","statements":[{"body":{"nodeType":"YulBlock","src":"7756:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7765:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7768:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7758:6:17"},"nodeType":"YulFunctionCall","src":"7758:12:17"},"nodeType":"YulExpressionStatement","src":"7758:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7731:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7727:3:17"},"nodeType":"YulFunctionCall","src":"7727:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7752:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7723:3:17"},"nodeType":"YulFunctionCall","src":"7723:32:17"},"nodeType":"YulIf","src":"7720:52:17"},{"nodeType":"YulVariableDeclaration","src":"7781:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7807:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7794:12:17"},"nodeType":"YulFunctionCall","src":"7794:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7785:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7851:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7826:24:17"},"nodeType":"YulFunctionCall","src":"7826:31:17"},"nodeType":"YulExpressionStatement","src":"7826:31:17"},{"nodeType":"YulAssignment","src":"7866:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"7876:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7866:6:17"}]},{"nodeType":"YulAssignment","src":"7890:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7921:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7932:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7917:3:17"},"nodeType":"YulFunctionCall","src":"7917:18:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"7900:16:17"},"nodeType":"YulFunctionCall","src":"7900:36:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7890:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7668:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7679:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7691:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7699:6:17","type":""}],"src":"7625:317:17"},{"body":{"nodeType":"YulBlock","src":"8002:382:17","statements":[{"nodeType":"YulAssignment","src":"8012:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8026:1:17","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8029:4:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8022:3:17"},"nodeType":"YulFunctionCall","src":"8022:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8012:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"8043:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8073:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8079:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8069:3:17"},"nodeType":"YulFunctionCall","src":"8069:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8047:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8120:31:17","statements":[{"nodeType":"YulAssignment","src":"8122:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8136:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8144:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8132:3:17"},"nodeType":"YulFunctionCall","src":"8132:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8122:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8100:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8093:6:17"},"nodeType":"YulFunctionCall","src":"8093:26:17"},"nodeType":"YulIf","src":"8090:61:17"},{"body":{"nodeType":"YulBlock","src":"8210:168:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8231:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8234:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8224:6:17"},"nodeType":"YulFunctionCall","src":"8224:88:17"},"nodeType":"YulExpressionStatement","src":"8224:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8332:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8335:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8325:6:17"},"nodeType":"YulFunctionCall","src":"8325:15:17"},"nodeType":"YulExpressionStatement","src":"8325:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8360:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8363:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8353:6:17"},"nodeType":"YulFunctionCall","src":"8353:15:17"},"nodeType":"YulExpressionStatement","src":"8353:15:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8166:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8189:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8197:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8186:2:17"},"nodeType":"YulFunctionCall","src":"8186:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8163:2:17"},"nodeType":"YulFunctionCall","src":"8163:38:17"},"nodeType":"YulIf","src":"8160:218:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7982:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7991:6:17","type":""}],"src":"7947:437:17"},{"body":{"nodeType":"YulBlock","src":"8563:162:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8580:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8591:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8573:6:17"},"nodeType":"YulFunctionCall","src":"8573:21:17"},"nodeType":"YulExpressionStatement","src":"8573:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8614:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8625:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8610:3:17"},"nodeType":"YulFunctionCall","src":"8610:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"8630:2:17","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8603:6:17"},"nodeType":"YulFunctionCall","src":"8603:30:17"},"nodeType":"YulExpressionStatement","src":"8603:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8653:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8664:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:17"},"nodeType":"YulFunctionCall","src":"8649:18:17"},{"hexValue":"554e415554484f52495a4544","kind":"string","nodeType":"YulLiteral","src":"8669:14:17","type":"","value":"UNAUTHORIZED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:17"},"nodeType":"YulFunctionCall","src":"8642:42:17"},"nodeType":"YulExpressionStatement","src":"8642:42:17"},{"nodeType":"YulAssignment","src":"8693:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8705:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8716:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8701:3:17"},"nodeType":"YulFunctionCall","src":"8701:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8693:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8540:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8554:4:17","type":""}],"src":"8389:336:17"},{"body":{"nodeType":"YulBlock","src":"8762:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8779:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8782:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8772:6:17"},"nodeType":"YulFunctionCall","src":"8772:88:17"},"nodeType":"YulExpressionStatement","src":"8772:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8876:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8879:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8869:6:17"},"nodeType":"YulFunctionCall","src":"8869:15:17"},"nodeType":"YulExpressionStatement","src":"8869:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8900:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8903:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8893:6:17"},"nodeType":"YulFunctionCall","src":"8893:15:17"},"nodeType":"YulExpressionStatement","src":"8893:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8730:184:17"},{"body":{"nodeType":"YulBlock","src":"8968:79:17","statements":[{"nodeType":"YulAssignment","src":"8978:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8990:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"8993:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8986:3:17"},"nodeType":"YulFunctionCall","src":"8986:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8978:4:17"}]},{"body":{"nodeType":"YulBlock","src":"9019:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9021:16:17"},"nodeType":"YulFunctionCall","src":"9021:18:17"},"nodeType":"YulExpressionStatement","src":"9021:18:17"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9010:4:17"},{"name":"x","nodeType":"YulIdentifier","src":"9016:1:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9007:2:17"},"nodeType":"YulFunctionCall","src":"9007:11:17"},"nodeType":"YulIf","src":"9004:37:17"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8950:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"8953:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8959:4:17","type":""}],"src":"8919:128:17"},{"body":{"nodeType":"YulBlock","src":"9226:179:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9243:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9254:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9236:6:17"},"nodeType":"YulFunctionCall","src":"9236:21:17"},"nodeType":"YulExpressionStatement","src":"9236:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9277:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9288:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9273:3:17"},"nodeType":"YulFunctionCall","src":"9273:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"9293:2:17","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9266:6:17"},"nodeType":"YulFunctionCall","src":"9266:30:17"},"nodeType":"YulExpressionStatement","src":"9266:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9316:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9327:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9312:3:17"},"nodeType":"YulFunctionCall","src":"9312:18:17"},{"hexValue":"45524332304d696e7461626c653a206e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"9332:31:17","type":"","value":"ERC20Mintable: not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9305:6:17"},"nodeType":"YulFunctionCall","src":"9305:59:17"},"nodeType":"YulExpressionStatement","src":"9305:59:17"},{"nodeType":"YulAssignment","src":"9373:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9385:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9396:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9381:3:17"},"nodeType":"YulFunctionCall","src":"9381:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9373:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9203:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9217:4:17","type":""}],"src":"9052:353:17"},{"body":{"nodeType":"YulBlock","src":"9458:77:17","statements":[{"nodeType":"YulAssignment","src":"9468:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9479:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"9482:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9475:3:17"},"nodeType":"YulFunctionCall","src":"9475:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9468:3:17"}]},{"body":{"nodeType":"YulBlock","src":"9507:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9509:16:17"},"nodeType":"YulFunctionCall","src":"9509:18:17"},"nodeType":"YulExpressionStatement","src":"9509:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9499:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"9502:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9496:2:17"},"nodeType":"YulFunctionCall","src":"9496:10:17"},"nodeType":"YulIf","src":"9493:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9441:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"9444:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9450:3:17","type":""}],"src":"9410:125:17"},{"body":{"nodeType":"YulBlock","src":"9714:182:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9731:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9742:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9724:6:17"},"nodeType":"YulFunctionCall","src":"9724:21:17"},"nodeType":"YulExpressionStatement","src":"9724:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9765:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9776:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9761:3:17"},"nodeType":"YulFunctionCall","src":"9761:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"9781:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9754:6:17"},"nodeType":"YulFunctionCall","src":"9754:30:17"},"nodeType":"YulExpressionStatement","src":"9754:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9804:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9815:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9800:3:17"},"nodeType":"YulFunctionCall","src":"9800:18:17"},{"hexValue":"4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"9820:34:17","type":"","value":"MockERC4626: Invalid mint amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9793:6:17"},"nodeType":"YulFunctionCall","src":"9793:62:17"},"nodeType":"YulExpressionStatement","src":"9793:62:17"},{"nodeType":"YulAssignment","src":"9864:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9876:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9887:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9872:3:17"},"nodeType":"YulFunctionCall","src":"9872:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9864:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9691:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9705:4:17","type":""}],"src":"9540:356:17"},{"body":{"nodeType":"YulBlock","src":"10056:314:17","statements":[{"nodeType":"YulAssignment","src":"10066:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10078:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10089:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10074:3:17"},"nodeType":"YulFunctionCall","src":"10074:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10066:4:17"}]},{"nodeType":"YulVariableDeclaration","src":"10101:52:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10111:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10105:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10169:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10184:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"10192:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10180:3:17"},"nodeType":"YulFunctionCall","src":"10180:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10162:6:17"},"nodeType":"YulFunctionCall","src":"10162:34:17"},"nodeType":"YulExpressionStatement","src":"10162:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10216:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10227:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10212:3:17"},"nodeType":"YulFunctionCall","src":"10212:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10236:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"10244:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10232:3:17"},"nodeType":"YulFunctionCall","src":"10232:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10205:6:17"},"nodeType":"YulFunctionCall","src":"10205:43:17"},"nodeType":"YulExpressionStatement","src":"10205:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10268:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10279:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10264:3:17"},"nodeType":"YulFunctionCall","src":"10264:18:17"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10288:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10296:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10284:3:17"},"nodeType":"YulFunctionCall","src":"10284:79:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10257:6:17"},"nodeType":"YulFunctionCall","src":"10257:107:17"},"nodeType":"YulExpressionStatement","src":"10257:107:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10009:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10020:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10028:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10036:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10047:4:17","type":""}],"src":"9901:469:17"},{"body":{"nodeType":"YulBlock","src":"10453:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"10499:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10508:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10511:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10501:6:17"},"nodeType":"YulFunctionCall","src":"10501:12:17"},"nodeType":"YulExpressionStatement","src":"10501:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10474:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10483:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10470:3:17"},"nodeType":"YulFunctionCall","src":"10470:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10495:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10466:3:17"},"nodeType":"YulFunctionCall","src":"10466:32:17"},"nodeType":"YulIf","src":"10463:52:17"},{"nodeType":"YulVariableDeclaration","src":"10524:29:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10543:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10537:5:17"},"nodeType":"YulFunctionCall","src":"10537:16:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10528:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10584:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"10562:21:17"},"nodeType":"YulFunctionCall","src":"10562:28:17"},"nodeType":"YulExpressionStatement","src":"10562:28:17"},{"nodeType":"YulAssignment","src":"10599:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"10609:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10599:6:17"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10419:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10430:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10442:6:17","type":""}],"src":"10375:245:17"},{"body":{"nodeType":"YulBlock","src":"10799:173:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10816:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10827:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10809:6:17"},"nodeType":"YulFunctionCall","src":"10809:21:17"},"nodeType":"YulExpressionStatement","src":"10809:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10850:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10861:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10846:3:17"},"nodeType":"YulFunctionCall","src":"10846:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"10866:2:17","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10839:6:17"},"nodeType":"YulFunctionCall","src":"10839:30:17"},"nodeType":"YulExpressionStatement","src":"10839:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10889:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10900:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10885:3:17"},"nodeType":"YulFunctionCall","src":"10885:18:17"},{"hexValue":"5045524d49545f444541444c494e455f45585049524544","kind":"string","nodeType":"YulLiteral","src":"10905:25:17","type":"","value":"PERMIT_DEADLINE_EXPIRED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10878:6:17"},"nodeType":"YulFunctionCall","src":"10878:53:17"},"nodeType":"YulExpressionStatement","src":"10878:53:17"},{"nodeType":"YulAssignment","src":"10940:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10952:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10963:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10948:3:17"},"nodeType":"YulFunctionCall","src":"10948:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10940:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10776:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10790:4:17","type":""}],"src":"10625:347:17"},{"body":{"nodeType":"YulBlock","src":"11218:373:17","statements":[{"nodeType":"YulAssignment","src":"11228:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11240:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11251:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11236:3:17"},"nodeType":"YulFunctionCall","src":"11236:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11228:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11271:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"11282:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11264:6:17"},"nodeType":"YulFunctionCall","src":"11264:25:17"},"nodeType":"YulExpressionStatement","src":"11264:25:17"},{"nodeType":"YulVariableDeclaration","src":"11298:52:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11308:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11302:2:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11370:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11381:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11366:3:17"},"nodeType":"YulFunctionCall","src":"11366:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11390:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"11398:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11386:3:17"},"nodeType":"YulFunctionCall","src":"11386:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11359:6:17"},"nodeType":"YulFunctionCall","src":"11359:43:17"},"nodeType":"YulExpressionStatement","src":"11359:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11422:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11433:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:17"},"nodeType":"YulFunctionCall","src":"11418:18:17"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11442:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"11450:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11438:3:17"},"nodeType":"YulFunctionCall","src":"11438:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11411:6:17"},"nodeType":"YulFunctionCall","src":"11411:43:17"},"nodeType":"YulExpressionStatement","src":"11411:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11474:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11485:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11470:3:17"},"nodeType":"YulFunctionCall","src":"11470:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"11490:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11463:6:17"},"nodeType":"YulFunctionCall","src":"11463:34:17"},"nodeType":"YulExpressionStatement","src":"11463:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11517:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11528:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11513:3:17"},"nodeType":"YulFunctionCall","src":"11513:19:17"},{"name":"value4","nodeType":"YulIdentifier","src":"11534:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11506:6:17"},"nodeType":"YulFunctionCall","src":"11506:35:17"},"nodeType":"YulExpressionStatement","src":"11506:35:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11561:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11572:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11557:3:17"},"nodeType":"YulFunctionCall","src":"11557:19:17"},{"name":"value5","nodeType":"YulIdentifier","src":"11578:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11550:6:17"},"nodeType":"YulFunctionCall","src":"11550:35:17"},"nodeType":"YulExpressionStatement","src":"11550:35:17"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11147:9:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11158:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11166:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11174:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11182:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11190:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11198:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11209:4:17","type":""}],"src":"10977:614:17"},{"body":{"nodeType":"YulBlock","src":"11844:196:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11861:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11866:66:17","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11854:6:17"},"nodeType":"YulFunctionCall","src":"11854:79:17"},"nodeType":"YulExpressionStatement","src":"11854:79:17"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11953:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11958:1:17","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11949:3:17"},"nodeType":"YulFunctionCall","src":"11949:11:17"},{"name":"value0","nodeType":"YulIdentifier","src":"11962:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11942:6:17"},"nodeType":"YulFunctionCall","src":"11942:27:17"},"nodeType":"YulExpressionStatement","src":"11942:27:17"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11989:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11994:2:17","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11985:3:17"},"nodeType":"YulFunctionCall","src":"11985:12:17"},{"name":"value1","nodeType":"YulIdentifier","src":"11999:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11978:6:17"},"nodeType":"YulFunctionCall","src":"11978:28:17"},"nodeType":"YulExpressionStatement","src":"11978:28:17"},{"nodeType":"YulAssignment","src":"12015:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12026:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12031:2:17","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12022:3:17"},"nodeType":"YulFunctionCall","src":"12022:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12015:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11812:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11817:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11825:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11836:3:17","type":""}],"src":"11596:444:17"},{"body":{"nodeType":"YulBlock","src":"12226:217:17","statements":[{"nodeType":"YulAssignment","src":"12236:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12248:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12259:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12244:3:17"},"nodeType":"YulFunctionCall","src":"12244:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12236:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12279:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"12290:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12272:6:17"},"nodeType":"YulFunctionCall","src":"12272:25:17"},"nodeType":"YulExpressionStatement","src":"12272:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12317:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12328:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12313:3:17"},"nodeType":"YulFunctionCall","src":"12313:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12337:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12345:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12333:3:17"},"nodeType":"YulFunctionCall","src":"12333:17:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12306:6:17"},"nodeType":"YulFunctionCall","src":"12306:45:17"},"nodeType":"YulExpressionStatement","src":"12306:45:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12371:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12382:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12367:3:17"},"nodeType":"YulFunctionCall","src":"12367:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"12387:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12360:6:17"},"nodeType":"YulFunctionCall","src":"12360:34:17"},"nodeType":"YulExpressionStatement","src":"12360:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12414:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12425:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12410:3:17"},"nodeType":"YulFunctionCall","src":"12410:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"12430:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12403:6:17"},"nodeType":"YulFunctionCall","src":"12403:34:17"},"nodeType":"YulExpressionStatement","src":"12403:34:17"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12171:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12182:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12190:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12198:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12206:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12217:4:17","type":""}],"src":"12045:398:17"},{"body":{"nodeType":"YulBlock","src":"12622:164:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12650:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12632:6:17"},"nodeType":"YulFunctionCall","src":"12632:21:17"},"nodeType":"YulExpressionStatement","src":"12632:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12673:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12684:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12669:3:17"},"nodeType":"YulFunctionCall","src":"12669:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"12689:2:17","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12662:6:17"},"nodeType":"YulFunctionCall","src":"12662:30:17"},"nodeType":"YulExpressionStatement","src":"12662:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12712:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12723:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12708:3:17"},"nodeType":"YulFunctionCall","src":"12708:18:17"},{"hexValue":"494e56414c49445f5349474e4552","kind":"string","nodeType":"YulLiteral","src":"12728:16:17","type":"","value":"INVALID_SIGNER"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12701:6:17"},"nodeType":"YulFunctionCall","src":"12701:44:17"},"nodeType":"YulExpressionStatement","src":"12701:44:17"},{"nodeType":"YulAssignment","src":"12754:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12766:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12777:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12762:3:17"},"nodeType":"YulFunctionCall","src":"12762:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12754:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12599:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12613:4:17","type":""}],"src":"12448:338:17"},{"body":{"nodeType":"YulBlock","src":"12850:65:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12867:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12870:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12860:6:17"},"nodeType":"YulFunctionCall","src":"12860:14:17"},"nodeType":"YulExpressionStatement","src":"12860:14:17"},{"nodeType":"YulAssignment","src":"12883:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12901:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12904:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12891:9:17"},"nodeType":"YulFunctionCall","src":"12891:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12883:4:17"}]}]},"name":"array_dataslot_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12833:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12841:4:17","type":""}],"src":"12791:124:17"},{"body":{"nodeType":"YulBlock","src":"13058:1110:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13068:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13079:1:17","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"13072:3:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13089:30:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13112:6:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13106:5:17"},"nodeType":"YulFunctionCall","src":"13106:13:17"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"13093:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13128:17:17","value":{"name":"ret","nodeType":"YulIdentifier","src":"13142:3:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13132:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13154:11:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13164:1:17","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13158:2:17","type":""}]},{"nodeType":"YulAssignment","src":"13174:28:17","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13188:2:17"},{"name":"slotValue","nodeType":"YulIdentifier","src":"13192:9:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13184:3:17"},"nodeType":"YulFunctionCall","src":"13184:18:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13174:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"13211:44:17","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13241:9:17"},{"name":"_1","nodeType":"YulIdentifier","src":"13252:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13237:3:17"},"nodeType":"YulFunctionCall","src":"13237:18:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13215:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13294:31:17","statements":[{"nodeType":"YulAssignment","src":"13296:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13310:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13318:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13306:3:17"},"nodeType":"YulFunctionCall","src":"13306:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13296:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13274:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13267:6:17"},"nodeType":"YulFunctionCall","src":"13267:26:17"},"nodeType":"YulIf","src":"13264:61:17"},{"nodeType":"YulVariableDeclaration","src":"13334:12:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13344:2:17","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13338:2:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13405:172:17","statements":[{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13426:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13431:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13419:6:17"},"nodeType":"YulFunctionCall","src":"13419:90:17"},"nodeType":"YulExpressionStatement","src":"13419:90:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13529:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13532:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13522:6:17"},"nodeType":"YulFunctionCall","src":"13522:15:17"},"nodeType":"YulExpressionStatement","src":"13522:15:17"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13557:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13562:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13550:6:17"},"nodeType":"YulFunctionCall","src":"13550:17:17"},"nodeType":"YulExpressionStatement","src":"13550:17:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13361:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13384:6:17"},{"name":"_2","nodeType":"YulIdentifier","src":"13392:2:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13381:2:17"},"nodeType":"YulFunctionCall","src":"13381:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13358:2:17"},"nodeType":"YulFunctionCall","src":"13358:38:17"},"nodeType":"YulIf","src":"13355:222:17"},{"cases":[{"body":{"nodeType":"YulBlock","src":"13627:184:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13648:3:17"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13657:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13668:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13653:3:17"},"nodeType":"YulFunctionCall","src":"13653:82:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13641:6:17"},"nodeType":"YulFunctionCall","src":"13641:95:17"},"nodeType":"YulExpressionStatement","src":"13641:95:17"},{"nodeType":"YulAssignment","src":"13749:52:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13760:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13769:6:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13791:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13784:6:17"},"nodeType":"YulFunctionCall","src":"13784:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13777:6:17"},"nodeType":"YulFunctionCall","src":"13777:22:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13765:3:17"},"nodeType":"YulFunctionCall","src":"13765:35:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13756:3:17"},"nodeType":"YulFunctionCall","src":"13756:45:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13749:3:17"}]}]},"nodeType":"YulCase","src":"13620:191:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13625:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"13827:316:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13841:55:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13889:6:17"}],"functionName":{"name":"array_dataslot_bytes_storage_ptr","nodeType":"YulIdentifier","src":"13856:32:17"},"nodeType":"YulFunctionCall","src":"13856:40:17"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"13845:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13909:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13918:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13913:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13986:111:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14015:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"14020:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14011:3:17"},"nodeType":"YulFunctionCall","src":"14011:11:17"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14030:7:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14024:5:17"},"nodeType":"YulFunctionCall","src":"14024:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14004:6:17"},"nodeType":"YulFunctionCall","src":"14004:35:17"},"nodeType":"YulExpressionStatement","src":"14004:35:17"},{"nodeType":"YulAssignment","src":"14056:27:17","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14071:7:17"},{"name":"_1","nodeType":"YulIdentifier","src":"14080:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14067:3:17"},"nodeType":"YulFunctionCall","src":"14067:16:17"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14056:7:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13943:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"13946:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13940:2:17"},"nodeType":"YulFunctionCall","src":"13940:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13954:19:17","statements":[{"nodeType":"YulAssignment","src":"13956:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13965:1:17"},{"name":"_2","nodeType":"YulIdentifier","src":"13968:2:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13961:3:17"},"nodeType":"YulFunctionCall","src":"13961:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13956:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13936:3:17","statements":[]},"src":"13932:165:17"},{"nodeType":"YulAssignment","src":"14110:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14121:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"14126:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14117:3:17"},"nodeType":"YulFunctionCall","src":"14117:16:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14110:3:17"}]}]},"nodeType":"YulCase","src":"13820:323:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13825:1:17","type":"","value":"1"}}],"expression":{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13593:18:17"},"nodeType":"YulSwitch","src":"13586:557:17"},{"nodeType":"YulAssignment","src":"14152:10:17","value":{"name":"ret","nodeType":"YulIdentifier","src":"14159:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14152:3:17"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13034:3:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13039:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13050:3:17","type":""}],"src":"12920:1248:17"},{"body":{"nodeType":"YulBlock","src":"14386:299:17","statements":[{"nodeType":"YulAssignment","src":"14396:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14408:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14419:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14404:3:17"},"nodeType":"YulFunctionCall","src":"14404:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14396:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14439:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"14450:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14432:6:17"},"nodeType":"YulFunctionCall","src":"14432:25:17"},"nodeType":"YulExpressionStatement","src":"14432:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14477:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14488:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14473:3:17"},"nodeType":"YulFunctionCall","src":"14473:18:17"},{"name":"value1","nodeType":"YulIdentifier","src":"14493:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14466:6:17"},"nodeType":"YulFunctionCall","src":"14466:34:17"},"nodeType":"YulExpressionStatement","src":"14466:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14520:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14531:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14516:3:17"},"nodeType":"YulFunctionCall","src":"14516:18:17"},{"name":"value2","nodeType":"YulIdentifier","src":"14536:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14509:6:17"},"nodeType":"YulFunctionCall","src":"14509:34:17"},"nodeType":"YulExpressionStatement","src":"14509:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14563:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14574:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14559:3:17"},"nodeType":"YulFunctionCall","src":"14559:18:17"},{"name":"value3","nodeType":"YulIdentifier","src":"14579:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14552:6:17"},"nodeType":"YulFunctionCall","src":"14552:34:17"},"nodeType":"YulExpressionStatement","src":"14552:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14606:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14617:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14602:3:17"},"nodeType":"YulFunctionCall","src":"14602:19:17"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14627:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14635:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14623:3:17"},"nodeType":"YulFunctionCall","src":"14623:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14595:6:17"},"nodeType":"YulFunctionCall","src":"14595:84:17"},"nodeType":"YulExpressionStatement","src":"14595:84:17"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14323:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14334:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14342:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14350:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14358:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14366:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14377:4:17","type":""}],"src":"14173:512:17"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_bytes4t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_bytes4(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes4t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint8t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_addresst_contract$_Authority_$2777(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_Authority_$2777(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes4(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_bytes4(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint8t_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_bytes4(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_42a18f8e269f112c172999b74d139a2658536f1cd904b7baf70214b5f3a50457__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Mintable: not authorized\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_7af70cfceba3f2cf2c1ebf8c90b83f2e2d3de077eae7a7c31c23b738649013cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"MockERC4626: Invalid mint amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"PERMIT_DEADLINE_EXPIRED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"INVALID_SIGNER\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage_ptr(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := ret\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(ret, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage_ptr(value0)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2153":[{"length":32,"start":1512},{"length":32,"start":3387},{"length":32,"start":3700},{"length":32,"start":4038},{"length":32,"start":5656},{"length":32,"start":5852}],"2155":[{"length":32,"start":994},{"length":32,"start":3886},{"length":32,"start":6038}],"3107":[{"length":32,"start":1078}],"3121":[{"length":32,"start":3588}],"3123":[{"length":32,"start":3641}]},"linkReferences":{},"object":"6080604052600436106102d15760003560e01c80637a8c63b511610179578063a9059cbb116100d6578063d505accf1161008a578063ea7ca27611610064578063ea7ca276146108c9578063ed0d0efb1461091a578063f2fde38b1461094757600080fd5b8063d505accf14610816578063dd62ed3e14610836578063e688747b1461086e57600080fd5b8063bf7e214f116100bb578063bf7e214f14610791578063c53a3985146107be578063d5002f2e1461080157600080fd5b8063a9059cbb14610751578063b70096131461077157600080fd5b80638fcb4e5b1161012d5780639dc29fac116101125780639dc29fac146106fe578063a0712d681461071e578063a1903eab1461073e57600080fd5b80638fcb4e5b146106c957806395d89b41146106e957600080fd5b80637ecebe001161015e5780637ecebe001461062a5780638b32fa23146106575780638da5cb5b1461067757600080fd5b80637a8c63b5146105d65780637a9e5e4b1461060a57600080fd5b80633644e515116102325780634b5159da116101e65780636d780459116101c05780636d7804591461056957806370a0823114610589578063728b952b146105b657600080fd5b80634b5159da14610514578063679aefce1461053457806367aff4841461054957600080fd5b806340c10f191161021757806340c10f19146104b457806342966c68146104d45780634346f03e146104f457600080fd5b80633644e5151461048a57806337cfdaca1461049f57600080fd5b806318160ddd1161028957806323b872dd1161026e57806323b872dd14610404578063313ce5671461042457806334fcf4371461046a57600080fd5b806318160ddd146103ba578063239c70ae146103d057600080fd5b8063095ea7b3116102ba578063095ea7b3146103385780630bade8a4146103685780630ea9b75b1461039857600080fd5b806306a36aee146102d657806306fdde0314610316575b600080fd5b3480156102e257600080fd5b506103036102f13660046122b4565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561032257600080fd5b5061032b610967565b60405161030d91906122d1565b34801561034457600080fd5b5061035861035336600461233d565b6109f5565b604051901515815260200161030d565b34801561037457600080fd5b5061035861038336600461239e565b600a6020526000908152604090205460ff1681565b3480156103a457600080fd5b506103b86103b33660046123d8565b610a6f565b005b3480156103c657600080fd5b5061030360025481565b3480156103dc57600080fd5b506103037f000000000000000000000000000000000000000000000000000000000000000081565b34801561041057600080fd5b5061035861041f36600461241f565b610bf3565b34801561043057600080fd5b506104587f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161030d565b34801561047657600080fd5b506103b8610485366004612460565b610d39565b34801561049657600080fd5b50610303610e00565b3480156104ab57600080fd5b50610303610e5b565b3480156104c057600080fd5b506103b86104cf36600461233d565b610e72565b3480156104e057600080fd5b506103b86104ef366004612460565b610fc4565b34801561050057600080fd5b5061030361050f366004612460565b61108b565b34801561052057600080fd5b506103b861052f366004612479565b6110a9565b34801561054057600080fd5b50600c54610303565b34801561055557600080fd5b506103b86105643660046124b0565b6111d3565b34801561057557600080fd5b5061030361058436600461241f565b611324565b34801561059557600080fd5b506103036105a43660046122b4565b60036020526000908152604090205481565b3480156105c257600080fd5b506103b86105d13660046124de565b61135c565b3480156105e257600080fd5b506103587f000000000000000000000000000000000000000000000000000000000000000081565b34801561061657600080fd5b506103b86106253660046122b4565b61146c565b34801561063657600080fd5b506103036106453660046122b4565b60056020526000908152604090205481565b34801561066357600080fd5b50610303610672366004612460565b6115c9565b34801561068357600080fd5b506006546106a49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161030d565b3480156106d557600080fd5b506103036106e436600461233d565b6115de565b3480156106f557600080fd5b5061032b611609565b34801561070a57600080fd5b506103b861071936600461233d565b611616565b34801561072a57600080fd5b506103b8610739366004612460565b6116da565b61030361074c3660046122b4565b611828565b34801561075d57600080fd5b5061035861076c36600461233d565b6118b4565b34801561077d57600080fd5b5061035861078c36600461250c565b611939565b34801561079d57600080fd5b506007546106a49073ffffffffffffffffffffffffffffffffffffffff1681565b3480156107ca57600080fd5b506106a46107d93660046122b4565b60086020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b34801561080d57600080fd5b50600f54610303565b34801561082257600080fd5b506103b8610831366004612553565b611ad0565b34801561084257600080fd5b506103036108513660046124de565b600460209081526000928352604080842090915290825290205481565b34801561087a57600080fd5b506103586108893660046125c1565b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600b602052604090205460ff919091161c600116151590565b3480156108d557600080fd5b506103586108e43660046125f4565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260096020526040902054600160ff9092161c16151590565b34801561092657600080fd5b5061030361093536600461239e565b600b6020526000908152604090205481565b34801561095357600080fd5b506103b86109623660046122b4565b611def565b6000805461097490612620565b80601f01602080910402602001604051908101604052809291908181526020018280546109a090612620565b80156109ed5780601f106109c2576101008083540402835291602001916109ed565b820191906000526020600020905b8154815290600101906020018083116109d057829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a5d9086815260200190565b60405180910390a35060015b92915050565b610a9d336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b610b08576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b8015610b50577fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b179055610b8f565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000908152600b602052604090208054600160ff86161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b15183604051610be6911515815260200190565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c8757610c5583826126a2565b73ffffffffffffffffffffffffffffffffffffffff861660009081526004602090815260408083203384529091529020555b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081208054859290610cbc9084906126a2565b909155505073ffffffffffffffffffffffffffffffffffffffff808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d249087815260200190565b60405180910390a360019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000015610df357610d8d336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b610df3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b610dfb612005565b600c55565b60007f00000000000000000000000000000000000000000000000000000000000000004614610e3657610e31612036565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6000610e656120d0565b600e54610e3191906126b5565b7f000000000000000000000000000000000000000000000000000000000000000015610f2c57610ec6336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b610f2c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b7f0000000000000000000000000000000000000000000000000000000000000000811115610fb6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e746044820152606401610aff565b610fc08282612125565b5050565b7f00000000000000000000000000000000000000000000000000000000000000001561107e57611018336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b61107e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b611088338261219e565b50565b6000610a69611099600f5490565b6110a1610e5b565b84919061222c565b6110d7336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b61113d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b7fffffffff0000000000000000000000000000000000000000000000000000000082166000818152600a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b611201336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b80156112a35773ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b1790556112d6565b73ffffffffffffffffffffffffffffffffffffffff831660009081526009602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610be6911515815260200190565b600061132e612005565b600061134661133b610e5b565b600f5485919061222c565b9050611353858583610bf3565b50949350505050565b61138a336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b6113f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526008602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b60065473ffffffffffffffffffffffffffffffffffffffff1633148061154f57506007546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f91906126c8565b61155857600080fd5b600780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6000610a696115d6610e5b565b600f546110a1565b60006115e8612005565b60006115f561133b610e5b565b905061160184826118b4565b509392505050565b6001805461097490612620565b7f0000000000000000000000000000000000000000000000000000000000000000156116d05761166a336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b6116d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b610fc0828261219e565b7f0000000000000000000000000000000000000000000000000000000000000000156117945761172e336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b611794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332304d696e7461626c653a206e6f7420617574686f72697a65640000006044820152606401610aff565b7f000000000000000000000000000000000000000000000000000000000000000081111561181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4d6f636b455243343632363a20496e76616c6964206d696e7420616d6f756e746044820152606401610aff565b6110883382612125565b6000611832612005565b600f546000036118595734600f819055600e819055611852903390612125565b5034919050565b6000611877611867600f5490565b61186f610e5b565b34919061222c565b905034600e600082825461188b91906126b5565b9250508190555080600f60008282546118a491906126b5565b90915550610a6990503334612125565b336000908152600360205260408120805483919083906118d59084906126a2565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a5d9086815260200190565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152600860205260408120549091168015611a31576040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2991906126c8565b915050610d32565b7fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600a602052604090205460ff1680611ac757507fffffffff0000000000000000000000000000000000000000000000000000000083166000908152600b602090815260408083205473ffffffffffffffffffffffffffffffffffffffff891684526009909252909120541615155b95945050505050565b42841015611b3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610aff565b60006001611b46610e00565b73ffffffffffffffffffffffffffffffffffffffff8a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e0830190915280519201919091207f190100000000000000000000000000000000000000000000000000000000000061010083015261010282019290925261012281019190915261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611c98573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611d1357508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f5349474e45520000000000000000000000000000000000006044820152606401610aff565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b611e1d336000357fffffffff0000000000000000000000000000000000000000000000000000000016611ef4565b611e83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610aff565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60075460009073ffffffffffffffffffffffffffffffffffffffff168015801590611fd857506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015611fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd891906126c8565b80611ffd575060065473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b600061200f6120d0565b9050801561202f5780600e600082825461202991906126b5565b90915550505b5042600d55565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161206891906126e5565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000600c546000036120e25750600090565b60006121006301e13380600d54426120fa91906126a2565b90612268565b90506000610d3261211c83600c5461227d90919063ffffffff16565b600e549061227d565b806002600082825461213791906126b5565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812080548392906121d39084906126a2565b909155505060028054829003905560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612192565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048411830215820261226157600080fd5b5091020490565b6000610d3283670de0b6b3a76400008461222c565b6000610d328383670de0b6b3a764000061222c565b73ffffffffffffffffffffffffffffffffffffffff8116811461108857600080fd5b6000602082840312156122c657600080fd5b8135610d3281612292565b600060208083528351808285015260005b818110156122fe578581018301518582016040015282016122e2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000806040838503121561235057600080fd5b823561235b81612292565b946020939093013593505050565b80357fffffffff000000000000000000000000000000000000000000000000000000008116811461239957600080fd5b919050565b6000602082840312156123b057600080fd5b610d3282612369565b803560ff8116811461239957600080fd5b801515811461108857600080fd5b6000806000606084860312156123ed57600080fd5b6123f6846123b9565b925061240460208501612369565b91506040840135612414816123ca565b809150509250925092565b60008060006060848603121561243457600080fd5b833561243f81612292565b9250602084013561244f81612292565b929592945050506040919091013590565b60006020828403121561247257600080fd5b5035919050565b6000806040838503121561248c57600080fd5b61249583612369565b915060208301356124a5816123ca565b809150509250929050565b6000806000606084860312156124c557600080fd5b83356124d081612292565b9250612404602085016123b9565b600080604083850312156124f157600080fd5b82356124fc81612292565b915060208301356124a581612292565b60008060006060848603121561252157600080fd5b833561252c81612292565b9250602084013561253c81612292565b915061254a60408501612369565b90509250925092565b600080600080600080600060e0888a03121561256e57600080fd5b873561257981612292565b9650602088013561258981612292565b955060408801359450606088013593506125a5608089016123b9565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156125d457600080fd5b6125dd836123b9565b91506125eb60208401612369565b90509250929050565b6000806040838503121561260757600080fd5b823561261281612292565b91506125eb602084016123b9565b600181811c9082168061263457607f821691505b60208210810361266d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610a6957610a69612673565b80820180821115610a6957610a69612673565b6000602082840312156126da57600080fd5b8151610d32816123ca565b600080835481600182811c91508083168061270157607f831692505b60208084108203612739577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561274d5760018114612780576127ad565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528415158502890196506127ad565b60008a81526020902060005b868110156127a55781548b82015290850190830161278c565b505084890196505b50949897505050505050505056fea2646970667358221220cfd6eb454aa625b34bc581747d599dcdaaeb852a30b300e05d15c414f1fb8dcb64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A8C63B5 GT PUSH2 0x179 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEA7CA276 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEA7CA276 EQ PUSH2 0x8C9 JUMPI DUP1 PUSH4 0xED0D0EFB EQ PUSH2 0x91A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xE688747B EQ PUSH2 0x86E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF7E214F GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xC53A3985 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0xD5002F2E EQ PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0xB7009613 EQ PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8FCB4E5B GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x6FE JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x71E JUMPI DUP1 PUSH4 0xA1903EAB EQ PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8FCB4E5B EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x8B32FA23 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A8C63B5 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x232 JUMPI DUP1 PUSH4 0x4B5159DA GT PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x6D780459 GT PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x6D780459 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x728B952B EQ PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B5159DA EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x67AFF484 EQ PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x217 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0x4346F03E EQ PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x37CFDACA EQ PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x289 JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x26E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x239C70AE EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x2BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xBADE8A4 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEA9B75B EQ PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A36AEE EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x316 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x22D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x241F JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xE00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0xE5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x4EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x50F CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x2479 JUMP JUMPDEST PUSH2 0x10A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x11D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x584 CALLDATASIZE PUSH1 0x4 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x1324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x5D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24DE JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x625 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x146C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x15C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x6A4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x6E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x15DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32B PUSH2 0x1609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x719 CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x739 CALLDATASIZE PUSH1 0x4 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x303 PUSH2 0x74C CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1828 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x76C CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x78C CALLDATASIZE PUSH1 0x4 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1939 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x6A4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A4 PUSH2 0x7D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x303 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x831 CALLDATASIZE PUSH1 0x4 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x851 CALLDATASIZE PUSH1 0x4 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x889 CALLDATASIZE PUSH1 0x4 PUSH2 0x25C1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x358 PUSH2 0x8E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SHR AND ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH2 0x935 CALLDATASIZE PUSH1 0x4 PUSH2 0x239E JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x962 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x974 SWAP1 PUSH2 0x2620 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A0 SWAP1 PUSH2 0x2620 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xA5D SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL OR SWAP1 SSTORE PUSH2 0xB8F JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 PUSH1 0xFF AND PUSH32 0xBFE16B2C35CE23DFD1AB0E7B5D086A10060C9B52D1574E1680C881B3B3A2B151 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE6 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC87 JUMPI PUSH2 0xC55 DUP4 DUP3 PUSH2 0x26A2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xCBC SWAP1 DUP5 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xD24 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xDF3 JUMPI PUSH2 0xD8D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xDFB PUSH2 0x2005 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xE36 JUMPI PUSH2 0xE31 PUSH2 0x2036 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE65 PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0xF2C JUMPI PUSH2 0xEC6 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xFC0 DUP3 DUP3 PUSH2 0x2125 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x107E JUMPI PUSH2 0x1018 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x107E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x1088 CALLER DUP3 PUSH2 0x219E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA69 PUSH2 0x1099 PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10A1 PUSH2 0xE5B JUMP JUMPDEST DUP5 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x10D7 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x113D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x36D28126BEF21A4F3765D7FCB7C45CEAD463AE4C41094EF3B771EDE598544103 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1201 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x1267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12A3 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL OR SWAP1 SSTORE PUSH2 0x12D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C9BDD0C8E073EB5EDA2250B18D8E5121FF27B62064FBEEEED4869BB99BC5BF2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBE6 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132E PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 PUSH2 0x133B PUSH2 0xE5B JUMP JUMPDEST PUSH1 0xF SLOAD DUP6 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP PUSH2 0x1353 DUP6 DUP6 DUP4 PUSH2 0xBF3 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x138A CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x13F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xA4908E11A5F895B13D51526C331AC93CDD30E59772361C5D07874EB36BFF2065 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x154F JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154F SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA69 PUSH2 0x15D6 PUSH2 0xE5B JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E8 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 PUSH2 0x133B PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP PUSH2 0x1601 DUP5 DUP3 PUSH2 0x18B4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x974 SWAP1 PUSH2 0x2620 JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x16D0 JUMPI PUSH2 0x166A CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x16D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xFC0 DUP3 DUP3 PUSH2 0x219E JUMP JUMPDEST PUSH32 0x0 ISZERO PUSH2 0x1794 JUMPI PUSH2 0x172E CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304D696E7461626C653A206E6F7420617574686F72697A6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH32 0x0 DUP2 GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F636B455243343632363A20496E76616C6964206D696E7420616D6F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x1088 CALLER DUP3 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1832 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SUB PUSH2 0x1859 JUMPI CALLVALUE PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0xE DUP2 SWAP1 SSTORE PUSH2 0x1852 SWAP1 CALLER SWAP1 PUSH2 0x2125 JUMP JUMPDEST POP CALLVALUE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1877 PUSH2 0x1867 PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x186F PUSH2 0xE5B JUMP JUMPDEST CALLVALUE SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x188B SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18A4 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA69 SWAP1 POP CALLER CALLVALUE PUSH2 0x2125 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x18D5 SWAP1 DUP5 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xA5D SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0x1A31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A29 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD32 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1AC7 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO ISZERO JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x1B3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5045524D49545F444541444C494E455F45585049524544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B46 PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP5 ADD MSTORE DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP4 DUP14 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP1 DUP4 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x102 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x122 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x142 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D13 JUMPI POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5349474E4552000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD DUP9 DUP2 MSTORE SWAP2 SWAP3 DUP11 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E1D CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x1EF4 JUMP JUMPDEST PUSH2 0x1E83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1FD8 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD8 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST DUP1 PUSH2 0x1FFD JUMPI POP PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200F PUSH2 0x20D0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x202F JUMPI DUP1 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2029 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP TIMESTAMP PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 SUB PUSH2 0x20E2 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2100 PUSH4 0x1E13380 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x20FA SWAP2 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 PUSH2 0x2268 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD32 PUSH2 0x211C DUP4 PUSH1 0xC SLOAD PUSH2 0x227D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0x227D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2137 SWAP2 SWAP1 PUSH2 0x26B5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x21D3 SWAP1 DUP5 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x2192 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP5 GT DUP4 MUL ISZERO DUP3 MUL PUSH2 0x2261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 MUL DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP4 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP4 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x222C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD32 DUP2 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22FE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x22E2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x235B DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x2399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD32 DUP3 PUSH2 0x2369 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1088 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23F6 DUP5 PUSH2 0x23B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2404 PUSH1 0x20 DUP6 ADD PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2414 DUP2 PUSH2 0x23CA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x243F DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x244F DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x248C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2495 DUP4 PUSH2 0x2369 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24A5 DUP2 PUSH2 0x23CA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x24D0 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 POP PUSH2 0x2404 PUSH1 0x20 DUP6 ADD PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x24FC DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24A5 DUP2 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x252C DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x253C DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP2 POP PUSH2 0x254A PUSH1 0x40 DUP6 ADD PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x256E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2579 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x2589 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x25A5 PUSH1 0x80 DUP10 ADD PUSH2 0x23B9 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25DD DUP4 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x25EB PUSH1 0x20 DUP5 ADD PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2612 DUP2 PUSH2 0x2292 JUMP JUMPDEST SWAP2 POP PUSH2 0x25EB PUSH1 0x20 DUP5 ADD PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2634 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x266D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x2673 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD32 DUP2 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x2701 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x2739 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x274D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2780 JUMPI PUSH2 0x27AD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP7 AND DUP10 MSTORE DUP5 ISZERO ISZERO DUP6 MUL DUP10 ADD SWAP7 POP PUSH2 0x27AD JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x27A5 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x278C JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xD6 0xEB GASLIMIT 0x4A 0xA6 0x25 0xB3 0x4B 0xC5 DUP2 PUSH21 0x7D599DCDAAEB852A30B300E05D15C414F1FB8DCB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"811:3935:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:47:15;;;;;;;;;;-1:-1:-1;1622:47:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;571:25:17;;;559:2;544:18;1622:47:15;;;;;;;;1031:18:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2461:211::-;;;;;;;;;;-1:-1:-1;2461:211:16;;;;;:::i;:::-;;:::i;:::-;;;1704:14:17;;1697:22;1679:41;;1667:2;1652:18;2461:211:16;1539:187:17;1676:49:15;;;;;;;;;;-1:-1:-1;1676:49:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;4390:396;;;;;;;;;;-1:-1:-1;4390:396:15;;;;;:::i;:::-;;:::i;:::-;;1304:26:16;;;;;;;;;;;;;;;;358:38:12;;;;;;;;;;;;;;;3057:592:16;;;;;;;;;;-1:-1:-1;3057:592:16;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;;;;;;;;;;;3631:4:17;3619:17;;;3601:36;;3589:2;3574:18;1083:31:16;3459:184:17;3929:122:13;;;;;;;;;;-1:-1:-1;3929:122:13;;;;;:::i;:::-;;:::i;5327:177:16:-;;;;;;;;;;;;;:::i;3320:125:13:-;;;;;;;;;;;;;:::i;1242:233:12:-;;;;;;;;;;-1:-1:-1;1242:233:12;;;;;:::i;:::-;;:::i;1481:111::-;;;;;;;;;;-1:-1:-1;1481:111:12;;;;;:::i;:::-;;:::i;3745:160:13:-;;;;;;;;;;-1:-1:-1;3745:160:13;;;;;:::i;:::-;;:::i;3448:210:15:-;;;;;;;;;;-1:-1:-1;3448:210:15;;;;;:::i;:::-;;:::i;4057:80:13:-;;;;;;;;;;-1:-1:-1;4125:5:13;;4057:80;;3853:337:15;;;;;;;;;;-1:-1:-1;3853:337:15;;;;;:::i;:::-;;:::i;2783:531:13:-;;;;;;;;;;-1:-1:-1;2783:531:13;;;;;:::i;:::-;;:::i;1337:44:16:-;;;;;;;;;;-1:-1:-1;1337:44:16;;;;;:::i;:::-;;;;;;;;;;;;;;3006:241:15;;;;;;;;;;-1:-1:-1;3006:241:15;;;;;:::i;:::-;;:::i;313:39:12:-;;;;;;;;;;;;;;;1523:434:14;;;;;;;;;;-1:-1:-1;1523:434:14;;;;;:::i;:::-;;:::i;1751:41:16:-;;;;;;;;;;-1:-1:-1;1751:41:16;;;;;:::i;:::-;;;;;;;;;;;;;;3578:161:13;;;;;;;;;;-1:-1:-1;3578:161:13;;;;;:::i;:::-;;:::i;562:20:14:-;;;;;;;;;;-1:-1:-1;562:20:14;;;;;;;;;;;5465:42:17;5453:55;;;5435:74;;5423:2;5408:18;562:20:14;5289:226:17;2288:489:13;;;;;;;;;;-1:-1:-1;2288:489:13;;;;;:::i;:::-;;:::i;1056:20:16:-;;;;;;;;;;;;;:::i;1598:155:12:-;;;;;;;;;;-1:-1:-1;1598:155:12;;;;;:::i;:::-;;:::i;1047:189::-;;;;;;;;;;-1:-1:-1;1047:189:12;;;;;:::i;:::-;;:::i;1503:779:13:-;;;;;;:::i;:::-;;:::i;2678:373:16:-;;;;;;;;;;-1:-1:-1;2678:373:16;;;;;:::i;:::-;;:::i;2336:465:15:-;;;;;;;;;;-1:-1:-1;2336:465:15;;;;;:::i;:::-;;:::i;589:26:14:-;;;;;;;;;;-1:-1:-1;589:26:14;;;;;;;;1369:61:15;;;;;;;;;;-1:-1:-1;1369:61:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;3451:91:13;;;;;;;;;;-1:-1:-1;3524:11:13;;3451:91;;3838:1483:16;;;;;;;;;;-1:-1:-1;3838:1483:16;;;;;:::i;:::-;;:::i;1388:64::-;;;;;;;;;;-1:-1:-1;1388:64:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1958:186:15;;;;;;;;;;-1:-1:-1;1958:186:15;;;;;:::i;:::-;2083:35;;2051:4;2083:35;;;:22;:35;;;;;;2075:52;;;;;;2131:1;2074:58;:63;;;1958:186;1795:157;;;;;;;;;;-1:-1:-1;1795:157:15;;;;;:::i;:::-;1908:18;;;;;1876:4;1908:18;;;:12;:18;;;;;;1939:1;1900:35;;;;;1899:41;:46;;;1795:157;1732:56;;;;;;;;;;-1:-1:-1;1732:56:15;;;;;:::i;:::-;;;;;;;;;;;;;;1963:164:14;;;;;;;;;;-1:-1:-1;1963:164:14;;;;;:::i;:::-;;:::i;1031:18:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;;:30;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;571:25:17;;559:2;544:18;;425:177;2606:37:16;;;;;;;;-1:-1:-1;2661:4:16;2461:211;;;;;:::o;4390:396:15:-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;;;;;;;;;4535:7:15::1;4531:184;;;4558:35:::0;;::::1;4597:18;4558:35:::0;;;:22:::1;:35;::::0;;;;:57;;4605:1:::1;:9;::::0;::::1;;4558:57;::::0;;4531:184:::1;;;4646:35:::0;;::::1;4686:18;4646:35:::0;;;:22:::1;:35;::::0;;;;:58;;4694:1:::1;:9;::::0;::::1;;4685:19;4646:58;::::0;;4531:184:::1;4758:11;4730:49;;;4752:4;4730:49;;;4771:7;4730:49;;;;1704:14:17::0;1697:22;1679:41;;1667:2;1652:18;;1539:187;4730:49:15::1;;;;;;;;4390:396:::0;;;:::o;3057:592:16:-;3209:15;;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;3298:17;3287:28;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;3317:15;;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;3374:15;;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;3545:13:16;;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;;;;;3562:6;571:25:17;;559:2;544:18;;425:177;3594:26:16;;;;;;;;3638:4;3631:11;;;3057:592;;;;;;:::o;3929:122:13:-;859:17:12;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;4011:9:13::1;:7;:9::i;:::-;4030:5;:14:::0;3929:122::o;5327:177:16:-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:16;;5327:177::o;3320:125:13:-;3372:7;3417:21;:19;:21::i;:::-;3398:16;;:40;;;;:::i;1242:233:12:-;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1382:13:::1;1372:6;:23;;1364:68;;;::::0;::::1;::::0;;9742:2:17;1364:68:12::1;::::0;::::1;9724:21:17::0;;;9761:18;;;9754:30;9820:34;9800:18;;;9793:62;9872:18;;1364:68:12::1;9540:356:17::0;1364:68:12::1;1442:26;1448:11;1461:6;1442:5;:26::i;:::-;1242:233:::0;;:::o;1481:111::-;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1560:25:::1;1566:10;1578:6;1560:5;:25::i;:::-;1481:111:::0;:::o;3745:160:13:-;3810:7;3836:62;3858:16;3524:11;;;3451:91;3858:16;3876:21;:19;:21::i;:::-;3836:10;;:62;:21;:62::i;3448:210:15:-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;3549:31:15;;::::1;;::::0;;;:18:::1;:31;::::0;;;;;;;;:41;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;3606:45;;1679:41:17;;;3606:45:15::1;::::0;1652:18:17;3606:45:15::1;;;;;;;3448:210:::0;;:::o;3853:337::-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;3986:7:15::1;3982:150;;;4009:18;::::0;::::1;4031;4009::::0;;;:12:::1;:18;::::0;;;;:40;;4039:1:::1;:9;::::0;::::1;;4009:40;::::0;;3982:150:::1;;;4080:18;::::0;::::1;4103;4080::::0;;;:12:::1;:18;::::0;;;;:41;;4111:1:::1;:9;::::0;::::1;;4102:19;4080:41;::::0;;3982:150:::1;4169:4;4147:36;;4163:4;4147:36;;;4175:7;4147:36;;;;1704:14:17::0;1697:22;1679:41;;1667:2;1652:18;;1539:187;2783:531:13;2919:7;2966:9;:7;:9::i;:::-;3056:19;3078:99;3116:21;:19;:21::i;:::-;3524:11;;3078:13;;:99;:24;:99::i;:::-;3056:121;;3232:46;3245:7;3254:10;3266:11;3232:12;:46::i;:::-;-1:-1:-1;3296:11:13;2783:531;-1:-1:-1;;;;2783:531:13:o;3006:241:15:-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;3121:32:15::1;::::0;;::::1;;::::0;;;:24:::1;:32;::::0;;;;;:50;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;3187:53;::::1;::::0;3121:32;3187:53:::1;3006:241:::0;;:::o;1523:434:14:-;1794:5;;;;1780:10;:19;;:76;;-1:-1:-1;1803:9:14;;:53;;;;;1821:10;1803:53;;;10162:34:17;1841:4:14;10212:18:17;;;10205:43;1803:9:14;1848:7;;;10264:18:17;;;10257:107;1803:9:14;;;;;:17;;10074:18:17;;1803:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1772:85;;;;;;1868:9;:24;;;;;;;;;;;;;1908:42;;1925:10;;1908:42;;-1:-1:-1;;1908:42:14;1523:434;:::o;3578:161:13:-;3643:7;3669:63;3692:21;:19;:21::i;:::-;3524:11;;3715:16;3451:91;2288:489;2395:7;2442:9;:7;:9::i;:::-;2532:19;2554:99;2592:21;:19;:21::i;2554:99::-;2532:121;;2708:33;2717:10;2729:11;2708:8;:33::i;:::-;-1:-1:-1;2759:11:13;2288:489;-1:-1:-1;;;2288:489:13:o;1056:20:16:-;;;;;;;:::i;1598:155:12:-;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1720:26:::1;1726:11;1739:6;1720:5;:26::i;1047:189::-:0;859:17;855:169;;;917:33;930:10;942:7;;;;917:12;:33::i;:::-;892:121;;;;;;;9254:2:17;892:121:12;;;9236:21:17;9293:2;9273:18;;;9266:30;9332:31;9312:18;;;9305:59;9381:18;;892:121:12;9052:353:17;892:121:12;1144:13:::1;1134:6;:23;;1126:68;;;::::0;::::1;::::0;;9742:2:17;1126:68:12::1;::::0;::::1;9724:21:17::0;;;9761:18;;;9754:30;9820:34;9800:18;;;9793:62;9872:18;;1126:68:12::1;9540:356:17::0;1126:68:12::1;1204:25;1210:10;1222:6;1204:5;:25::i;1503:779:13:-:0;1554:7;1601:9;:7;:9::i;:::-;3524:11;;1703:1;1683:21;1679:189;;1734:9;1720:11;:23;;;1757:16;:28;;;1799;;1805:10;;1799:5;:28::i;:::-;-1:-1:-1;1848:9:13;;1503:779;-1:-1:-1;1503:779:13:o;1679:189::-;1949:14;1966:95;2000:16;3524:11;;;3451:91;2000:16;2030:21;:19;:21::i;:::-;1966:9;;:95;:20;:95::i;:::-;1949:112;;2126:9;2106:16;;:29;;;;;;;:::i;:::-;;;;;;;;2160:6;2145:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;2223:28:13;;-1:-1:-1;2229:10:13;2241:9;2223:5;:28::i;2678:373:16:-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;2941:13:16;;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;2990:32;;;;2958:6;571:25:17;;559:2;544:18;;425:177;2336:465:15;2515:32;;;;2471:4;2515:32;;;:24;:32;;;;;;2471:4;;2515:32;2562:38;;2558:101;;2609:50;;;;;:23;10180:15:17;;;2609:50:15;;;10162:34:17;10232:15;;;10212:18;;;10205:43;10296:66;10284:79;;10264:18;;;10257:107;2609:23:15;;;;;10074:18:17;;2609:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2602:57;;;;;2558:101;2689:31;;;;;;;:18;:31;;;;;;;;;:105;;-1:-1:-1;2759:35:15;;;;;;;:22;:35;;;;;;;;;2738:18;;;;;:12;:18;;;;;;;:56;2724:70;;2689:105;2670:124;2336:465;-1:-1:-1;;;;;2336:465:15:o;3838:1483:16:-;4057:15;4045:8;:27;;4037:63;;;;;;;10827:2:17;4037:63:16;;;10809:21:17;10866:2;10846:18;;;10839:30;10905:25;10885:18;;;10878:53;10948:18;;4037:63:16;10625:347:17;4037:63:16;4265:24;4292:805;4428:18;:16;:18::i;:::-;4873:13;;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;11264:25:17;11366:18;;;11359:43;;;;11438:15;;;11418:18;;;11411:43;11470:18;;;11463:34;;;11513:19;;;11506:35;;;;11557:19;;;;11550:35;;;4511:449:16;;;;;;;;;;11236:19:17;;;4511:449:16;;;4472:514;;;;;;;;11866:66:17;4350:658:16;;;11854:79:17;11949:11;;;11942:27;;;;11985:12;;;11978:28;;;;12022:12;;4350:658:16;;;;;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;12272:25:17;12345:4;12333:17;;12313:18;;;12306:45;12367:18;;;12360:34;;;12410:18;;;12403:34;;;12244:19;;4292:805:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:16;;;;;;-1:-1:-1;;5120:30:16;;;;;;;:59;;;5174:5;5154:25;;:16;:25;;;5120:59;5112:86;;;;;;;12650:2:17;5112:86:16;;;12632:21:17;12689:2;12669:18;;;12662:30;12728:16;12708:18;;;12701:44;12762:18;;5112:86:16;12448:338:17;5112:86:16;5213:27;;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;571:25:17;;;5213:36:16;;5283:31;;;;;544:18:17;5283:31:16;;;;;;;3838:1483;;;;;;;:::o;1963:164:14:-;902:33;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;8591:2:17;894:58:14;;;8573:21:17;8630:2;8610:18;;;8603:30;8669:14;8649:18;;;8642:42;8701:18;;894:58:14;8389:336:17;894:58:14;2046:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;2078:42:::1;::::0;2099:10:::1;::::0;2078:42:::1;::::0;-1:-1:-1;;2078:42:14::1;1963:164:::0;:::o;977:540::-;1097:9;;1064:4;;1097:9;;1415:27;;;;;:77;;-1:-1:-1;1446:46:14;;;;;:12;10180:15:17;;;1446:46:14;;;10162:34:17;1473:4:14;10212:18:17;;;10205:43;10296:66;10284:79;;10264:18;;;10257:107;1446:12:14;;;;;10074:18:17;;1446:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1414:96;;;-1:-1:-1;1505:5:14;;;1497:13;;;1505:5;;1497:13;1414:96;1407:103;977:540;-1:-1:-1;;;;977:540:14:o;4143:205:13:-;4181:16;4200:21;:19;:21::i;:::-;4181:40;-1:-1:-1;4235:12:13;;4231:71;;4283:8;4263:16;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;4231:71:13;-1:-1:-1;4326:15:13;4311:12;:30;4143:205::o;5510:446:16:-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;14432:25:17;;;;14473:18;;14466:34;;;;5833:14:16;14516:18:17;;;14509:34;5869:13:16;14559:18:17;;;14552:34;5912:4:16;14602:19:17;;;14595:84;14404:19;;5640:295:16;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;4354:390:13:-;4408:7;4431:5;;4440:1;4431:10;4427:49;;-1:-1:-1;4464:1:13;;4354:390::o;4427:49::-;4539:19;4561:72;4615:8;4580:12;;4562:15;:30;;;;:::i;:::-;4561:40;;:72::i;:::-;4539:94;;4643:15;4661:52;4686:26;4700:11;4686:5;;:13;;:26;;;;:::i;:::-;4661:16;;;:24;:52::i;6150:325:16:-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6387:13:16;;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;571:25:17;;;6436:32:16;;544:18:17;6436:32:16;;;;;;;;6150:325;;:::o;6481:328::-;6553:15;;;;;;;:9;:15;;;;;:25;;6572:6;;6553:15;:25;;6572:6;;6553:25;:::i;:::-;;;;-1:-1:-1;;6721:11:16;:21;;;;;;;6768:34;;571:25:17;;;-1:-1:-1;;6768:34:16;;;;;;559:2:17;544:18;6768:34:16;425:177:17;898:556:10;1014:9;1279:1;1266:11;1262:19;1259:1;1256:26;1253:1;1249:34;1242:42;1229:11;1225:60;1198:146;;1328:1;1325;1318:12;1198:146;-1:-1:-1;1415:9:10;;1411:27;;898:556::o;1884:164::-;1946:7;1973:21;1984:1;193:4;1992:1;1973:10;:21::i;1610:118::-;1672:7;1699:21;1710:1;1713;193:4;1699:10;:21::i;14:154:17:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:247;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;607:607::-;719:4;748:2;777;766:9;759:21;809:6;803:13;852:6;847:2;836:9;832:18;825:34;877:1;887:140;901:6;898:1;895:13;887:140;;;996:14;;;992:23;;986:30;962:17;;;981:2;958:26;951:66;916:10;;887:140;;;891:3;1076:1;1071:2;1062:6;1051:9;1047:22;1043:31;1036:42;1205:2;1135:66;1130:2;1122:6;1118:15;1114:88;1103:9;1099:104;1095:113;1087:121;;;;607:607;;;;:::o;1219:315::-;1287:6;1295;1348:2;1336:9;1327:7;1323:23;1319:32;1316:52;;;1364:1;1361;1354:12;1316:52;1403:9;1390:23;1422:31;1447:5;1422:31;:::i;:::-;1472:5;1524:2;1509:18;;;;1496:32;;-1:-1:-1;;;1219:315:17:o;1731:219::-;1798:20;;1858:66;1847:78;;1837:89;;1827:117;;1940:1;1937;1930:12;1827:117;1731:219;;;:::o;1955:184::-;2013:6;2066:2;2054:9;2045:7;2041:23;2037:32;2034:52;;;2082:1;2079;2072:12;2034:52;2105:28;2123:9;2105:28;:::i;2144:156::-;2210:20;;2270:4;2259:16;;2249:27;;2239:55;;2290:1;2287;2280:12;2305:118;2391:5;2384:13;2377:21;2370:5;2367:32;2357:60;;2413:1;2410;2403:12;2428:383;2499:6;2507;2515;2568:2;2556:9;2547:7;2543:23;2539:32;2536:52;;;2584:1;2581;2574:12;2536:52;2607:27;2624:9;2607:27;:::i;:::-;2597:37;;2653;2686:2;2675:9;2671:18;2653:37;:::i;:::-;2643:47;;2740:2;2729:9;2725:18;2712:32;2753:28;2775:5;2753:28;:::i;:::-;2800:5;2790:15;;;2428:383;;;;;:::o;2998:456::-;3075:6;3083;3091;3144:2;3132:9;3123:7;3119:23;3115:32;3112:52;;;3160:1;3157;3150:12;3112:52;3199:9;3186:23;3218:31;3243:5;3218:31;:::i;:::-;3268:5;-1:-1:-1;3325:2:17;3310:18;;3297:32;3338:33;3297:32;3338:33;:::i;:::-;2998:456;;3390:7;;-1:-1:-1;;;3444:2:17;3429:18;;;;3416:32;;2998:456::o;3648:180::-;3707:6;3760:2;3748:9;3739:7;3735:23;3731:32;3728:52;;;3776:1;3773;3766:12;3728:52;-1:-1:-1;3799:23:17;;3648:180;-1:-1:-1;3648:180:17:o;3833:313::-;3897:6;3905;3958:2;3946:9;3937:7;3933:23;3929:32;3926:52;;;3974:1;3971;3964:12;3926:52;3997:28;4015:9;3997:28;:::i;:::-;3987:38;;4075:2;4064:9;4060:18;4047:32;4088:28;4110:5;4088:28;:::i;:::-;4135:5;4125:15;;;3833:313;;;;;:::o;4151:452::-;4223:6;4231;4239;4292:2;4280:9;4271:7;4267:23;4263:32;4260:52;;;4308:1;4305;4298:12;4260:52;4347:9;4334:23;4366:31;4391:5;4366:31;:::i;:::-;4416:5;-1:-1:-1;4440:36:17;4472:2;4457:18;;4440:36;:::i;4608:406::-;4694:6;4702;4755:2;4743:9;4734:7;4730:23;4726:32;4723:52;;;4771:1;4768;4761:12;4723:52;4810:9;4797:23;4829:31;4854:5;4829:31;:::i;:::-;4879:5;-1:-1:-1;4936:2:17;4921:18;;4908:32;4949:33;4908:32;4949:33;:::i;5520:460::-;5596:6;5604;5612;5665:2;5653:9;5644:7;5640:23;5636:32;5633:52;;;5681:1;5678;5671:12;5633:52;5720:9;5707:23;5739:31;5764:5;5739:31;:::i;:::-;5789:5;-1:-1:-1;5846:2:17;5831:18;;5818:32;5859:33;5818:32;5859:33;:::i;:::-;5911:7;-1:-1:-1;5937:37:17;5970:2;5955:18;;5937:37;:::i;:::-;5927:47;;5520:460;;;;;:::o;6234:734::-;6345:6;6353;6361;6369;6377;6385;6393;6446:3;6434:9;6425:7;6421:23;6417:33;6414:53;;;6463:1;6460;6453:12;6414:53;6502:9;6489:23;6521:31;6546:5;6521:31;:::i;:::-;6571:5;-1:-1:-1;6628:2:17;6613:18;;6600:32;6641:33;6600:32;6641:33;:::i;:::-;6693:7;-1:-1:-1;6747:2:17;6732:18;;6719:32;;-1:-1:-1;6798:2:17;6783:18;;6770:32;;-1:-1:-1;6821:37:17;6853:3;6838:19;;6821:37;:::i;:::-;6811:47;;6905:3;6894:9;6890:19;6877:33;6867:43;;6957:3;6946:9;6942:19;6929:33;6919:43;;6234:734;;;;;;;;;;:::o;7366:254::-;7431:6;7439;7492:2;7480:9;7471:7;7467:23;7463:32;7460:52;;;7508:1;7505;7498:12;7460:52;7531:27;7548:9;7531:27;:::i;:::-;7521:37;;7577;7610:2;7599:9;7595:18;7577:37;:::i;:::-;7567:47;;7366:254;;;;;:::o;7625:317::-;7691:6;7699;7752:2;7740:9;7731:7;7727:23;7723:32;7720:52;;;7768:1;7765;7758:12;7720:52;7807:9;7794:23;7826:31;7851:5;7826:31;:::i;:::-;7876:5;-1:-1:-1;7900:36:17;7932:2;7917:18;;7900:36;:::i;7947:437::-;8026:1;8022:12;;;;8069;;;8090:61;;8144:4;8136:6;8132:17;8122:27;;8090:61;8197:2;8189:6;8186:14;8166:18;8163:38;8160:218;;8234:77;8231:1;8224:88;8335:4;8332:1;8325:15;8363:4;8360:1;8353:15;8160:218;;7947:437;;;:::o;8730:184::-;8782:77;8779:1;8772:88;8879:4;8876:1;8869:15;8903:4;8900:1;8893:15;8919:128;8986:9;;;9007:11;;;9004:37;;;9021:18;;:::i;9410:125::-;9475:9;;;9496:10;;;9493:36;;;9509:18;;:::i;10375:245::-;10442:6;10495:2;10483:9;10474:7;10470:23;10466:32;10463:52;;;10511:1;10508;10501:12;10463:52;10543:9;10537:16;10562:28;10584:5;10562:28;:::i;12920:1248::-;13050:3;13079:1;13112:6;13106:13;13142:3;13164:1;13192:9;13188:2;13184:18;13174:28;;13252:2;13241:9;13237:18;13274;13264:61;;13318:4;13310:6;13306:17;13296:27;;13264:61;13344:2;13392;13384:6;13381:14;13361:18;13358:38;13355:222;;13431:77;13426:3;13419:90;13532:4;13529:1;13522:15;13562:4;13557:3;13550:17;13355:222;13593:18;13620:191;;;;13825:1;13820:323;;;;13586:557;;13620:191;13668:66;13657:9;13653:82;13648:3;13641:95;13791:6;13784:14;13777:22;13769:6;13765:35;13760:3;13756:45;13749:52;;13620:191;;13820:323;12867:1;12860:14;;;12904:4;12891:18;;13918:1;13932:165;13946:6;13943:1;13940:13;13932:165;;;14024:14;;14011:11;;;14004:35;14067:16;;;;13961:10;;13932:165;;;13936:3;;14126:6;14121:3;14117:16;14110:23;;13586:557;-1:-1:-1;14159:3:17;;12920:1248;-1:-1:-1;;;;;;;;12920:1248:17:o"},"gasEstimates":{"creation":{"codeDepositCost":"2045000","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"24539","authority()":"2380","balanceOf(address)":"2579","burn(address,uint256)":"infinite","burn(uint256)":"infinite","canCall(address,address,bytes4)":"infinite","decimals()":"infinite","doesRoleHaveCapability(uint8,bytes4)":"infinite","doesUserHaveRole(address,uint8)":"2705","getEthValue(uint256)":"infinite","getRate()":"2371","getRethValue(uint256)":"infinite","getRolesWithCapability(bytes4)":"2584","getTargetCustomAuthority(address)":"2605","getTotalPooledEther()":"4627","getTotalShares()":"2392","getUserRoles(address)":"2560","isCapabilityPublic(bytes4)":"2610","isCompetitionMode()":"infinite","maxMintAmount()":"infinite","mint(address,uint256)":"infinite","mint(uint256)":"infinite","name()":"infinite","nonces(address)":"2558","owner()":"2425","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","setAuthority(address)":"infinite","setPublicCapability(bytes4,bool)":"infinite","setRate(uint256)":"infinite","setRoleCapability(uint8,bytes4,bool)":"infinite","setTargetCustomAuthority(address,address)":"infinite","setUserRole(address,uint8,bool)":"infinite","submit(address)":"infinite","symbol()":"infinite","totalSupply()":"2353","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","transferShares(address,uint256)":"infinite","transferSharesFrom(address,address,uint256)":"infinite"},"internal":{"_accrue()":"infinite","_getAccruedInterest()":"infinite"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authority()":"bf7e214f","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","burn(uint256)":"42966c68","canCall(address,address,bytes4)":"b7009613","decimals()":"313ce567","doesRoleHaveCapability(uint8,bytes4)":"e688747b","doesUserHaveRole(address,uint8)":"ea7ca276","getEthValue(uint256)":"8b32fa23","getRate()":"679aefce","getRethValue(uint256)":"4346f03e","getRolesWithCapability(bytes4)":"ed0d0efb","getTargetCustomAuthority(address)":"c53a3985","getTotalPooledEther()":"37cfdaca","getTotalShares()":"d5002f2e","getUserRoles(address)":"06a36aee","isCapabilityPublic(bytes4)":"0bade8a4","isCompetitionMode()":"7a8c63b5","maxMintAmount()":"239c70ae","mint(address,uint256)":"40c10f19","mint(uint256)":"a0712d68","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","setAuthority(address)":"7a9e5e4b","setPublicCapability(bytes4,bool)":"4b5159da","setRate(uint256)":"34fcf437","setRoleCapability(uint8,bytes4,bool)":"0ea9b75b","setTargetCustomAuthority(address,address)":"728b952b","setUserRole(address,uint8,bool)":"67aff484","submit(address)":"a1903eab","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transferShares(address,uint256)":"8fcb4e5b","transferSharesFrom(address,address,uint256)":"6d780459"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isCompetitionMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxMintAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"PublicCapabilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RoleCapabilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"TargetCustomAuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"UserRoleUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"doesRoleHaveCapability\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"doesUserHaveRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rethAmount\",\"type\":\"uint256\"}],\"name\":\"getEthValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"getRethValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"getRolesWithCapability\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getTargetCustomAuthority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPooledEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserRoles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"isCapabilityPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCompetitionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMintAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setPublicCapability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate_\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRoleCapability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"customAuthority\",\"type\":\"address\"}],\"name\":\"setTargetCustomAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"submit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"}],\"name\":\"transferShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"}],\"name\":\"transferSharesFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MockRocketPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEthValue(uint256)\":{\"notice\":\"IRocketTokenRETH ///\"},\"setRate(uint256)\":{\"notice\":\"Mock ///\"},\"submit(address)\":{\"notice\":\"Overrides ///\"}},\"notice\":\"This mock yield source will accrue interest at a specified rate         Every stateful interaction will accrue interest, so the interest         accrual will approximate continuous compounding as the contract         is called more frequently.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockRocketPool.sol\":\"MockRocketPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IERC20 {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice Emitted when an owner changes the approval for a spender.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Updates the allowance of a spender on behalf of the sender.\\n    /// @param spender The account with the allowance.\\n    /// @param amount The new allowance of the spender.\\n    /// @return A flag indicating whether or not the approval succeeded.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from the sender's account to another account.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers tokens from an owner to a recipient. This draws from\\n    ///         the sender's allowance.\\n    /// @param from The owner of the tokens.\\n    /// @param to The recipient of the tokens.\\n    /// @param amount The amount of tokens that will be transferred.\\n    /// @return A flag indicating whether or not the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /// @notice Gets the token's name.\\n    /// @return The token's name.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Gets the token's symbol.\\n    /// @return The token's symbol.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Gets the token's decimals.\\n    /// @return The token's decimals.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the token's total supply.\\n    /// @return The token's total supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Gets the allowance of a spender for an owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of an account.\\n    /// @param account The owner of the tokens.\\n    /// @return The account's balance.\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdrive.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdriveCore } from \\\"./IHyperdriveCore.sol\\\";\\nimport { IHyperdriveEvents } from \\\"./IHyperdriveEvents.sol\\\";\\nimport { IHyperdriveRead } from \\\"./IHyperdriveRead.sol\\\";\\nimport { IMultiToken } from \\\"./IMultiToken.sol\\\";\\n\\ninterface IHyperdrive is\\n    IHyperdriveEvents,\\n    IHyperdriveRead,\\n    IHyperdriveCore,\\n    IMultiToken\\n{\\n    /// Structs ///\\n\\n    struct MarketState {\\n        /// @dev The pool's share reserves.\\n        uint128 shareReserves;\\n        /// @dev The pool's bond reserves.\\n        uint128 bondReserves;\\n        /// @dev The global exposure of the pool due to open longs\\n        uint128 longExposure;\\n        /// @dev The amount of longs that are still open.\\n        uint128 longsOutstanding;\\n        /// @dev The net amount of shares that have been added and removed from\\n        ///      the share reserves due to flat updates.\\n        int128 shareAdjustment;\\n        /// @dev The amount of shorts that are still open.\\n        uint128 shortsOutstanding;\\n        /// @dev The average maturity time of outstanding long positions.\\n        uint128 longAverageMaturityTime;\\n        /// @dev The average maturity time of outstanding short positions.\\n        uint128 shortAverageMaturityTime;\\n        /// @dev A flag indicating whether or not the pool has been initialized.\\n        bool isInitialized;\\n        /// @dev A flag indicating whether or not the pool is paused.\\n        bool isPaused;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint112 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint128 zombieShareReserves;\\n    }\\n\\n    struct Checkpoint {\\n        /// @dev The vault share price during the first transaction in the\\n        ///      checkpoint. This is used to track the amount of interest\\n        ///      accrued by shorts as well as the vault share price at closing\\n        //       of matured longs and shorts.\\n        uint128 vaultSharePrice;\\n    }\\n\\n    struct WithdrawPool {\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint128 readyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint128 proceeds;\\n    }\\n\\n    struct Fees {\\n        /// @dev The LP fee applied to the curve portion of a trade.\\n        uint256 curve;\\n        /// @dev The LP fee applied to the flat portion of a trade.\\n        uint256 flat;\\n        /// @dev The portion of the LP fee that goes to governance.\\n        uint256 governanceLP;\\n        /// @dev The portion of the zombie interest that goes to governance.\\n        uint256 governanceZombie;\\n    }\\n\\n    struct PoolDeployConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolConfig {\\n        /// @dev The address of the base token.\\n        IERC20 baseToken;\\n        /// @dev The address of the vault shares token.\\n        IERC20 vaultSharesToken;\\n        /// @dev The linker factory used by this Hyperdrive instance.\\n        address linkerFactory;\\n        /// @dev The hash of the ERC20 linker's code. This is used to derive the\\n        ///      create2 addresses of the ERC20 linkers used by this instance.\\n        bytes32 linkerCodeHash;\\n        /// @dev The initial vault share price.\\n        uint256 initialVaultSharePrice;\\n        /// @dev The minimum share reserves.\\n        uint256 minimumShareReserves;\\n        /// @dev The minimum amount of tokens that a position can be opened or\\n        ///      closed with.\\n        uint256 minimumTransactionAmount;\\n        /// @dev The duration of a position prior to maturity.\\n        uint256 positionDuration;\\n        /// @dev The duration of a checkpoint.\\n        uint256 checkpointDuration;\\n        /// @dev A parameter which decreases slippage around a target rate.\\n        uint256 timeStretch;\\n        /// @dev The address of the governance contract.\\n        address governance;\\n        /// @dev The address which collects governance fees\\n        address feeCollector;\\n        /// @dev The address which collects swept tokens.\\n        address sweepCollector;\\n        /// @dev The fees applied to trades.\\n        IHyperdrive.Fees fees;\\n    }\\n\\n    struct PoolInfo {\\n        /// @dev The reserves of shares held by the pool.\\n        uint256 shareReserves;\\n        /// @dev The adjustment applied to the share reserves when pricing\\n        ///      bonds. This is used to ensure that the pricing mechanism is\\n        ///      held invariant under flat updates for security reasons.\\n        int256 shareAdjustment;\\n        /// @dev The proceeds in base of the unredeemed matured positions.\\n        uint256 zombieBaseProceeds;\\n        /// @dev The shares reserved for unredeemed matured positions.\\n        uint256 zombieShareReserves;\\n        /// @dev The reserves of bonds held by the pool.\\n        uint256 bondReserves;\\n        /// @dev The total supply of LP shares.\\n        uint256 lpTotalSupply;\\n        /// @dev The current vault share price.\\n        uint256 vaultSharePrice;\\n        /// @dev An amount of bonds representing outstanding unmatured longs.\\n        uint256 longsOutstanding;\\n        /// @dev The average maturity time of the outstanding longs.\\n        uint256 longAverageMaturityTime;\\n        /// @dev An amount of bonds representing outstanding unmatured shorts.\\n        uint256 shortsOutstanding;\\n        /// @dev The average maturity time of the outstanding shorts.\\n        uint256 shortAverageMaturityTime;\\n        /// @dev The amount of withdrawal shares that are ready to be redeemed.\\n        uint256 withdrawalSharesReadyToWithdraw;\\n        /// @dev The proceeds recovered by the withdrawal pool.\\n        uint256 withdrawalSharesProceeds;\\n        /// @dev The share price of LP shares. This can be used to mark LP\\n        ///      shares to market.\\n        uint256 lpSharePrice;\\n        /// @dev The global exposure of the pool due to open positions\\n        uint256 longExposure;\\n    }\\n\\n    struct Options {\\n        /// @dev The address that receives the proceeds of a trade or LP action.\\n        address destination;\\n        /// @dev A boolean indicating that the trade or LP action should be\\n        ///      settled in base if true and in the yield source shares if false.\\n        bool asBase;\\n        /// @dev Additional data that can be used to implement custom logic in\\n        ///      implementation contracts.\\n        bytes extraData;\\n    }\\n\\n    /// Errors ///\\n\\n    /// @notice Thrown when the inputs to a batch transfer don't match in\\n    ///         length.\\n    error BatchInputLengthMismatch();\\n\\n    /// @notice Thrown when the initializer doesn't provide sufficient liquidity\\n    ///         to cover the minimum share reserves and the LP shares that are\\n    ///         burned on initialization.\\n    error BelowMinimumContribution();\\n\\n    /// @notice Thrown when the exponent to `FixedPointMath.exp` would cause the\\n    ///         the result to be larger than the representable scale.\\n    error ExpInvalidExponent();\\n\\n    /// @notice Thrown when a permit signature is expired.\\n    error ExpiredDeadline();\\n\\n    /// @notice Thrown when a user doesn't have a sufficient balance to perform\\n    ///         an action.\\n    error InsufficientBalance();\\n\\n    /// @notice Thrown when the pool doesn't have sufficient liquidity to\\n    ///         complete the trade.\\n    error InsufficientLiquidity();\\n\\n    /// @notice Thrown when the pool's APR is outside the bounds specified by\\n    ///         a LP when they are adding liquidity.\\n    error InvalidApr();\\n\\n    /// @notice Thrown when the checkpoint time provided to `checkpoint` is\\n    ///         larger than the current checkpoint or isn't divisible by the\\n    ///         checkpoint duration.\\n    error InvalidCheckpointTime();\\n\\n    /// @notice Thrown when the caller of one of MultiToken's bridge-only\\n    ///         functions is not the corresponding bridge.\\n    error InvalidERC20Bridge();\\n\\n    /// @notice Thrown when a destination other than the fee collector is\\n    ///         specified in `collectGovernanceFee`.\\n    error InvalidFeeDestination();\\n\\n    /// @notice Thrown when the initial share price doesn't match the share\\n    ///         price of the underlying yield source on deployment.\\n    error InvalidInitialVaultSharePrice();\\n\\n    /// @notice Thrown when the LP share price couldn't be calculated in a\\n    ///         critical situation.\\n    error InvalidLPSharePrice();\\n\\n    /// @notice Thrown when the present value calculation fails.\\n    error InvalidPresentValue();\\n\\n    /// @notice Thrown when an invalid signature is used provide permit access\\n    ///         to the MultiToken. A signature is considered to be invalid if\\n    ///         it fails to recover to the owner's address.\\n    error InvalidSignature();\\n\\n    /// @notice Thrown when the timestamp used to construct an asset ID exceeds\\n    ///         the uint248 scale.\\n    error InvalidTimestamp();\\n\\n    /// @notice Thrown when the input to `FixedPointMath.ln` is less than or\\n    ///         equal to zero.\\n    error LnInvalidInput();\\n\\n    /// @notice Thrown when vault share price is smaller than the minimum share\\n    ///         price. This protects traders from unknowingly opening a long or\\n    ///         short after negative interest has accrued.\\n    error MinimumSharePrice();\\n\\n    /// @notice Thrown when the input or output amount of a trade is smaller\\n    ///         than the minimum transaction amount. This protects traders and\\n    ///         LPs from losses of precision that can occur at small scales.\\n    error MinimumTransactionAmount();\\n\\n    /// @notice Thrown when the present value prior to adding liquidity results in a\\n    ///         decrease in present value after liquidity. This is caused by a\\n    ///         shortage in liquidity that prevents all the open positions being\\n    ///         closed on the curve and therefore marked to 1.\\n    error DecreasedPresentValueWhenAddingLiquidity();\\n\\n    /// @notice Thrown when ether is sent to an instance that doesn't accept\\n    ///         ether as a deposit asset.\\n    error NotPayable();\\n\\n    /// @notice Thrown when a slippage guard is violated.\\n    error OutputLimit();\\n\\n    /// @notice Thrown when the pool is already initialized and a trader calls\\n    ///         `initialize`. This prevents the pool from being reinitialized\\n    ///         after it has been initialized.\\n    error PoolAlreadyInitialized();\\n\\n    /// @notice Thrown when the pool is paused and a trader tries to add\\n    ///         liquidity, open a long, or open a short. Traders can still\\n    ///         close their existing positions while the pool is paused.\\n    error PoolIsPaused();\\n\\n    /// @notice Thrown when the owner passed to permit is the zero address. This\\n    ///         prevents users from spending the funds in address zero by\\n    ///         sending an invalid signature to ecrecover.\\n    error RestrictedZeroAddress();\\n\\n    /// @notice Thrown by a read-only function called by the proxy. Unlike a\\n    ///         normal error, this error actually indicates that a read-only\\n    ///         call succeeded. The data that it wraps is the return data from\\n    ///         the read-only call.\\n    error ReturnData(bytes data);\\n\\n    /// @notice Thrown when an asset is swept from the pool and one of the\\n    ///         pool's depository assets changes.\\n    error SweepFailed();\\n\\n    /// @notice Thrown when the distribute excess idle calculation fails due\\n    ///         to the starting present value calculation failing.\\n    error DistributeExcessIdleFailed();\\n\\n    /// @notice Thrown when an ether transfer fails.\\n    error TransferFailed();\\n\\n    /// @notice Thrown when an unauthorized user attempts to access admin\\n    ///         functionality.\\n    error Unauthorized();\\n\\n    /// @notice Thrown when a read-only call succeeds. The proxy architecture\\n    ///         uses a force-revert delegatecall pattern to ensure that calls\\n    ///         that are intended to be read-only are actually read-only.\\n    error UnexpectedSuccess();\\n\\n    /// @notice Thrown when casting a value to a uint112 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint112();\\n\\n    /// @notice Thrown when casting a value to a uint128 that is outside of the\\n    ///         uint128 scale.\\n    error UnsafeCastToUint128();\\n\\n    /// @notice Thrown when casting a value to a int128 that is outside of the\\n    ///         int128 scale.\\n    error UnsafeCastToInt128();\\n\\n    /// @notice Thrown when casting a value to a int256 that is outside of the\\n    ///         int256 scale.\\n    error UnsafeCastToInt256();\\n\\n    /// @notice Thrown when an unsupported option is passed to a function or\\n    ///         a user attempts to sweep an invalid token. The options and sweep\\n    ///         targets that are supported vary between instances.\\n    error UnsupportedToken();\\n\\n    /// @notice Thrown when `LPMath.calculateUpdateLiquidity` fails.\\n    error UpdateLiquidityFailed();\\n\\n    /// Getters ///\\n\\n    /// @notice Gets the target0 address.\\n    /// @return The target0 address.\\n    function target0() external view returns (address);\\n\\n    /// @notice Gets the target1 address.\\n    /// @return The target1 address.\\n    function target1() external view returns (address);\\n\\n    /// @notice Gets the target2 address.\\n    /// @return The target2 address.\\n    function target2() external view returns (address);\\n\\n    /// @notice Gets the target3 address.\\n    /// @return The target3 address.\\n    function target3() external view returns (address);\\n\\n    /// @notice Gets the target4 address.\\n    /// @return The target4 address.\\n    function target4() external view returns (address);\\n}\\n\",\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IERC20 } from \\\"./IERC20.sol\\\";\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\n\\ninterface IHyperdriveCore is IMultiTokenCore {\\n    /// Longs ///\\n\\n    /// @notice Opens a long position.\\n    /// @param _amount The amount of capital provided to open the long. The\\n    ///        units of this quantity are either base or vault shares, depending\\n    ///        on the value of `_options.asBase`.\\n    /// @param _minOutput The minimum number of bonds to receive.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to\\n    ///        open the long. This allows traders to protect themselves from\\n    ///        opening a long in a checkpoint where negative interest has\\n    ///        accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the bonds.\\n    /// @return bondProceeds The amount of bonds the user received.\\n    function openLong(\\n        uint256 _amount,\\n        uint256 _minOutput,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 bondProceeds);\\n\\n    /// @notice Closes a long position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the long.\\n    /// @param _bondAmount The amount of longs to close.\\n    /// @param _minOutput The minimum proceeds the trader will accept. The units\\n    ///        of this quantity are either base or vault shares, depending on\\n    ///        the value of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds the user receives. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeLong(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// Shorts ///\\n\\n    /// @notice Opens a short position.\\n    /// @param _bondAmount The amount of bonds to short.\\n    /// @param _maxDeposit The most the user expects to deposit for this trade.\\n    ///        The units of this quantity are either base or vault shares,\\n    ///        depending on the value of `_options.asBase`.\\n    /// @param _minVaultSharePrice The minimum vault share price at which to open\\n    ///        the short. This allows traders to protect themselves from opening\\n    ///        a short in a checkpoint where negative interest has accrued.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return maturityTime The maturity time of the short.\\n    /// @return deposit The amount the user deposited for this trade. The units\\n    ///         of this quantity are either base or vault shares, depending on\\n    ///         the value of `_options.asBase`.\\n    function openShort(\\n        uint256 _bondAmount,\\n        uint256 _maxDeposit,\\n        uint256 _minVaultSharePrice,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 maturityTime, uint256 deposit);\\n\\n    /// @notice Closes a short position with a specified maturity time.\\n    /// @param _maturityTime The maturity time of the short.\\n    /// @param _bondAmount The amount of shorts to close.\\n    /// @param _minOutput The minimum output of this trade. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the trade is settled.\\n    /// @return proceeds The proceeds of closing this short. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function closeShort(\\n        uint256 _maturityTime,\\n        uint256 _bondAmount,\\n        uint256 _minOutput,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// LPs ///\\n\\n    /// @notice Allows the first LP to initialize the market with a target APR.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _apr The target APR.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The initial number of LP shares created.\\n    function initialize(\\n        uint256 _contribution,\\n        uint256 _apr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows LPs to supply liquidity for LP shares.\\n    /// @param _contribution The amount of capital to supply. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _minLpSharePrice The minimum LP share price the LP is willing\\n    ///        to accept for their shares. LPs incur negative slippage when\\n    ///        adding liquidity if there is a net curve position in the market,\\n    ///        so this allows LPs to protect themselves from high levels of\\n    ///        slippage. The units of this quantity are either base or vault\\n    ///        shares, depending on the value of `_options.asBase`.\\n    /// @param _minApr The minimum APR at which the LP is willing to supply.\\n    /// @param _maxApr The maximum APR at which the LP is willing to supply.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return lpShares The LP shares received by the LP.\\n    function addLiquidity(\\n        uint256 _contribution,\\n        uint256 _minLpSharePrice,\\n        uint256 _minApr,\\n        uint256 _maxApr,\\n        IHyperdrive.Options calldata _options\\n    ) external payable returns (uint256 lpShares);\\n\\n    /// @notice Allows an LP to burn shares and withdraw from the pool.\\n    /// @param _lpShares The LP shares to burn.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to receive\\n    ///        for each withdrawal share that is burned. The units of this\\n    ///        quantity are either base or vault shares, depending on the value\\n    ///        of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP removing liquidity receives. The\\n    ///         units of this quantity are either base or vault shares,\\n    ///         depending on the value of `_options.asBase`.\\n    /// @return withdrawalShares The base that the LP receives buys out some of\\n    ///         their LP shares, but it may not be sufficient to fully buy the\\n    ///         LP out. In this case, the LP receives withdrawal shares equal in\\n    ///         value to the present value they are owed. As idle capital\\n    ///         becomes available, the pool will buy back these shares.\\n    function removeLiquidity(\\n        uint256 _lpShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalShares);\\n\\n    /// @notice Redeems withdrawal shares by giving the LP a pro-rata amount of\\n    ///         the withdrawal pool's proceeds. This function redeems the\\n    ///         maximum amount of the specified withdrawal shares given the\\n    ///         amount of withdrawal shares ready to withdraw.\\n    /// @param _withdrawalShares The withdrawal shares to redeem.\\n    /// @param _minOutputPerShare The minimum amount the LP expects to\\n    ///        receive for each withdrawal share that is burned. The units of\\n    ///        this quantity are either base or vault shares, depending on the\\n    ///        value of `_options.asBase`.\\n    /// @param _options The options that configure how the operation is settled.\\n    /// @return proceeds The amount the LP received. The units of this quantity\\n    ///         are either base or vault shares, depending on the value of\\n    ///         `_options.asBase`.\\n    /// @return withdrawalSharesRedeemed The amount of withdrawal shares that\\n    ///         were redeemed.\\n    function redeemWithdrawalShares(\\n        uint256 _withdrawalShares,\\n        uint256 _minOutputPerShare,\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds, uint256 withdrawalSharesRedeemed);\\n\\n    /// Checkpoints ///\\n\\n    /// @notice Attempts to mint a checkpoint with the specified checkpoint time.\\n    /// @param _checkpointTime The time of the checkpoint to create.\\n    /// @param _maxIterations The number of iterations to use in the Newton's\\n    ///        method component of `_distributeExcessIdleSafe`. This defaults to\\n    ///        `LPMath.SHARE_PROCEEDS_MAX_ITERATIONS` if the specified value is\\n    ///        smaller than the constant.\\n    function checkpoint(\\n        uint256 _checkpointTime,\\n        uint256 _maxIterations\\n    ) external;\\n\\n    /// Admin ///\\n\\n    /// @notice This function collects the governance fees accrued by the pool.\\n    /// @param _options The options that configure how the fees are settled.\\n    /// @return proceeds The governance fees collected. The units of this\\n    ///         quantity are either base or vault shares, depending on the value\\n    ///         of `_options.asBase`.\\n    function collectGovernanceFee(\\n        IHyperdrive.Options calldata _options\\n    ) external returns (uint256 proceeds);\\n\\n    /// @notice Allows an authorized address to pause this contract.\\n    /// @param _status True to pause all deposits and false to unpause them.\\n    function pause(bool _status) external;\\n\\n    /// @notice Allows governance to transfer the fee collector role.\\n    /// @param _who The new fee collector address.\\n    function setFeeCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the sweep collector role.\\n    /// @param _who The new sweep collector address.\\n    function setSweepCollector(address _who) external;\\n\\n    /// @notice Allows governance to transfer the governance role.\\n    /// @param _who The new governance address.\\n    function setGovernance(address _who) external;\\n\\n    /// @notice Allows governance to change the pauser status of an address.\\n    /// @param who The address to change.\\n    /// @param status The new pauser status.\\n    function setPauser(address who, bool status) external;\\n\\n    /// @notice Transfers the contract's balance of a target token to the fee\\n    ///         collector address.\\n    /// @dev WARN: It is unlikely but possible that there is a selector overlap\\n    ///      with 'transferFrom'. Any integrating contracts should be checked\\n    ///      for that, as it may result in an unexpected call from this address.\\n    /// @param _target The target token to sweep.\\n    function sweep(IERC20 _target) external;\\n}\\n\",\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\n\\ninterface IHyperdriveEvents is IMultiTokenEvents {\\n    /// @notice Emitted when the Hyperdrive pool is initialized.\\n    event Initialize(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 apr\\n    );\\n\\n    /// @notice Emitted when an LP adds liquidity to the Hyperdrive pool.\\n    event AddLiquidity(\\n        address indexed provider,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP removes liquidity from the Hyperdrive pool.\\n    event RemoveLiquidity(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 lpAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 withdrawalShareAmount,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when an LP redeems withdrawal shares.\\n    event RedeemWithdrawalShares(\\n        address indexed provider,\\n        address indexed destination,\\n        uint256 withdrawalShareAmount,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase\\n    );\\n\\n    /// @notice Emitted when a long position is opened.\\n    event OpenLong(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is opened.\\n    event OpenShort(\\n        address indexed trader,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 baseProceeds,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a long position is closed.\\n    event CloseLong(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a short position is closed.\\n    event CloseShort(\\n        address indexed trader,\\n        address indexed destination,\\n        uint256 indexed assetId,\\n        uint256 maturityTime,\\n        uint256 baseAmount,\\n        uint256 vaultShareAmount,\\n        bool asBase,\\n        uint256 basePayment,\\n        uint256 bondAmount\\n    );\\n\\n    /// @notice Emitted when a checkpoint is created.\\n    event CreateCheckpoint(\\n        uint256 indexed checkpointTime,\\n        uint256 checkpointVaultSharePrice,\\n        uint256 vaultSharePrice,\\n        uint256 maturedShorts,\\n        uint256 maturedLongs,\\n        uint256 lpSharePrice\\n    );\\n\\n    /// @notice Emitted when governance fees are collected.\\n    event CollectGovernanceFee(address indexed collector, uint256 fees);\\n\\n    /// @notice Emitted when the fee collector address is updated.\\n    event FeeCollectorUpdated(address indexed newFeeCollector);\\n\\n    /// @notice Emitted when the sweep collector address is updated.\\n    event SweepCollectorUpdated(address indexed newSweepCollector);\\n\\n    /// @notice Emitted when the governance address is updated.\\n    event GovernanceUpdated(address indexed newGovernance);\\n\\n    /// @notice Emitted when a pauser is updated.\\n    event PauserUpdated(address indexed newPauser, bool status);\\n\\n    /// @notice Emitted when the pause status is updated.\\n    event PauseStatusUpdated(bool isPaused);\\n\\n    /// @notice Emitted when tokens are swept.\\n    event Sweep(address indexed collector, address indexed target);\\n}\\n\",\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"./IHyperdrive.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IHyperdriveRead is IMultiTokenRead {\\n    /// @notice Gets the instance's name.\\n    /// @return The instance's name.\\n    function name() external pure returns (string memory);\\n\\n    /// @notice Gets the instance's version.\\n    /// @return The instance's version.\\n    function version() external pure returns (string memory);\\n\\n    /// @notice Gets the Hyperdrive pool's base token.\\n    /// @return The base token.\\n    function baseToken() external view returns (address);\\n\\n    /// @notice Gets the Hyperdrive pool's vault shares token.\\n    /// @return The vault shares token.\\n    function vaultSharesToken() external view returns (address);\\n\\n    /// @notice Gets one of the pool's checkpoints.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint.\\n    function getCheckpoint(\\n        uint256 _checkpointTime\\n    ) external view returns (IHyperdrive.Checkpoint memory);\\n\\n    /// @notice Gets the pool's exposure from a checkpoint. This is the number\\n    ///         of non-netted longs in the checkpoint.\\n    /// @param _checkpointTime The checkpoint time.\\n    /// @return The checkpoint exposure.\\n    function getCheckpointExposure(\\n        uint256 _checkpointTime\\n    ) external view returns (int256);\\n\\n    /// @notice Gets the pool's state relating to the Hyperdrive market.\\n    /// @return The market state.\\n    function getMarketState()\\n        external\\n        view\\n        returns (IHyperdrive.MarketState memory);\\n\\n    /// @notice Gets the pool's configuration parameters.\\n    /// @return The pool configuration.\\n    function getPoolConfig()\\n        external\\n        view\\n        returns (IHyperdrive.PoolConfig memory);\\n\\n    /// @notice Gets info about the pool's reserves and other state that is\\n    ///         important to evaluate potential trades.\\n    /// @return The pool info.\\n    function getPoolInfo() external view returns (IHyperdrive.PoolInfo memory);\\n\\n    /// @notice Gets the amount of governance fees that haven't been collected.\\n    /// @return The amount of uncollected governance fees.\\n    function getUncollectedGovernanceFees() external view returns (uint256);\\n\\n    /// @notice Gets information relating to the pool's withdrawal pool. This\\n    ///         includes the total proceeds underlying the withdrawal pool and\\n    ///         the number of withdrawal shares ready to be redeemed.\\n    /// @return The withdrawal pool information.\\n    function getWithdrawPool()\\n        external\\n        view\\n        returns (IHyperdrive.WithdrawPool memory);\\n\\n    /// @notice Gets an account's pauser status within the Hyperdrive pool.\\n    /// @param _account The account to check.\\n    /// @return The account's pauser status.\\n    function isPauser(address _account) external view returns (bool);\\n\\n    /// @notice Gets the storage values at the specified slots.\\n    /// @dev This serves as a generalized getter that allows consumers to create\\n    ///      custom getters to suit their purposes.\\n    /// @param _slots The storage slots to load.\\n    /// @return The values at the specified slots.\\n    function load(\\n        uint256[] calldata _slots\\n    ) external view returns (bytes32[] memory);\\n}\\n\",\"keccak256\":\"0x53d74fac0617c24e649a28a95bf23174952ee7e137a9af065326505ca14903c1\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IMultiTokenCore } from \\\"./IMultiTokenCore.sol\\\";\\nimport { IMultiTokenEvents } from \\\"./IMultiTokenEvents.sol\\\";\\nimport { IMultiTokenMetadata } from \\\"./IMultiTokenMetadata.sol\\\";\\nimport { IMultiTokenRead } from \\\"./IMultiTokenRead.sol\\\";\\n\\ninterface IMultiToken is\\n    IMultiTokenEvents,\\n    IMultiTokenRead,\\n    IMultiTokenCore,\\n    IMultiTokenMetadata\\n{}\\n\",\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenCore {\\n    /// @notice Transfers an amount of assets from the source to the destination.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    function transferFrom(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Permissioned transfer for the bridge to access, only callable by\\n    ///         the ERC20 linking bridge.\\n    /// @param tokenID The token identifier.\\n    /// @param from The address whose balance will be reduced.\\n    /// @param to The address whose balance will be increased.\\n    /// @param amount The amount of token to move.\\n    /// @param caller The msg.sender or the caller of the ERC20Forwarder.\\n    function transferFromBridge(\\n        uint256 tokenID,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to set an approval for an individual asset with\\n    ///         specific amount.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement (saving gas\\n    ///        on transfer).\\n    function setApproval(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount\\n    ) external;\\n\\n    /// @notice Allows the compatibility linking contract to forward calls to\\n    ///         set asset approvals.\\n    /// @param tokenID The asset to approve the use of.\\n    /// @param operator The address who will be able to use the tokens.\\n    /// @param amount The max tokens the approved person can use, setting to\\n    ///        uint256.max will cause the value to never decrement [saving gas\\n    ///        on transfer].\\n    /// @param caller The eth address which called the linking contract.\\n    function setApprovalBridge(\\n        uint256 tokenID,\\n        address operator,\\n        uint256 amount,\\n        address caller\\n    ) external;\\n\\n    /// @notice Allows a user to approve an operator to use all of their assets.\\n    /// @param operator The eth address which can access the caller's assets.\\n    /// @param approved True to approve, false to remove approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Transfers several assets from one account to another.\\n    /// @param from The source account.\\n    /// @param to The destination account.\\n    /// @param ids The array of token ids of the asset to transfer.\\n    /// @param values The amount of each token to transfer.\\n    function batchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata values\\n    ) external;\\n\\n    /// @notice Allows a caller who is not the owner of an account to execute the\\n    ///         functionality of 'approve' for all assets with the owner's\\n    ///         signature.\\n    /// @param owner The owner of the account which is having the new approval set.\\n    /// @param spender The address which will be allowed to spend owner's tokens.\\n    /// @param _approved A boolean of the approval status to set to.\\n    /// @param deadline The timestamp which the signature must be submitted by\\n    ///        to be valid.\\n    /// @param v Extra ECDSA data which allows public key recovery from\\n    ///        signature assumed to be 27 or 28.\\n    /// @param r The r component of the ECDSA signature.\\n    /// @param s The s component of the ECDSA signature.\\n    /// @dev The signature for this function follows EIP 712 standard and should\\n    ///      be generated with the eth_signTypedData JSON RPC call instead of\\n    ///      the eth_sign JSON RPC call. If using out of date parity signing\\n    ///      libraries the v component may need to be adjusted. Also it is very\\n    ///      rare but possible for v to be other values, those values are not\\n    ///      supported.\\n    function permitForAll(\\n        address owner,\\n        address spender,\\n        bool _approved,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenEvents {\\n    /// @notice Emitted when tokens are transferred from one account to another.\\n    event TransferSingle(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 id,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the allowance for another\\n    ///         account.\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice Emitted when an account changes the approval for all of its\\n    ///         tokens.\\n    event ApprovalForAll(\\n        address indexed account,\\n        address indexed operator,\\n        bool approved\\n    );\\n}\\n\",\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenMetadata {\\n    /// @notice Gets the EIP712 permit typehash of the MultiToken.\\n    /// @return The EIP712 permit typehash of the MultiToken.\\n    // solhint-disable func-name-mixedcase\\n    function PERMIT_TYPEHASH() external view returns (bytes32);\\n\\n    /// @notice Gets the EIP712 domain separator of the MultiToken.\\n    /// @return The EIP712 domain separator of the MultiToken.\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\"},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\ninterface IMultiTokenRead {\\n    /// @notice Gets the decimals of the MultiToken.\\n    /// @return The decimals of the MultiToken.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Gets the name of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The name of the MultiToken.\\n    function name(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the symbol of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The symbol of the MultiToken.\\n    function symbol(uint256 tokenId) external view returns (string memory);\\n\\n    /// @notice Gets the total supply of the MultiToken.\\n    /// @param tokenId The sub-token ID.\\n    /// @return The total supply of the MultiToken.\\n    function totalSupply(uint256 tokenId) external view returns (uint256);\\n\\n    /// @notice Gets the approval-for-all status of a spender on behalf of an\\n    ///         owner.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The approval-for-all status of the spender for the owner.\\n    function isApprovedForAll(\\n        address owner,\\n        address spender\\n    ) external view returns (bool);\\n\\n    /// @notice Gets the allowance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @param spender The spender of the tokens.\\n    /// @return The allowance of the spender for the owner.\\n    function perTokenApprovals(\\n        uint256 tokenId,\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the balance of a spender for a sub-token.\\n    /// @param tokenId The sub-token ID.\\n    /// @param owner The owner of the tokens.\\n    /// @return The balance of the owner.\\n    function balanceOf(\\n        uint256 tokenId,\\n        address owner\\n    ) external view returns (uint256);\\n\\n    /// @notice Gets the permit nonce for an account.\\n    /// @param owner The owner of the tokens.\\n    /// @return The permit nonce of the owner.\\n    function nonces(address owner) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\"},\"contracts/src/libraries/FixedPointMath.sol\":{\"content\":\"/// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"../interfaces/IHyperdrive.sol\\\";\\nimport { SafeCast } from \\\"./SafeCast.sol\\\";\\n\\nuint256 constant ONE = 1e18;\\n\\n/// @author DELV\\n/// @title FixedPointMath\\n/// @notice A fixed-point math library.\\n/// @custom:disclaimer The language used in this code is for coding convenience\\n///                    only, and is not intended to, and does not, have any\\n///                    particular legal or regulatory significance.\\nlibrary FixedPointMath {\\n    using FixedPointMath for uint256;\\n    using SafeCast for uint256;\\n\\n    uint256 internal constant MAX_UINT256 = 2 ** 256 - 1;\\n\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @param y Fixed point number in 1e18 format.\\n    /// @param denominator Fixed point number in 1e18 format.\\n    /// @return z The result of x * y / denominator rounded down.\\n    function mulDivDown(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\\n            if iszero(\\n                mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // Divide x * y by the denominator.\\n            z := div(mul(x, y), denominator)\\n        }\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return Result of a * b rounded down.\\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivDown(a, b, ONE));\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return Result of a / b rounded down.\\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivDown(a, ONE, b)); // Equivalent to (a * 1e18) / b rounded down.\\n    }\\n\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @param y Fixed point number in 1e18 format.\\n    /// @param denominator Fixed point number in 1e18 format.\\n    /// @return z The result of x * y / denominator rounded up.\\n    function mulDivUp(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 z) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Equivalent to require(denominator != 0 && (y == 0 || x <= type(uint256).max / y))\\n            if iszero(\\n                mul(denominator, iszero(mul(y, gt(x, div(MAX_UINT256, y)))))\\n            ) {\\n                revert(0, 0)\\n            }\\n\\n            // If x * y modulo the denominator is strictly greater than 0,\\n            // 1 is added to round up the division of x * y by the denominator.\\n            z := add(\\n                gt(mod(mul(x, y), denominator), 0),\\n                div(mul(x, y), denominator)\\n            )\\n        }\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return The result of a * b rounded up.\\n    function mulUp(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivUp(a, b, ONE));\\n    }\\n\\n    /// @param a Fixed point number in 1e18 format.\\n    /// @param b Fixed point number in 1e18 format.\\n    /// @return The result of a / b rounded up.\\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return (mulDivUp(a, ONE, b));\\n    }\\n\\n    /// @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @param y Fixed point number in 1e18 format.\\n    /// @return The result of x^y.\\n    function pow(uint256 x, uint256 y) internal pure returns (uint256) {\\n        // If the exponent is 0, return 1.\\n        if (y == 0) {\\n            return ONE;\\n        }\\n\\n        // If the base is 0, return 0.\\n        if (x == 0) {\\n            return 0;\\n        }\\n\\n        // Using properties of logarithms we calculate x^y:\\n        // -> ln(x^y) = y * ln(x)\\n        // -> e^(y * ln(x)) = x^y\\n        int256 y_int256 = y.toInt256(); // solhint-disable-line var-name-mixedcase\\n\\n        // Compute y*ln(x)\\n        // Any overflow for x will be caught in ln() in the initial bounds check\\n        int256 lnx = ln(x.toInt256());\\n        int256 ylnx;\\n        assembly (\\\"memory-safe\\\") {\\n            ylnx := mul(y_int256, lnx)\\n        }\\n        ylnx /= int256(ONE);\\n\\n        // Calculate exp(y * ln(x)) to get x^y\\n        return uint256(exp(ylnx));\\n    }\\n\\n    /// @dev Computes e^x in 1e18 fixed point.\\n    /// @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @return r The result of e^x.\\n    function exp(int256 x) internal pure returns (int256 r) {\\n        unchecked {\\n            // When the result is < 0.5 we return zero. This happens when\\n            // x <= floor(log(0.5e18) * 1e18) ~ -42e18\\n            if (x <= -42139678854452767551) return 0;\\n\\n            // When the result is > (2**255 - 1) / 1e18 we can not represent it as an\\n            // int. This happens when x >= floor(log((2**255 - 1) / 1e18) * 1e18) ~ 135.\\n            if (x >= 135305999368893231589)\\n                revert IHyperdrive.ExpInvalidExponent();\\n\\n            // x is now in the range (-42, 136) * 1e18. Convert to (-42, 136) * 2**96\\n            // for more intermediate precision and a binary basis. This base conversion\\n            // is a multiplication by 1e18 / 2**96 = 5**18 / 2**78.\\n            x = (x << 78) / 5 ** 18;\\n\\n            // Reduce range of x to (-\\u00bd ln 2, \\u00bd ln 2) * 2**96 by factoring out powers\\n            // of two such that exp(x) = exp(x') * 2**k, where k is an integer.\\n            // Solving this gives k = round(x / log(2)) and x' = x - k * log(2).\\n            // Note: 54916777467707473351141471128 = 2^96 ln(2).\\n            int256 k = ((x << 96) / 54916777467707473351141471128 + 2 ** 95) >>\\n                96;\\n            x = x - k * 54916777467707473351141471128;\\n\\n            // k is in the range [-61, 195].\\n\\n            // Evaluate using a (6, 7)-term rational approximation.\\n            // p is made monic, we'll multiply by a scale factor later.\\n            int256 y = x + 1346386616545796478920950773328;\\n            y = ((y * x) >> 96) + 57155421227552351082224309758442;\\n            int256 p = y + x - 94201549194550492254356042504812;\\n            p = ((p * y) >> 96) + 28719021644029726153956944680412240;\\n            p = p * x + (4385272521454847904659076985693276 << 96);\\n\\n            // We leave p in 2**192 basis so we don't need to scale it back up for the division.\\n            int256 q = x - 2855989394907223263936484059900;\\n            q = ((q * x) >> 96) + 50020603652535783019961831881945;\\n            q = ((q * x) >> 96) - 533845033583426703283633433725380;\\n            q = ((q * x) >> 96) + 3604857256930695427073651918091429;\\n            q = ((q * x) >> 96) - 14423608567350463180887372962807573;\\n            q = ((q * x) >> 96) + 26449188498355588339934803723976023;\\n\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                // Div in assembly because solidity adds a zero check despite the unchecked.\\n                // The q polynomial won't have zeros in the domain as all its roots are complex.\\n                // No scaling is necessary because p is already 2**96 too large.\\n                r := sdiv(p, q)\\n            }\\n\\n            // r should be in the range (0.09, 0.25) * 2**96.\\n\\n            // We now need to multiply r by:\\n            // * the scale factor s = ~6.031367120.\\n            // * the 2**k factor from the range reduction.\\n            // * the 1e18 / 2**96 factor for base conversion.\\n            // We do this all at once, with an intermediate result in 2**213\\n            // basis, so the final right shift is always by a positive amount.\\n            r = ((uint256(r) *\\n                3822833074963236453042738258902158003155416615667) >>\\n                uint256(195 - k)).toInt256();\\n        }\\n    }\\n\\n    /// @dev Computes ln(x) in 1e18 fixed point.\\n    /// @dev Credit to Remco (https://github.com/recmo/experiment-solexp/blob/main/src/FixedPointMathLib.sol)\\n    /// @dev Reverts if x is negative or zero.\\n    /// @param x Fixed point number in 1e18 format.\\n    /// @return r Result of ln(x).\\n    function ln(int256 x) internal pure returns (int256 r) {\\n        unchecked {\\n            if (x <= 0) {\\n                revert IHyperdrive.LnInvalidInput();\\n            }\\n\\n            // We want to convert x from 10**18 fixed point to 2**96 fixed point.\\n            // We do this by multiplying by 2**96 / 10**18. But since\\n            // ln(x * C) = ln(x) + ln(C), we can simply do nothing here\\n            // and add ln(2**96 / 10**18) at the end.\\n\\n            // This step inlines the `ilog2` call in Remco's implementation:\\n            // https://github.com/recmo/experiment-solexp/blob/bbc164fb5ec078cfccf3c71b521605106bfae00b/src/FixedPointMathLib.sol#L57-L68\\n            //\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := shl(7, lt(0xffffffffffffffffffffffffffffffff, x))\\n                r := or(r, shl(6, lt(0xffffffffffffffff, shr(r, x))))\\n                r := or(r, shl(5, lt(0xffffffff, shr(r, x))))\\n                r := or(r, shl(4, lt(0xffff, shr(r, x))))\\n                r := or(r, shl(3, lt(0xff, shr(r, x))))\\n                r := or(r, shl(2, lt(0xf, shr(r, x))))\\n                r := or(r, shl(1, lt(0x3, shr(r, x))))\\n                r := or(r, lt(0x1, shr(r, x)))\\n            }\\n\\n            // Reduce range of x to [1, 2) * 2**96\\n            // ln(2^k * x) = k * ln(2) + ln(x)\\n            int256 k = r - 96;\\n            x <<= uint256(159 - k);\\n            x = (uint256(x) >> 159).toInt256();\\n\\n            // Evaluate using a (8, 8)-term rational approximation.\\n            // p is made monic, we will multiply by a scale factor later.\\n            int256 p = x + 3273285459638523848632254066296;\\n            p = ((p * x) >> 96) + 24828157081833163892658089445524;\\n            p = ((p * x) >> 96) + 43456485725739037958740375743393;\\n            p = ((p * x) >> 96) - 11111509109440967052023855526967;\\n            p = ((p * x) >> 96) - 45023709667254063763336534515857;\\n            p = ((p * x) >> 96) - 14706773417378608786704636184526;\\n            p = p * x - (795164235651350426258249787498 << 96);\\n\\n            // We leave p in 2**192 basis so we don't need to scale it back up for the division.\\n            // q is monic by convention.\\n            int256 q = x + 5573035233440673466300451813936;\\n            q = ((q * x) >> 96) + 71694874799317883764090561454958;\\n            q = ((q * x) >> 96) + 283447036172924575727196451306956;\\n            q = ((q * x) >> 96) + 401686690394027663651624208769553;\\n            q = ((q * x) >> 96) + 204048457590392012362485061816622;\\n            q = ((q * x) >> 96) + 31853899698501571402653359427138;\\n            q = ((q * x) >> 96) + 909429971244387300277376558375;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                // Div in assembly because solidity adds a zero check despite the unchecked.\\n                // The q polynomial is known not to have zeros in the domain.\\n                // No scaling required because p is already 2**96 too large.\\n                r := sdiv(p, q)\\n            }\\n\\n            // r is in the range (0, 0.125) * 2**96\\n\\n            // Finalization, we need to:\\n            // * multiply by the scale factor s = 5.549\\u2026\\n            // * add ln(2**96 / 10**18)\\n            // * add k * ln(2)\\n            // * multiply by 10**18 / 2**96 = 5**18 >> 78\\n\\n            // mul s * 5e18 * 2**96, base is now 5**18 * 2**192\\n            r *= 1677202110996718588342820967067443963516166;\\n            // add ln(2) * k * 5e18 * 2**192\\n            r +=\\n                16597577552685614221487285958193947469193820559219878177908093499208371 *\\n                k;\\n            // add ln(2**96 / 10**18) * 5e18 * 2**192\\n            r += 600920179829731861736702779321621459595472258049074101567377883020018308;\\n            // base conversion: mul 2**18 / 2**192\\n            r >>= 174;\\n        }\\n    }\\n\\n    /// @dev Updates a weighted average by adding or removing a weighted delta.\\n    /// @param _totalWeight The total weight before the update.\\n    /// @param _deltaWeight The weight of the new value.\\n    /// @param _average The weighted average before the update.\\n    /// @param _delta The new value.\\n    /// @return average The new weighted average.\\n    function updateWeightedAverage(\\n        uint256 _average,\\n        uint256 _totalWeight,\\n        uint256 _delta,\\n        uint256 _deltaWeight,\\n        bool _isAdding\\n    ) internal pure returns (uint256 average) {\\n        // If the delta weight is zero, the average does not change.\\n        if (_deltaWeight == 0) {\\n            return _average;\\n        }\\n\\n        // If the delta weight should be added to the total weight, we compute\\n        // the weighted average as:\\n        //\\n        // average = (totalWeight * average + deltaWeight * delta) /\\n        //           (totalWeight + deltaWeight)\\n        if (_isAdding) {\\n            // NOTE: Round down to underestimate the average.\\n            average = (_totalWeight.mulDown(_average) +\\n                _deltaWeight.mulDown(_delta)).divDown(\\n                    _totalWeight + _deltaWeight\\n                );\\n\\n            // An important property that should always hold when we are adding\\n            // to the average is:\\n            //\\n            // min(_delta, _average) <= average <= max(_delta, _average)\\n            //\\n            // To ensure that this is always the case, we clamp the weighted\\n            // average to this range. We don't have to worry about the\\n            // case where average > _delta.max(average) because rounding down when\\n            // computing this average makes this case infeasible.\\n            uint256 minAverage = _delta.min(_average);\\n            if (average < minAverage) {\\n                average = minAverage;\\n            }\\n        }\\n        // If the delta weight should be subtracted from the total weight, we\\n        // compute the weighted average as:\\n        //\\n        // average = (totalWeight * average - deltaWeight * delta) /\\n        //           (totalWeight - deltaWeight)\\n        else {\\n            if (_totalWeight == _deltaWeight) {\\n                return 0;\\n            }\\n\\n            // NOTE: Round down to underestimate the average.\\n            average = (_totalWeight.mulDown(_average) -\\n                _deltaWeight.mulUp(_delta)).divDown(\\n                    _totalWeight - _deltaWeight\\n                );\\n        }\\n    }\\n\\n    /// @dev Calculates the minimum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The minimum of the two values.\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? b : a;\\n    }\\n\\n    /// @dev Calculates the maximum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The maximum of the two values.\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /// @dev Calculates the minimum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The minimum of the two values.\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? b : a;\\n    }\\n\\n    /// @dev Calculates the maximum of two values.\\n    /// @param a The first value.\\n    /// @param b The second value.\\n    /// @return The maximum of the two values.\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /// @dev Calculates the absolute value of an int256.\\n    /// @param a The value.\\n    /// @return The absolute value of the input.\\n    function abs(int256 a) internal pure returns (int256) {\\n        return a < 0 ? -a : a;\\n    }\\n}\\n\",\"keccak256\":\"0x6f3e307ac0baf0c0af25bb278e385cbaf13ef0aac27dc638635655a91427c9be\",\"license\":\"Apache-2.0\"},\"contracts/src/libraries/SafeCast.sol\":{\"content\":\"/// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { IHyperdrive } from \\\"../interfaces/IHyperdrive.sol\\\";\\n\\n/// @notice Safe unsigned integer casting library that reverts on overflow.\\n/// @author Inspired by OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeCast.sol)\\nlibrary SafeCast {\\n    /// @notice This function safely casts a uint256 to a uint112.\\n    /// @param x The uint256 to cast to uint112.\\n    /// @return y The uint112 casted from x.\\n    function toUint112(uint256 x) internal pure returns (uint112 y) {\\n        if (x > type(uint112).max) {\\n            revert IHyperdrive.UnsafeCastToUint112();\\n        }\\n        y = uint112(x);\\n    }\\n\\n    /// @notice This function safely casts a uint256 to a uint128.\\n    /// @param x The uint256 to cast to uint128.\\n    /// @return y The uint128 casted from x.\\n    function toUint128(uint256 x) internal pure returns (uint128 y) {\\n        if (x > type(uint128).max) {\\n            revert IHyperdrive.UnsafeCastToUint128();\\n        }\\n        y = uint128(x);\\n    }\\n\\n    /// @notice This function safely casts an uint256 to an int128.\\n    /// @param x The uint256 to cast to int128.\\n    /// @return y The int128 casted from x.\\n    function toInt128(uint256 x) internal pure returns (int128 y) {\\n        if (x > uint128(type(int128).max)) {\\n            revert IHyperdrive.UnsafeCastToInt128();\\n        }\\n        y = int128(int256(x));\\n    }\\n\\n    /// @notice This function safely casts an int256 to an int128.\\n    /// @param x The int256 to cast to int128.\\n    /// @return y The int128 casted from x.\\n    function toInt128(int256 x) internal pure returns (int128 y) {\\n        if (x < type(int128).min || x > type(int128).max) {\\n            revert IHyperdrive.UnsafeCastToInt128();\\n        }\\n        y = int128(x);\\n    }\\n\\n    /// @notice This function safely casts an uint256 to an int256.\\n    /// @param x The uint256 to cast to int256.\\n    /// @return y The int256 casted from x.\\n    function toInt256(uint256 x) internal pure returns (int256 y) {\\n        if (x > uint256(type(int256).max)) {\\n            revert IHyperdrive.UnsafeCastToInt256();\\n        }\\n        y = int256(x);\\n    }\\n}\\n\",\"keccak256\":\"0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c\",\"license\":\"Apache-2.0\"},\"contracts/test/ERC20Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { Authority } from \\\"solmate/auth/Auth.sol\\\";\\nimport { MultiRolesAuthority } from \\\"solmate/auth/authorities/MultiRolesAuthority.sol\\\";\\nimport { ERC20 } from \\\"solmate/tokens/ERC20.sol\\\";\\n\\ncontract ERC20Mintable is ERC20, MultiRolesAuthority {\\n    bool public immutable isCompetitionMode;\\n    uint256 public immutable maxMintAmount;\\n\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint8 decimals,\\n        address admin,\\n        bool isCompetitionMode_,\\n        uint256 maxMintAmount_\\n    )\\n        ERC20(name, symbol, decimals)\\n        MultiRolesAuthority(admin, Authority(address(address(this))))\\n    {\\n        isCompetitionMode = isCompetitionMode_;\\n        maxMintAmount = maxMintAmount_;\\n    }\\n\\n    modifier requiresAuthDuringCompetition() {\\n        if (isCompetitionMode) {\\n            require(\\n                isAuthorized(msg.sender, msg.sig),\\n                \\\"ERC20Mintable: not authorized\\\"\\n            );\\n        }\\n        _;\\n    }\\n\\n    function mint(uint256 amount) external requiresAuthDuringCompetition {\\n        require(amount <= maxMintAmount, \\\"MockERC4626: Invalid mint amount\\\");\\n        _mint(msg.sender, amount);\\n    }\\n\\n    function mint(\\n        address destination,\\n        uint256 amount\\n    ) external requiresAuthDuringCompetition {\\n        require(amount <= maxMintAmount, \\\"MockERC4626: Invalid mint amount\\\");\\n        _mint(destination, amount);\\n    }\\n\\n    function burn(uint256 amount) external requiresAuthDuringCompetition {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    function burn(\\n        address destination,\\n        uint256 amount\\n    ) external requiresAuthDuringCompetition {\\n        _burn(destination, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xe39cce294bb9af75378c32ebd831b76f146d105d1a42c93a002a4c045f4e16e5\",\"license\":\"Apache-2.0\"},\"contracts/test/MockRocketPool.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.20;\\n\\nimport { MultiRolesAuthority } from \\\"solmate/auth/authorities/MultiRolesAuthority.sol\\\";\\nimport { FixedPointMath } from \\\"../src/libraries/FixedPointMath.sol\\\";\\nimport { ERC20Mintable } from \\\"./ERC20Mintable.sol\\\";\\n\\n/// @author DELV\\n/// @title MockRocketPool\\n/// @notice This mock yield source will accrue interest at a specified rate\\n///         Every stateful interaction will accrue interest, so the interest\\n///         accrual will approximate continuous compounding as the contract\\n///         is called more frequently.\\n/// @custom:disclaimer The language used in this code is for coding convenience\\n///                    only, and is not intended to, and does not, have any\\n///                    particular legal or regulatory significance.\\ncontract MockRocketPool is MultiRolesAuthority, ERC20Mintable {\\n    using FixedPointMath for uint256;\\n\\n    // Interest State\\n    uint256 internal _rate;\\n    uint256 internal _lastUpdated;\\n\\n    // Lido State\\n    uint256 totalPooledEther;\\n    uint256 totalShares;\\n\\n    constructor(\\n        uint256 _initialRate,\\n        address _admin,\\n        bool _isCompetitionMode,\\n        uint256 _maxMintAmount\\n    )\\n        ERC20Mintable(\\n            \\\"RocketPool ETH\\\",\\n            \\\"RETH\\\",\\n            18,\\n            _admin,\\n            _isCompetitionMode,\\n            _maxMintAmount\\n        )\\n    {\\n        _rate = _initialRate;\\n        _lastUpdated = block.timestamp;\\n    }\\n\\n    /// Overrides ///\\n\\n    function submit(address) external payable returns (uint256) {\\n        // Accrue interest.\\n        _accrue();\\n\\n        // If this is the first deposit, mint shares 1:1.\\n        if (getTotalShares() == 0) {\\n            totalShares = msg.value;\\n            totalPooledEther = msg.value;\\n            _mint(msg.sender, msg.value);\\n            return msg.value;\\n        }\\n\\n        // Calculate the amount of stETH shares that should be minted.\\n        uint256 shares = msg.value.mulDivDown(\\n            getTotalShares(),\\n            getTotalPooledEther()\\n        );\\n\\n        // Update the Lido state.\\n        totalPooledEther += msg.value;\\n        totalShares += shares;\\n\\n        // Mint the stETH tokens to the user.\\n        _mint(msg.sender, msg.value);\\n\\n        return shares;\\n    }\\n\\n    function transferShares(\\n        address _recipient,\\n        uint256 _sharesAmount\\n    ) external returns (uint256) {\\n        // Accrue interest.\\n        _accrue();\\n\\n        // Calculate the amount of tokens that should be transferred.\\n        uint256 tokenAmount = _sharesAmount.mulDivDown(\\n            getTotalPooledEther(),\\n            getTotalShares()\\n        );\\n\\n        // Transfer the tokens to the user.\\n        transfer(_recipient, tokenAmount);\\n\\n        return tokenAmount;\\n    }\\n\\n    function transferSharesFrom(\\n        address _sender,\\n        address _recipient,\\n        uint256 _sharesAmount\\n    ) external returns (uint256) {\\n        // Accrue interest.\\n        _accrue();\\n\\n        // Calculate the amount of tokens that should be transferred.\\n        uint256 tokenAmount = _sharesAmount.mulDivDown(\\n            getTotalPooledEther(),\\n            getTotalShares()\\n        );\\n\\n        // Transfer the tokens to the user.\\n        transferFrom(_sender, _recipient, tokenAmount);\\n\\n        return tokenAmount;\\n    }\\n\\n    function getTotalPooledEther() public view returns (uint256) {\\n        return totalPooledEther + _getAccruedInterest();\\n    }\\n\\n    function getTotalShares() public view returns (uint256) {\\n        return totalShares;\\n    }\\n\\n    /// IRocketTokenRETH ///\\n\\n    function getEthValue(uint256 _rethAmount) external view returns (uint256) {\\n        return _rethAmount.mulDivDown(getTotalPooledEther(), getTotalShares());\\n    }\\n\\n    function getRethValue(uint256 _ethAmount) external view returns (uint256) {\\n        return _ethAmount.mulDivDown(getTotalShares(), getTotalPooledEther());\\n    }\\n\\n    /// Mock ///\\n\\n    function setRate(uint256 _rate_) external requiresAuthDuringCompetition {\\n        _accrue();\\n        _rate = _rate_;\\n    }\\n\\n    function getRate() external view returns (uint256) {\\n        return _rate;\\n    }\\n\\n    function _accrue() internal {\\n        uint256 interest = _getAccruedInterest();\\n        if (interest > 0) {\\n            totalPooledEther += interest;\\n        }\\n        _lastUpdated = block.timestamp;\\n    }\\n\\n    function _getAccruedInterest() internal view returns (uint256) {\\n        if (_rate == 0) {\\n            return 0;\\n        }\\n\\n        // base_balance = base_balance * (1 + r * t)\\n        uint256 timeElapsed = (block.timestamp - _lastUpdated).divDown(\\n            365 days\\n        );\\n        uint256 accrued = totalPooledEther.mulDown(_rate.mulDown(timeElapsed));\\n        return accrued;\\n    }\\n}\\n\",\"keccak256\":\"0x431d5dad8fb8e909f6270c60f3064c380707f22b6b146802144433e44e83e0f1\",\"license\":\"Apache-2.0\"},\"solmate/auth/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\nabstract contract Auth {\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    event AuthorityUpdated(address indexed user, Authority indexed newAuthority);\\n\\n    address public owner;\\n\\n    Authority public authority;\\n\\n    constructor(address _owner, Authority _authority) {\\n        owner = _owner;\\n        authority = _authority;\\n\\n        emit OwnershipTransferred(msg.sender, _owner);\\n        emit AuthorityUpdated(msg.sender, _authority);\\n    }\\n\\n    modifier requiresAuth() virtual {\\n        require(isAuthorized(msg.sender, msg.sig), \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    function isAuthorized(address user, bytes4 functionSig) internal view virtual returns (bool) {\\n        Authority auth = authority; // Memoizing authority saves us a warm SLOAD, around 100 gas.\\n\\n        // Checking if the caller is the owner only after calling the authority saves gas in most cases, but be\\n        // aware that this makes protected functions uncallable even to the owner if the authority is out of order.\\n        return (address(auth) != address(0) && auth.canCall(user, address(this), functionSig)) || user == owner;\\n    }\\n\\n    function setAuthority(Authority newAuthority) public virtual {\\n        // We check if the caller is the owner first because we want to ensure they can\\n        // always swap out the authority even if it's reverting or using up a lot of gas.\\n        require(msg.sender == owner || authority.canCall(msg.sender, address(this), msg.sig));\\n\\n        authority = newAuthority;\\n\\n        emit AuthorityUpdated(msg.sender, newAuthority);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual requiresAuth {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which provides authorization data to an Auth instance.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\ninterface Authority {\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\"},\"solmate/auth/authorities/MultiRolesAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {Auth, Authority} from \\\"../Auth.sol\\\";\\n\\n/// @notice Flexible and target agnostic role based Authority that supports up to 256 roles.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)\\ncontract MultiRolesAuthority is Auth, Authority {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled);\\n\\n    event PublicCapabilityUpdated(bytes4 indexed functionSig, bool enabled);\\n\\n    event RoleCapabilityUpdated(uint8 indexed role, bytes4 indexed functionSig, bool enabled);\\n\\n    event TargetCustomAuthorityUpdated(address indexed target, Authority indexed authority);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner, Authority _authority) Auth(_owner, _authority) {}\\n\\n    /*//////////////////////////////////////////////////////////////\\n                     CUSTOM TARGET AUTHORITY STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => Authority) public getTargetCustomAuthority;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ROLE/USER STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => bytes32) public getUserRoles;\\n\\n    mapping(bytes4 => bool) public isCapabilityPublic;\\n\\n    mapping(bytes4 => bytes32) public getRolesWithCapability;\\n\\n    function doesUserHaveRole(address user, uint8 role) public view virtual returns (bool) {\\n        return (uint256(getUserRoles[user]) >> role) & 1 != 0;\\n    }\\n\\n    function doesRoleHaveCapability(uint8 role, bytes4 functionSig) public view virtual returns (bool) {\\n        return (uint256(getRolesWithCapability[functionSig]) >> role) & 1 != 0;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                           AUTHORIZATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) public view virtual override returns (bool) {\\n        Authority customAuthority = getTargetCustomAuthority[target];\\n\\n        if (address(customAuthority) != address(0)) return customAuthority.canCall(user, target, functionSig);\\n\\n        return\\n            isCapabilityPublic[functionSig] || bytes32(0) != getUserRoles[user] & getRolesWithCapability[functionSig];\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n               CUSTOM TARGET AUTHORITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setTargetCustomAuthority(address target, Authority customAuthority) public virtual requiresAuth {\\n        getTargetCustomAuthority[target] = customAuthority;\\n\\n        emit TargetCustomAuthorityUpdated(target, customAuthority);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                  PUBLIC CAPABILITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setPublicCapability(bytes4 functionSig, bool enabled) public virtual requiresAuth {\\n        isCapabilityPublic[functionSig] = enabled;\\n\\n        emit PublicCapabilityUpdated(functionSig, enabled);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                       USER ROLE ASSIGNMENT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setUserRole(\\n        address user,\\n        uint8 role,\\n        bool enabled\\n    ) public virtual requiresAuth {\\n        if (enabled) {\\n            getUserRoles[user] |= bytes32(1 << role);\\n        } else {\\n            getUserRoles[user] &= ~bytes32(1 << role);\\n        }\\n\\n        emit UserRoleUpdated(user, role, enabled);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                   ROLE CAPABILITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setRoleCapability(\\n        uint8 role,\\n        bytes4 functionSig,\\n        bool enabled\\n    ) public virtual requiresAuth {\\n        if (enabled) {\\n            getRolesWithCapability[functionSig] |= bytes32(1 << role);\\n        } else {\\n            getRolesWithCapability[functionSig] &= ~bytes32(1 << role);\\n        }\\n\\n        emit RoleCapabilityUpdated(role, functionSig, enabled);\\n    }\\n}\\n\",\"keccak256\":\"0x5544e61f98c0e80a8c4b9b691952122d3547ade0c0ad830ae6d5fd65f2d0dbe3\",\"license\":\"AGPL-3.0-only\"},\"solmate/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3103,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3105,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3109,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3113,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3119,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3127,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2623,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"owner","offset":0,"slot":"6","type":"t_address"},{"astId":2626,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"authority","offset":0,"slot":"7","type":"t_contract(Authority)2777"},{"astId":2834,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"getTargetCustomAuthority","offset":0,"slot":"8","type":"t_mapping(t_address,t_contract(Authority)2777)"},{"astId":2838,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"getUserRoles","offset":0,"slot":"9","type":"t_mapping(t_address,t_bytes32)"},{"astId":2842,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"isCapabilityPublic","offset":0,"slot":"10","type":"t_mapping(t_bytes4,t_bool)"},{"astId":2846,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"getRolesWithCapability","offset":0,"slot":"11","type":"t_mapping(t_bytes4,t_bytes32)"},{"astId":2304,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"_rate","offset":0,"slot":"12","type":"t_uint256"},{"astId":2306,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"_lastUpdated","offset":0,"slot":"13","type":"t_uint256"},{"astId":2308,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"totalPooledEther","offset":0,"slot":"14","type":"t_uint256"},{"astId":2310,"contract":"contracts/test/MockRocketPool.sol:MockRocketPool","label":"totalShares","offset":0,"slot":"15","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_contract(Authority)2777":{"encoding":"inplace","label":"contract Authority","numberOfBytes":"20"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_contract(Authority)2777)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract Authority)","numberOfBytes":"32","value":"t_contract(Authority)2777"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes4,t_bytes32)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"getEthValue(uint256)":{"notice":"IRocketTokenRETH ///"},"setRate(uint256)":{"notice":"Mock ///"},"submit(address)":{"notice":"Overrides ///"}},"notice":"This mock yield source will accrue interest at a specified rate         Every stateful interaction will accrue interest, so the interest         accrual will approximate continuous compounding as the contract         is called more frequently.","version":1}}},"solmate/auth/Auth.sol":{"Auth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"authority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"authority()":"bf7e214f","owner()":"8da5cb5b","setAuthority(address)":"7a9e5e4b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides a flexible and updatable auth pattern which is completely separate from application logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/auth/Auth.sol\":\"Auth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"solmate/auth/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\nabstract contract Auth {\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    event AuthorityUpdated(address indexed user, Authority indexed newAuthority);\\n\\n    address public owner;\\n\\n    Authority public authority;\\n\\n    constructor(address _owner, Authority _authority) {\\n        owner = _owner;\\n        authority = _authority;\\n\\n        emit OwnershipTransferred(msg.sender, _owner);\\n        emit AuthorityUpdated(msg.sender, _authority);\\n    }\\n\\n    modifier requiresAuth() virtual {\\n        require(isAuthorized(msg.sender, msg.sig), \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    function isAuthorized(address user, bytes4 functionSig) internal view virtual returns (bool) {\\n        Authority auth = authority; // Memoizing authority saves us a warm SLOAD, around 100 gas.\\n\\n        // Checking if the caller is the owner only after calling the authority saves gas in most cases, but be\\n        // aware that this makes protected functions uncallable even to the owner if the authority is out of order.\\n        return (address(auth) != address(0) && auth.canCall(user, address(this), functionSig)) || user == owner;\\n    }\\n\\n    function setAuthority(Authority newAuthority) public virtual {\\n        // We check if the caller is the owner first because we want to ensure they can\\n        // always swap out the authority even if it's reverting or using up a lot of gas.\\n        require(msg.sender == owner || authority.canCall(msg.sender, address(this), msg.sig));\\n\\n        authority = newAuthority;\\n\\n        emit AuthorityUpdated(msg.sender, newAuthority);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual requiresAuth {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which provides authorization data to an Auth instance.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\ninterface Authority {\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2623,"contract":"solmate/auth/Auth.sol:Auth","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2626,"contract":"solmate/auth/Auth.sol:Auth","label":"authority","offset":0,"slot":"1","type":"t_contract(Authority)2777"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(Authority)2777":{"encoding":"inplace","label":"contract Authority","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"notice":"Provides a flexible and updatable auth pattern which is completely separate from application logic.","version":1}},"Authority":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"canCall(address,address,bytes4)":"b7009613"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A generic interface for a contract which provides authorization data to an Auth instance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/auth/Auth.sol\":\"Authority\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"solmate/auth/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\nabstract contract Auth {\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    event AuthorityUpdated(address indexed user, Authority indexed newAuthority);\\n\\n    address public owner;\\n\\n    Authority public authority;\\n\\n    constructor(address _owner, Authority _authority) {\\n        owner = _owner;\\n        authority = _authority;\\n\\n        emit OwnershipTransferred(msg.sender, _owner);\\n        emit AuthorityUpdated(msg.sender, _authority);\\n    }\\n\\n    modifier requiresAuth() virtual {\\n        require(isAuthorized(msg.sender, msg.sig), \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    function isAuthorized(address user, bytes4 functionSig) internal view virtual returns (bool) {\\n        Authority auth = authority; // Memoizing authority saves us a warm SLOAD, around 100 gas.\\n\\n        // Checking if the caller is the owner only after calling the authority saves gas in most cases, but be\\n        // aware that this makes protected functions uncallable even to the owner if the authority is out of order.\\n        return (address(auth) != address(0) && auth.canCall(user, address(this), functionSig)) || user == owner;\\n    }\\n\\n    function setAuthority(Authority newAuthority) public virtual {\\n        // We check if the caller is the owner first because we want to ensure they can\\n        // always swap out the authority even if it's reverting or using up a lot of gas.\\n        require(msg.sender == owner || authority.canCall(msg.sender, address(this), msg.sig));\\n\\n        authority = newAuthority;\\n\\n        emit AuthorityUpdated(msg.sender, newAuthority);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual requiresAuth {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which provides authorization data to an Auth instance.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\ninterface Authority {\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A generic interface for a contract which provides authorization data to an Auth instance.","version":1}}},"solmate/auth/authorities/MultiRolesAuthority.sol":{"MultiRolesAuthority":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"contract Authority","name":"_authority","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"AuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"PublicCapabilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint8","name":"role","type":"uint8"},{"indexed":true,"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"RoleCapabilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"contract Authority","name":"authority","type":"address"}],"name":"TargetCustomAuthorityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint8","name":"role","type":"uint8"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"UserRoleUpdated","type":"event"},{"inputs":[],"name":"authority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"doesRoleHaveCapability","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"}],"name":"doesUserHaveRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"getRolesWithCapability","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getTargetCustomAuthority","outputs":[{"internalType":"contract Authority","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getUserRoles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"name":"isCapabilityPublic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract Authority","name":"newAuthority","type":"address"}],"name":"setAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setPublicCapability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bytes4","name":"functionSig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setRoleCapability","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"contract Authority","name":"customAuthority","type":"address"}],"name":"setTargetCustomAuthority","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setUserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2655":{"entryPoint":null,"id":2655,"parameterSlots":2,"returnSlots":0},"@_2829":{"entryPoint":null,"id":2829,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_addresst_contract$_Authority_$2777_fromMemory":{"entryPoint":225,"id":null,"parameterSlots":2,"returnSlots":2},"validator_revert_address":{"entryPoint":201,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:555:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:17","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:17"},"nodeType":"YulFunctionCall","src":"125:12:17"},"nodeType":"YulExpressionStatement","src":"125:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:17","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:17","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:17"},"nodeType":"YulFunctionCall","src":"104:11:17"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:17"},"nodeType":"YulFunctionCall","src":"100:19:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:17"},"nodeType":"YulFunctionCall","src":"89:31:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:17"},"nodeType":"YulFunctionCall","src":"79:42:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:17"},"nodeType":"YulFunctionCall","src":"72:50:17"},"nodeType":"YulIf","src":"69:70:17"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:17","type":""}],"src":"14:131:17"},{"body":{"nodeType":"YulBlock","src":"266:287:17","statements":[{"body":{"nodeType":"YulBlock","src":"312:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"321:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"324:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"314:6:17"},"nodeType":"YulFunctionCall","src":"314:12:17"},"nodeType":"YulExpressionStatement","src":"314:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"287:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"296:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:17"},"nodeType":"YulFunctionCall","src":"283:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"308:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"279:3:17"},"nodeType":"YulFunctionCall","src":"279:32:17"},"nodeType":"YulIf","src":"276:52:17"},{"nodeType":"YulVariableDeclaration","src":"337:29:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"356:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"350:5:17"},"nodeType":"YulFunctionCall","src":"350:16:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"400:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"375:24:17"},"nodeType":"YulFunctionCall","src":"375:31:17"},"nodeType":"YulExpressionStatement","src":"375:31:17"},{"nodeType":"YulAssignment","src":"415:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"425:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"415:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"439:40:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"464:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"475:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"460:3:17"},"nodeType":"YulFunctionCall","src":"460:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"454:5:17"},"nodeType":"YulFunctionCall","src":"454:25:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"443:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"513:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"488:24:17"},"nodeType":"YulFunctionCall","src":"488:33:17"},"nodeType":"YulExpressionStatement","src":"488:33:17"},{"nodeType":"YulAssignment","src":"530:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"540:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"530:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_contract$_Authority_$2777_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"224:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"235:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"247:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"255:6:17","type":""}],"src":"150:403:17"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_Authority_$2777_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516110fc3803806110fc83398101604081905261002f916100e1565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505061011b565b6001600160a01b03811681146100de57600080fd5b50565b600080604083850312156100f457600080fd5b82516100ff816100c9565b6020840151909250610110816100c9565b809150509250929050565b610fd28061012a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063e688747b11610066578063e688747b1461026f578063ea7ca276146102bd578063ed0d0efb14610301578063f2fde38b1461032157600080fd5b80638da5cb5b146101c1578063b700961314610206578063bf7e214f14610219578063c53a39851461023957600080fd5b80634b5159da116100d35780634b5159da1461017557806367aff48414610188578063728b952b1461019b5780637a9e5e4b146101ae57600080fd5b806306a36aee146100fa5780630bade8a41461012d5780630ea9b75b14610160575b600080fd5b61011a610108366004610d73565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b61015061013b366004610dc5565b60046020526000908152604090205460ff1681565b6040519015158152602001610124565b61017361016e366004610dff565b610334565b005b610173610183366004610e46565b6104b8565b610173610196366004610e7d565b6105e2565b6101736101a9366004610eab565b610733565b6101736101bc366004610d73565b610843565b6000546101e19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b610150610214366004610ed9565b6109a0565b6001546101e19073ffffffffffffffffffffffffffffffffffffffff1681565b6101e1610247366004610d73565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61015061027d366004610f20565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526005602052604090205460ff919091161c600116151590565b6101506102cb366004610f53565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260036020526040902054600160ff9092161c16151590565b61011a61030f366004610dc5565b60056020526000908152604090205481565b61017361032f366004610d73565b610b39565b610362336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b6103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b8015610415577fffffffff00000000000000000000000000000000000000000000000000000000821660009081526005602052604090208054600160ff86161b179055610454565b7fffffffff00000000000000000000000000000000000000000000000000000000821660009081526005602052604090208054600160ff86161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b151836040516104ab911515815260200190565b60405180910390a3505050565b6104e6336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b61054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b7fffffffff00000000000000000000000000000000000000000000000000000000821660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b610610336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b80156106b25773ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090208054600160ff85161b1790556106e5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf2836040516104ab911515815260200190565b610761336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b6107c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061092657506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190610f7f565b61092f57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152600260205260408120549091168015610a98576040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190610f7f565b915050610b32565b7fffffffff00000000000000000000000000000000000000000000000000000000831660009081526004602052604090205460ff1680610b2e57507fffffffff00000000000000000000000000000000000000000000000000000000831660009081526005602090815260408083205473ffffffffffffffffffffffffffffffffffffffff891684526003909252909120541615155b9150505b9392505050565b610b67336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b610bcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590610d2157506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d219190610f7f565b80610d46575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d7057600080fd5b50565b600060208284031215610d8557600080fd5b8135610b3281610d4e565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610dc057600080fd5b919050565b600060208284031215610dd757600080fd5b610b3282610d90565b803560ff81168114610dc057600080fd5b8015158114610d7057600080fd5b600080600060608486031215610e1457600080fd5b610e1d84610de0565b9250610e2b60208501610d90565b91506040840135610e3b81610df1565b809150509250925092565b60008060408385031215610e5957600080fd5b610e6283610d90565b91506020830135610e7281610df1565b809150509250929050565b600080600060608486031215610e9257600080fd5b8335610e9d81610d4e565b9250610e2b60208501610de0565b60008060408385031215610ebe57600080fd5b8235610ec981610d4e565b91506020830135610e7281610d4e565b600080600060608486031215610eee57600080fd5b8335610ef981610d4e565b92506020840135610f0981610d4e565b9150610f1760408501610d90565b90509250925092565b60008060408385031215610f3357600080fd5b610f3c83610de0565b9150610f4a60208401610d90565b90509250929050565b60008060408385031215610f6657600080fd5b8235610f7181610d4e565b9150610f4a60208401610de0565b600060208284031215610f9157600080fd5b8151610b3281610df156fea264697066735822122058e51601b81e93d2b5857cc1190b2d9ac98cd995cca4a2c1b5f68f8bce3ffc6064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10FC CODESIZE SUB DUP1 PUSH2 0x10FC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP3 DUP5 SWAP3 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0xFF DUP2 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x110 DUP2 PUSH2 0xC9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD2 DUP1 PUSH2 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE688747B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE688747B EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xEA7CA276 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xED0D0EFB EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xB7009613 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xC53A3985 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B5159DA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4B5159DA EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x67AFF484 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x728B952B EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A36AEE EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xBADE8A4 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xEA9B75B EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1E1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1E1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xF53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SHR AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x362 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL OR SWAP1 SSTORE PUSH2 0x454 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 PUSH1 0xFF AND PUSH32 0xBFE16B2C35CE23DFD1AB0E7B5D086A10060C9B52D1574E1680C881B3B3A2B151 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x4E6 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x36D28126BEF21A4F3765D7FCB7C45CEAD463AE4C41094EF3B771EDE598544103 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x610 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL OR SWAP1 SSTORE PUSH2 0x6E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C9BDD0C8E073EB5EDA2250B18D8E5121FF27B62064FBEEEED4869BB99BC5BF2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x761 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xA4908E11A5F895B13D51526C331AC93CDD30E59772361C5D07874EB36BFF2065 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x926 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0xF7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB32 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xB2E JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO ISZERO JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB67 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD21 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0xF7F JUMP JUMPDEST DUP1 PUSH2 0xD46 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB32 DUP2 PUSH2 0xD4E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB32 DUP3 PUSH2 0xD90 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1D DUP5 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 POP PUSH2 0xE2B PUSH1 0x20 DUP6 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xE3B DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE62 DUP4 PUSH2 0xD90 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE72 DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE9D DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP3 POP PUSH2 0xE2B PUSH1 0x20 DUP6 ADD PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEC9 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE72 DUP2 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xEF9 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF09 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP PUSH2 0xF17 PUSH1 0x40 DUP6 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3C DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A PUSH1 0x20 DUP5 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF71 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A PUSH1 0x20 DUP5 ADD PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB32 DUP2 PUSH2 0xDF1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xE5 AND ADD 0xB8 0x1E SWAP4 0xD2 0xB5 DUP6 PUSH29 0xC1190B2D9AC98CD995CCA4A2C1B5F68F8BCE3FFC6064736F6C63430008 EQ STOP CALLER ","sourceMap":"327:4461:15:-:0;;;1094:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;682:5:14;:14;;-1:-1:-1;;;;;;682:14:14;;;-1:-1:-1;;;;;682:14:14;;;;;;;;-1:-1:-1;706:22:14;;;;;;;;;;;;744:40;;682:14;;706:22;;682:14;765:10;;744:40;;;799;;-1:-1:-1;;;;;799:40:14;;;816:10;;799:40;;;;;622:224;;1094:77:15;;327:4461;;14:131:17;-1:-1:-1;;;;;89:31:17;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:403::-;247:6;255;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;356:9;350:16;375:31;400:5;375:31;:::i;:::-;475:2;460:18;;454:25;425:5;;-1:-1:-1;488:33:17;454:25;488:33;:::i;:::-;540:7;530:17;;;150:403;;;;;:::o;:::-;327:4461:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@authority_2626":{"entryPoint":null,"id":2626,"parameterSlots":0,"returnSlots":0},"@canCall_2948":{"entryPoint":2464,"id":2948,"parameterSlots":3,"returnSlots":1},"@doesRoleHaveCapability_2894":{"entryPoint":null,"id":2894,"parameterSlots":2,"returnSlots":1},"@doesUserHaveRole_2870":{"entryPoint":null,"id":2870,"parameterSlots":2,"returnSlots":1},"@getRolesWithCapability_2846":{"entryPoint":null,"id":2846,"parameterSlots":0,"returnSlots":0},"@getTargetCustomAuthority_2834":{"entryPoint":null,"id":2834,"parameterSlots":0,"returnSlots":0},"@getUserRoles_2838":{"entryPoint":null,"id":2838,"parameterSlots":0,"returnSlots":0},"@isAuthorized_2709":{"entryPoint":3133,"id":2709,"parameterSlots":2,"returnSlots":1},"@isCapabilityPublic_2842":{"entryPoint":null,"id":2842,"parameterSlots":0,"returnSlots":0},"@owner_2623":{"entryPoint":null,"id":2623,"parameterSlots":0,"returnSlots":0},"@setAuthority_2745":{"entryPoint":2115,"id":2745,"parameterSlots":1,"returnSlots":0},"@setPublicCapability_2991":{"entryPoint":1208,"id":2991,"parameterSlots":2,"returnSlots":0},"@setRoleCapability_3081":{"entryPoint":820,"id":3081,"parameterSlots":3,"returnSlots":0},"@setTargetCustomAuthority_2970":{"entryPoint":1843,"id":2970,"parameterSlots":2,"returnSlots":0},"@setUserRole_3036":{"entryPoint":1506,"id":3036,"parameterSlots":3,"returnSlots":0},"@transferOwnership_2763":{"entryPoint":2873,"id":2763,"parameterSlots":1,"returnSlots":0},"abi_decode_bytes4":{"entryPoint":3472,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes4":{"entryPoint":3801,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_contract$_Authority_$2777":{"entryPoint":3755,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint8":{"entryPoint":3923,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint8t_bool":{"entryPoint":3709,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":3525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4t_bool":{"entryPoint":3654,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_Authority_$2777":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8t_bytes4":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8t_bytes4t_bool":{"entryPoint":3583,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint8":{"entryPoint":3552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":3406,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":3569,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5928:17","statements":[{"nodeType":"YulBlock","src":"6:3:17","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:17","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:17"},"nodeType":"YulFunctionCall","src":"148:12:17"},"nodeType":"YulExpressionStatement","src":"148:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:17"},"nodeType":"YulFunctionCall","src":"89:54:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:17"},"nodeType":"YulFunctionCall","src":"79:65:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:17"},"nodeType":"YulFunctionCall","src":"72:73:17"},"nodeType":"YulIf","src":"69:93:17"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:17","type":""}],"src":"14:154:17"},{"body":{"nodeType":"YulBlock","src":"243:177:17","statements":[{"body":{"nodeType":"YulBlock","src":"289:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"301:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"291:6:17"},"nodeType":"YulFunctionCall","src":"291:12:17"},"nodeType":"YulExpressionStatement","src":"291:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"264:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"273:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"260:3:17"},"nodeType":"YulFunctionCall","src":"260:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"285:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"256:3:17"},"nodeType":"YulFunctionCall","src":"256:32:17"},"nodeType":"YulIf","src":"253:52:17"},{"nodeType":"YulVariableDeclaration","src":"314:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"340:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"327:12:17"},"nodeType":"YulFunctionCall","src":"327:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"318:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"384:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"359:24:17"},"nodeType":"YulFunctionCall","src":"359:31:17"},"nodeType":"YulExpressionStatement","src":"359:31:17"},{"nodeType":"YulAssignment","src":"399:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"409:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"399:6:17"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"209:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"220:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"232:6:17","type":""}],"src":"173:247:17"},{"body":{"nodeType":"YulBlock","src":"526:76:17","statements":[{"nodeType":"YulAssignment","src":"536:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"559:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"544:3:17"},"nodeType":"YulFunctionCall","src":"544:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"536:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"578:9:17"},{"name":"value0","nodeType":"YulIdentifier","src":"589:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"571:6:17"},"nodeType":"YulFunctionCall","src":"571:25:17"},"nodeType":"YulExpressionStatement","src":"571:25:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"495:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"506:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"517:4:17","type":""}],"src":"425:177:17"},{"body":{"nodeType":"YulBlock","src":"655:171:17","statements":[{"nodeType":"YulAssignment","src":"665:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"687:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"674:12:17"},"nodeType":"YulFunctionCall","src":"674:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"665:5:17"}]},{"body":{"nodeType":"YulBlock","src":"804:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"813:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"816:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"806:6:17"},"nodeType":"YulFunctionCall","src":"806:12:17"},"nodeType":"YulExpressionStatement","src":"806:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"716:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"727:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"734:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"723:3:17"},"nodeType":"YulFunctionCall","src":"723:78:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"713:2:17"},"nodeType":"YulFunctionCall","src":"713:89:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"706:6:17"},"nodeType":"YulFunctionCall","src":"706:97:17"},"nodeType":"YulIf","src":"703:117:17"}]},"name":"abi_decode_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"634:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"645:5:17","type":""}],"src":"607:219:17"},{"body":{"nodeType":"YulBlock","src":"900:115:17","statements":[{"body":{"nodeType":"YulBlock","src":"946:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"955:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"958:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"948:6:17"},"nodeType":"YulFunctionCall","src":"948:12:17"},"nodeType":"YulExpressionStatement","src":"948:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"921:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"930:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"917:3:17"},"nodeType":"YulFunctionCall","src":"917:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"942:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"913:3:17"},"nodeType":"YulFunctionCall","src":"913:32:17"},"nodeType":"YulIf","src":"910:52:17"},{"nodeType":"YulAssignment","src":"971:38:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"999:9:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"981:17:17"},"nodeType":"YulFunctionCall","src":"981:28:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"971:6:17"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"866:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"877:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"889:6:17","type":""}],"src":"831:184:17"},{"body":{"nodeType":"YulBlock","src":"1115:92:17","statements":[{"nodeType":"YulAssignment","src":"1125:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1137:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1148:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1133:3:17"},"nodeType":"YulFunctionCall","src":"1133:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1125:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1167:9:17"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1192:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1185:6:17"},"nodeType":"YulFunctionCall","src":"1185:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1178:6:17"},"nodeType":"YulFunctionCall","src":"1178:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1160:6:17"},"nodeType":"YulFunctionCall","src":"1160:41:17"},"nodeType":"YulExpressionStatement","src":"1160:41:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1084:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1095:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1106:4:17","type":""}],"src":"1020:187:17"},{"body":{"nodeType":"YulBlock","src":"1259:109:17","statements":[{"nodeType":"YulAssignment","src":"1269:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1291:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1278:12:17"},"nodeType":"YulFunctionCall","src":"1278:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1269:5:17"}]},{"body":{"nodeType":"YulBlock","src":"1346:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1355:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1358:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1348:6:17"},"nodeType":"YulFunctionCall","src":"1348:12:17"},"nodeType":"YulExpressionStatement","src":"1348:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1320:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1331:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1338:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1327:3:17"},"nodeType":"YulFunctionCall","src":"1327:16:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1317:2:17"},"nodeType":"YulFunctionCall","src":"1317:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1310:6:17"},"nodeType":"YulFunctionCall","src":"1310:35:17"},"nodeType":"YulIf","src":"1307:55:17"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1238:6:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1249:5:17","type":""}],"src":"1212:156:17"},{"body":{"nodeType":"YulBlock","src":"1415:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"1469:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1481:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1471:6:17"},"nodeType":"YulFunctionCall","src":"1471:12:17"},"nodeType":"YulExpressionStatement","src":"1471:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1438:5:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1459:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1452:6:17"},"nodeType":"YulFunctionCall","src":"1452:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1445:6:17"},"nodeType":"YulFunctionCall","src":"1445:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1435:2:17"},"nodeType":"YulFunctionCall","src":"1435:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1428:6:17"},"nodeType":"YulFunctionCall","src":"1428:40:17"},"nodeType":"YulIf","src":"1425:60:17"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1404:5:17","type":""}],"src":"1373:118:17"},{"body":{"nodeType":"YulBlock","src":"1594:285:17","statements":[{"body":{"nodeType":"YulBlock","src":"1640:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1649:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1652:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1642:6:17"},"nodeType":"YulFunctionCall","src":"1642:12:17"},"nodeType":"YulExpressionStatement","src":"1642:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1615:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1624:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1611:3:17"},"nodeType":"YulFunctionCall","src":"1611:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1636:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1607:3:17"},"nodeType":"YulFunctionCall","src":"1607:32:17"},"nodeType":"YulIf","src":"1604:52:17"},{"nodeType":"YulAssignment","src":"1665:37:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1692:9:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"1675:16:17"},"nodeType":"YulFunctionCall","src":"1675:27:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1665:6:17"}]},{"nodeType":"YulAssignment","src":"1711:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1743:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1754:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:17"},"nodeType":"YulFunctionCall","src":"1739:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"1721:17:17"},"nodeType":"YulFunctionCall","src":"1721:37:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1711:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1767:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1797:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1793:3:17"},"nodeType":"YulFunctionCall","src":"1793:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1780:12:17"},"nodeType":"YulFunctionCall","src":"1780:32:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1771:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1843:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1821:21:17"},"nodeType":"YulFunctionCall","src":"1821:28:17"},"nodeType":"YulExpressionStatement","src":"1821:28:17"},{"nodeType":"YulAssignment","src":"1858:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1868:5:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1858:6:17"}]}]},"name":"abi_decode_tuple_t_uint8t_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1544:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1555:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1567:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1575:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1583:6:17","type":""}],"src":"1496:383:17"},{"body":{"nodeType":"YulBlock","src":"1967:230:17","statements":[{"body":{"nodeType":"YulBlock","src":"2013:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2022:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2025:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2015:6:17"},"nodeType":"YulFunctionCall","src":"2015:12:17"},"nodeType":"YulExpressionStatement","src":"2015:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1988:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1997:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1984:3:17"},"nodeType":"YulFunctionCall","src":"1984:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2009:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1980:3:17"},"nodeType":"YulFunctionCall","src":"1980:32:17"},"nodeType":"YulIf","src":"1977:52:17"},{"nodeType":"YulAssignment","src":"2038:38:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"2048:17:17"},"nodeType":"YulFunctionCall","src":"2048:28:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2038:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2085:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2115:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2126:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2111:3:17"},"nodeType":"YulFunctionCall","src":"2111:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2098:12:17"},"nodeType":"YulFunctionCall","src":"2098:32:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2089:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2161:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2139:21:17"},"nodeType":"YulFunctionCall","src":"2139:28:17"},"nodeType":"YulExpressionStatement","src":"2139:28:17"},{"nodeType":"YulAssignment","src":"2176:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2186:5:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2176:6:17"}]}]},"name":"abi_decode_tuple_t_bytes4t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1925:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1936:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1948:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1956:6:17","type":""}],"src":"1884:313:17"},{"body":{"nodeType":"YulBlock","src":"2301:353:17","statements":[{"body":{"nodeType":"YulBlock","src":"2347:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2356:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2359:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2349:6:17"},"nodeType":"YulFunctionCall","src":"2349:12:17"},"nodeType":"YulExpressionStatement","src":"2349:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2322:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2331:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2318:3:17"},"nodeType":"YulFunctionCall","src":"2318:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2343:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2314:3:17"},"nodeType":"YulFunctionCall","src":"2314:32:17"},"nodeType":"YulIf","src":"2311:52:17"},{"nodeType":"YulVariableDeclaration","src":"2372:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2398:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2385:12:17"},"nodeType":"YulFunctionCall","src":"2385:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2376:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2442:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2417:24:17"},"nodeType":"YulFunctionCall","src":"2417:31:17"},"nodeType":"YulExpressionStatement","src":"2417:31:17"},{"nodeType":"YulAssignment","src":"2457:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2467:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2457:6:17"}]},{"nodeType":"YulAssignment","src":"2481:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2512:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2523:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2508:3:17"},"nodeType":"YulFunctionCall","src":"2508:18:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"2491:16:17"},"nodeType":"YulFunctionCall","src":"2491:36:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2481:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2536:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2568:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2579:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:17"},"nodeType":"YulFunctionCall","src":"2564:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2551:12:17"},"nodeType":"YulFunctionCall","src":"2551:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2540:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2614:7:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2592:21:17"},"nodeType":"YulFunctionCall","src":"2592:30:17"},"nodeType":"YulExpressionStatement","src":"2592:30:17"},{"nodeType":"YulAssignment","src":"2631:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2641:7:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2631:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint8t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2251:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2262:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2274:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2282:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2290:6:17","type":""}],"src":"2202:452:17"},{"body":{"nodeType":"YulBlock","src":"2764:301:17","statements":[{"body":{"nodeType":"YulBlock","src":"2810:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2819:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2822:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2812:6:17"},"nodeType":"YulFunctionCall","src":"2812:12:17"},"nodeType":"YulExpressionStatement","src":"2812:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2781:3:17"},"nodeType":"YulFunctionCall","src":"2781:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2806:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2777:3:17"},"nodeType":"YulFunctionCall","src":"2777:32:17"},"nodeType":"YulIf","src":"2774:52:17"},{"nodeType":"YulVariableDeclaration","src":"2835:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2861:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2848:12:17"},"nodeType":"YulFunctionCall","src":"2848:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2839:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2905:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2880:24:17"},"nodeType":"YulFunctionCall","src":"2880:31:17"},"nodeType":"YulExpressionStatement","src":"2880:31:17"},{"nodeType":"YulAssignment","src":"2920:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2930:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2920:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"2944:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2976:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2987:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:17"},"nodeType":"YulFunctionCall","src":"2972:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2959:12:17"},"nodeType":"YulFunctionCall","src":"2959:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2948:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3025:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3000:24:17"},"nodeType":"YulFunctionCall","src":"3000:33:17"},"nodeType":"YulExpressionStatement","src":"3000:33:17"},{"nodeType":"YulAssignment","src":"3042:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3052:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3042:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_contract$_Authority_$2777","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2722:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2733:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2745:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2753:6:17","type":""}],"src":"2659:406:17"},{"body":{"nodeType":"YulBlock","src":"3158:177:17","statements":[{"body":{"nodeType":"YulBlock","src":"3204:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3213:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3216:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3206:6:17"},"nodeType":"YulFunctionCall","src":"3206:12:17"},"nodeType":"YulExpressionStatement","src":"3206:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3179:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3188:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3175:3:17"},"nodeType":"YulFunctionCall","src":"3175:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3200:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3171:3:17"},"nodeType":"YulFunctionCall","src":"3171:32:17"},"nodeType":"YulIf","src":"3168:52:17"},{"nodeType":"YulVariableDeclaration","src":"3229:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3255:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3242:12:17"},"nodeType":"YulFunctionCall","src":"3242:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3233:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3299:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3274:24:17"},"nodeType":"YulFunctionCall","src":"3274:31:17"},"nodeType":"YulExpressionStatement","src":"3274:31:17"},{"nodeType":"YulAssignment","src":"3314:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3324:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3314:6:17"}]}]},"name":"abi_decode_tuple_t_contract$_Authority_$2777","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3124:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3135:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3147:6:17","type":""}],"src":"3070:265:17"},{"body":{"nodeType":"YulBlock","src":"3441:125:17","statements":[{"nodeType":"YulAssignment","src":"3451:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3474:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:17"},"nodeType":"YulFunctionCall","src":"3459:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3451:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3493:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3508:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3516:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3504:3:17"},"nodeType":"YulFunctionCall","src":"3504:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3486:6:17"},"nodeType":"YulFunctionCall","src":"3486:74:17"},"nodeType":"YulExpressionStatement","src":"3486:74:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3410:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3421:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3432:4:17","type":""}],"src":"3340:226:17"},{"body":{"nodeType":"YulBlock","src":"3674:357:17","statements":[{"body":{"nodeType":"YulBlock","src":"3720:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3729:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3732:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3722:6:17"},"nodeType":"YulFunctionCall","src":"3722:12:17"},"nodeType":"YulExpressionStatement","src":"3722:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3695:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3704:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3691:3:17"},"nodeType":"YulFunctionCall","src":"3691:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3687:3:17"},"nodeType":"YulFunctionCall","src":"3687:32:17"},"nodeType":"YulIf","src":"3684:52:17"},{"nodeType":"YulVariableDeclaration","src":"3745:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3758:12:17"},"nodeType":"YulFunctionCall","src":"3758:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3749:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3790:24:17"},"nodeType":"YulFunctionCall","src":"3790:31:17"},"nodeType":"YulExpressionStatement","src":"3790:31:17"},{"nodeType":"YulAssignment","src":"3830:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"3840:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3830:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3854:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3886:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3897:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3882:3:17"},"nodeType":"YulFunctionCall","src":"3882:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3869:12:17"},"nodeType":"YulFunctionCall","src":"3869:32:17"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3858:7:17","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3935:7:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3910:24:17"},"nodeType":"YulFunctionCall","src":"3910:33:17"},"nodeType":"YulExpressionStatement","src":"3910:33:17"},{"nodeType":"YulAssignment","src":"3952:17:17","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3962:7:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3952:6:17"}]},{"nodeType":"YulAssignment","src":"3978:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4010:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4021:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4006:3:17"},"nodeType":"YulFunctionCall","src":"4006:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"3988:17:17"},"nodeType":"YulFunctionCall","src":"3988:37:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3978:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3624:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3635:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3647:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3655:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3663:6:17","type":""}],"src":"3571:460:17"},{"body":{"nodeType":"YulBlock","src":"4155:125:17","statements":[{"nodeType":"YulAssignment","src":"4165:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4177:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4188:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4173:3:17"},"nodeType":"YulFunctionCall","src":"4173:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4165:4:17"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4207:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4222:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4230:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4218:3:17"},"nodeType":"YulFunctionCall","src":"4218:55:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4200:6:17"},"nodeType":"YulFunctionCall","src":"4200:74:17"},"nodeType":"YulExpressionStatement","src":"4200:74:17"}]},"name":"abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4124:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4135:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4146:4:17","type":""}],"src":"4036:244:17"},{"body":{"nodeType":"YulBlock","src":"4369:170:17","statements":[{"body":{"nodeType":"YulBlock","src":"4415:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4424:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4427:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4417:6:17"},"nodeType":"YulFunctionCall","src":"4417:12:17"},"nodeType":"YulExpressionStatement","src":"4417:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4390:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4399:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4386:3:17"},"nodeType":"YulFunctionCall","src":"4386:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4411:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4382:3:17"},"nodeType":"YulFunctionCall","src":"4382:32:17"},"nodeType":"YulIf","src":"4379:52:17"},{"nodeType":"YulAssignment","src":"4440:37:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4467:9:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"4450:16:17"},"nodeType":"YulFunctionCall","src":"4450:27:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4440:6:17"}]},{"nodeType":"YulAssignment","src":"4486:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4518:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4529:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4514:3:17"},"nodeType":"YulFunctionCall","src":"4514:18:17"}],"functionName":{"name":"abi_decode_bytes4","nodeType":"YulIdentifier","src":"4496:17:17"},"nodeType":"YulFunctionCall","src":"4496:37:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4486:6:17"}]}]},"name":"abi_decode_tuple_t_uint8t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4327:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4338:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4350:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4358:6:17","type":""}],"src":"4285:254:17"},{"body":{"nodeType":"YulBlock","src":"4629:232:17","statements":[{"body":{"nodeType":"YulBlock","src":"4675:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4684:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4687:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4677:6:17"},"nodeType":"YulFunctionCall","src":"4677:12:17"},"nodeType":"YulExpressionStatement","src":"4677:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4650:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4646:3:17"},"nodeType":"YulFunctionCall","src":"4646:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4671:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4642:3:17"},"nodeType":"YulFunctionCall","src":"4642:32:17"},"nodeType":"YulIf","src":"4639:52:17"},{"nodeType":"YulVariableDeclaration","src":"4700:36:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4726:9:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4713:12:17"},"nodeType":"YulFunctionCall","src":"4713:23:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4704:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4770:5:17"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4745:24:17"},"nodeType":"YulFunctionCall","src":"4745:31:17"},"nodeType":"YulExpressionStatement","src":"4745:31:17"},{"nodeType":"YulAssignment","src":"4785:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4795:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4785:6:17"}]},{"nodeType":"YulAssignment","src":"4809:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4840:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4851:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4836:3:17"},"nodeType":"YulFunctionCall","src":"4836:18:17"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"4819:16:17"},"nodeType":"YulFunctionCall","src":"4819:36:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4809:6:17"}]}]},"name":"abi_decode_tuple_t_addresst_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4587:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4598:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4610:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4618:6:17","type":""}],"src":"4544:317:17"},{"body":{"nodeType":"YulBlock","src":"5040:162:17","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5057:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5068:2:17","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5050:6:17"},"nodeType":"YulFunctionCall","src":"5050:21:17"},"nodeType":"YulExpressionStatement","src":"5050:21:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5091:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5102:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:17"},"nodeType":"YulFunctionCall","src":"5087:18:17"},{"kind":"number","nodeType":"YulLiteral","src":"5107:2:17","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5080:6:17"},"nodeType":"YulFunctionCall","src":"5080:30:17"},"nodeType":"YulExpressionStatement","src":"5080:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5130:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5141:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5126:3:17"},"nodeType":"YulFunctionCall","src":"5126:18:17"},{"hexValue":"554e415554484f52495a4544","kind":"string","nodeType":"YulLiteral","src":"5146:14:17","type":"","value":"UNAUTHORIZED"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5119:6:17"},"nodeType":"YulFunctionCall","src":"5119:42:17"},"nodeType":"YulExpressionStatement","src":"5119:42:17"},{"nodeType":"YulAssignment","src":"5170:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5182:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5193:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5178:3:17"},"nodeType":"YulFunctionCall","src":"5178:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5170:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5017:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5031:4:17","type":""}],"src":"4866:336:17"},{"body":{"nodeType":"YulBlock","src":"5362:314:17","statements":[{"nodeType":"YulAssignment","src":"5372:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5395:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:17"},"nodeType":"YulFunctionCall","src":"5380:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5372:4:17"}]},{"nodeType":"YulVariableDeclaration","src":"5407:52:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5417:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5411:2:17","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5475:9:17"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5490:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"5498:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5486:3:17"},"nodeType":"YulFunctionCall","src":"5486:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5468:6:17"},"nodeType":"YulFunctionCall","src":"5468:34:17"},"nodeType":"YulExpressionStatement","src":"5468:34:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5522:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5533:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5518:3:17"},"nodeType":"YulFunctionCall","src":"5518:18:17"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5542:6:17"},{"name":"_1","nodeType":"YulIdentifier","src":"5550:2:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5538:3:17"},"nodeType":"YulFunctionCall","src":"5538:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5511:6:17"},"nodeType":"YulFunctionCall","src":"5511:43:17"},"nodeType":"YulExpressionStatement","src":"5511:43:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5574:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5585:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5570:3:17"},"nodeType":"YulFunctionCall","src":"5570:18:17"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5594:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5602:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5590:3:17"},"nodeType":"YulFunctionCall","src":"5590:79:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5563:6:17"},"nodeType":"YulFunctionCall","src":"5563:107:17"},"nodeType":"YulExpressionStatement","src":"5563:107:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5315:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5326:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5334:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5342:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5353:4:17","type":""}],"src":"5207:469:17"},{"body":{"nodeType":"YulBlock","src":"5759:167:17","statements":[{"body":{"nodeType":"YulBlock","src":"5805:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5814:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5817:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5807:6:17"},"nodeType":"YulFunctionCall","src":"5807:12:17"},"nodeType":"YulExpressionStatement","src":"5807:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5780:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5789:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5776:3:17"},"nodeType":"YulFunctionCall","src":"5776:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5801:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5772:3:17"},"nodeType":"YulFunctionCall","src":"5772:32:17"},"nodeType":"YulIf","src":"5769:52:17"},{"nodeType":"YulVariableDeclaration","src":"5830:29:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5849:9:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5843:5:17"},"nodeType":"YulFunctionCall","src":"5843:16:17"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5834:5:17","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5890:5:17"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"5868:21:17"},"nodeType":"YulFunctionCall","src":"5868:28:17"},"nodeType":"YulExpressionStatement","src":"5868:28:17"},{"nodeType":"YulAssignment","src":"5905:15:17","value":{"name":"value","nodeType":"YulIdentifier","src":"5915:5:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5905:6:17"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5725:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5736:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5748:6:17","type":""}],"src":"5681:245:17"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_bytes4t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_bytes4(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes4t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint8t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_addresst_contract$_Authority_$2777(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_Authority_$2777(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes4(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_bytes4(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_Authority_$2777__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint8t_bytes4(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_bytes4(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n}","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063e688747b11610066578063e688747b1461026f578063ea7ca276146102bd578063ed0d0efb14610301578063f2fde38b1461032157600080fd5b80638da5cb5b146101c1578063b700961314610206578063bf7e214f14610219578063c53a39851461023957600080fd5b80634b5159da116100d35780634b5159da1461017557806367aff48414610188578063728b952b1461019b5780637a9e5e4b146101ae57600080fd5b806306a36aee146100fa5780630bade8a41461012d5780630ea9b75b14610160575b600080fd5b61011a610108366004610d73565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b61015061013b366004610dc5565b60046020526000908152604090205460ff1681565b6040519015158152602001610124565b61017361016e366004610dff565b610334565b005b610173610183366004610e46565b6104b8565b610173610196366004610e7d565b6105e2565b6101736101a9366004610eab565b610733565b6101736101bc366004610d73565b610843565b6000546101e19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b610150610214366004610ed9565b6109a0565b6001546101e19073ffffffffffffffffffffffffffffffffffffffff1681565b6101e1610247366004610d73565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61015061027d366004610f20565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526005602052604090205460ff919091161c600116151590565b6101506102cb366004610f53565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260036020526040902054600160ff9092161c16151590565b61011a61030f366004610dc5565b60056020526000908152604090205481565b61017361032f366004610d73565b610b39565b610362336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b6103cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b8015610415577fffffffff00000000000000000000000000000000000000000000000000000000821660009081526005602052604090208054600160ff86161b179055610454565b7fffffffff00000000000000000000000000000000000000000000000000000000821660009081526005602052604090208054600160ff86161b191690555b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b151836040516104ab911515815260200190565b60405180910390a3505050565b6104e6336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b61054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b7fffffffff00000000000000000000000000000000000000000000000000000000821660008181526004602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b610610336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b80156106b25773ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090208054600160ff85161b1790556106e5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604090208054600160ff85161b191690555b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf2836040516104ab911515815260200190565b610761336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b6107c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061092657506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109269190610f7f565b61092f57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b73ffffffffffffffffffffffffffffffffffffffff8083166000908152600260205260408120549091168015610a98576040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190610f7f565b915050610b32565b7fffffffff00000000000000000000000000000000000000000000000000000000831660009081526004602052604090205460ff1680610b2e57507fffffffff00000000000000000000000000000000000000000000000000000000831660009081526005602090815260408083205473ffffffffffffffffffffffffffffffffffffffff891684526003909252909120541615155b9150505b9392505050565b610b67336000357fffffffff0000000000000000000000000000000000000000000000000000000016610c3d565b610bcd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103c4565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60015460009073ffffffffffffffffffffffffffffffffffffffff168015801590610d2157506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d219190610f7f565b80610d46575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d7057600080fd5b50565b600060208284031215610d8557600080fd5b8135610b3281610d4e565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610dc057600080fd5b919050565b600060208284031215610dd757600080fd5b610b3282610d90565b803560ff81168114610dc057600080fd5b8015158114610d7057600080fd5b600080600060608486031215610e1457600080fd5b610e1d84610de0565b9250610e2b60208501610d90565b91506040840135610e3b81610df1565b809150509250925092565b60008060408385031215610e5957600080fd5b610e6283610d90565b91506020830135610e7281610df1565b809150509250929050565b600080600060608486031215610e9257600080fd5b8335610e9d81610d4e565b9250610e2b60208501610de0565b60008060408385031215610ebe57600080fd5b8235610ec981610d4e565b91506020830135610e7281610d4e565b600080600060608486031215610eee57600080fd5b8335610ef981610d4e565b92506020840135610f0981610d4e565b9150610f1760408501610d90565b90509250925092565b60008060408385031215610f3357600080fd5b610f3c83610de0565b9150610f4a60208401610d90565b90509250929050565b60008060408385031215610f6657600080fd5b8235610f7181610d4e565b9150610f4a60208401610de0565b600060208284031215610f9157600080fd5b8151610b3281610df156fea264697066735822122058e51601b81e93d2b5857cc1190b2d9ac98cd995cca4a2c1b5f68f8bce3ffc6064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE688747B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE688747B EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xEA7CA276 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xED0D0EFB EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xB7009613 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xC53A3985 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B5159DA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4B5159DA EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x67AFF484 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x728B952B EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A36AEE EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xBADE8A4 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xEA9B75B EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1E1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1E1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SHR PUSH1 0x1 AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xF53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SHR AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x362 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL OR SWAP1 SSTORE PUSH2 0x454 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 PUSH1 0xFF AND PUSH32 0xBFE16B2C35CE23DFD1AB0E7B5D086A10060C9B52D1574E1680C881B3B3A2B151 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x4E6 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x36D28126BEF21A4F3765D7FCB7C45CEAD463AE4C41094EF3B771EDE598544103 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x610 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL OR SWAP1 SSTORE PUSH2 0x6E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF DUP6 AND SHL NOT AND SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C9BDD0C8E073EB5EDA2250B18D8E5121FF27B62064FBEEEED4869BB99BC5BF2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x761 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xA4908E11A5F895B13D51526C331AC93CDD30E59772361C5D07874EB36BFF2065 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x926 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xA3396FD7F6E0A21B50E5089D2DA70D5AC0A3BBBD1F617A93F134B76389980198 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0xF7F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB32 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xB2E JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO ISZERO JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB67 CALLER PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x554E415554484F52495A45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD21 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0xB700961300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0xF7F JUMP JUMPDEST DUP1 PUSH2 0xD46 JUMPI POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB32 DUP2 PUSH2 0xD4E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB32 DUP3 PUSH2 0xD90 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1D DUP5 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 POP PUSH2 0xE2B PUSH1 0x20 DUP6 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xE3B DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE62 DUP4 PUSH2 0xD90 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE72 DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE9D DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP3 POP PUSH2 0xE2B PUSH1 0x20 DUP6 ADD PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEC9 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE72 DUP2 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xEF9 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xF09 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP PUSH2 0xF17 PUSH1 0x40 DUP6 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3C DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A PUSH1 0x20 DUP5 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xF71 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A PUSH1 0x20 DUP5 ADD PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB32 DUP2 PUSH2 0xDF1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xE5 AND ADD 0xB8 0x1E SWAP4 0xD2 0xB5 DUP6 PUSH29 0xC1190B2D9AC98CD995CCA4A2C1B5F68F8BCE3FFC6064736F6C63430008 EQ STOP CALLER ","sourceMap":"327:4461:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;571:25:17;;;559:2;544:18;1622:47:15;;;;;;;;1676:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1185:14:17;;1178:22;1160:41;;1148:2;1133:18;1676:49:15;1020:187:17;4390:396:15;;;;;;:::i;:::-;;:::i;:::-;;3448:210;;;;;;:::i;:::-;;:::i;3853:337::-;;;;;;:::i;:::-;;:::i;3006:241::-;;;;;;:::i;:::-;;:::i;1523:434:14:-;;;;;;:::i;:::-;;:::i;562:20::-;;;;;;;;;;;;3516:42:17;3504:55;;;3486:74;;3474:2;3459:18;562:20:14;3340:226:17;2336:465:15;;;;;;:::i;:::-;;:::i;589:26:14:-;;;;;;;;;1369:61:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1958:186;;;;;;:::i;:::-;2083:35;;2051:4;2083:35;;;:22;:35;;;;;;2075:52;;;;;;2131:1;2074:58;:63;;;1958:186;1795:157;;;;;;:::i;:::-;1908:18;;;;;1876:4;1908:18;;;:12;:18;;;;;;1939:1;1900:35;;;;;1899:41;:46;;;1795:157;1732:56;;;;;;:::i;:::-;;;;;;;;;;;;;;1963:164:14;;;;;;:::i;:::-;;:::i;4390:396:15:-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;5068:2:17;894:58:14;;;5050:21:17;5107:2;5087:18;;;5080:30;5146:14;5126:18;;;5119:42;5178:18;;894:58:14;;;;;;;;;4535:7:15::1;4531:184;;;4558:35:::0;;::::1;4597:18;4558:35:::0;;;:22:::1;:35;::::0;;;;:57;;4605:1:::1;:9;::::0;::::1;;4558:57;::::0;;4531:184:::1;;;4646:35:::0;;::::1;4686:18;4646:35:::0;;;:22:::1;:35;::::0;;;;:58;;4694:1:::1;:9;::::0;::::1;;4685:19;4646:58;::::0;;4531:184:::1;4758:11;4730:49;;;4752:4;4730:49;;;4771:7;4730:49;;;;1185:14:17::0;1178:22;1160:41;;1148:2;1133:18;;1020:187;4730:49:15::1;;;;;;;;4390:396:::0;;;:::o;3448:210::-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;5068:2:17;894:58:14;;;5050:21:17;5107:2;5087:18;;;5080:30;5146:14;5126:18;;;5119:42;5178:18;;894:58:14;4866:336:17;894:58:14;3549:31:15;;::::1;;::::0;;;:18:::1;:31;::::0;;;;;;;;:41;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;3606:45;;1160:41:17;;;3606:45:15::1;::::0;1133:18:17;3606:45:15::1;;;;;;;3448:210:::0;;:::o;3853:337::-;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;5068:2:17;894:58:14;;;5050:21:17;5107:2;5087:18;;;5080:30;5146:14;5126:18;;;5119:42;5178:18;;894:58:14;4866:336:17;894:58:14;3986:7:15::1;3982:150;;;4009:18;::::0;::::1;4031;4009::::0;;;:12:::1;:18;::::0;;;;:40;;4039:1:::1;:9;::::0;::::1;;4009:40;::::0;;3982:150:::1;;;4080:18;::::0;::::1;4103;4080::::0;;;:12:::1;:18;::::0;;;;:41;;4111:1:::1;:9;::::0;::::1;;4102:19;4080:41;::::0;;3982:150:::1;4169:4;4147:36;;4163:4;4147:36;;;4175:7;4147:36;;;;1185:14:17::0;1178:22;1160:41;;1148:2;1133:18;;1020:187;3006:241:15;902:33:14;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;5068:2:17;894:58:14;;;5050:21:17;5107:2;5087:18;;;5080:30;5146:14;5126:18;;;5119:42;5178:18;;894:58:14;4866:336:17;894:58:14;3121:32:15::1;::::0;;::::1;;::::0;;;:24:::1;:32;::::0;;;;;:50;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;3187:53;::::1;::::0;3121:32;3187:53:::1;3006:241:::0;;:::o;1523:434:14:-;1794:5;;;;1780:10;:19;;:76;;-1:-1:-1;1803:9:14;;:53;;;;;1821:10;1803:53;;;5468:34:17;1841:4:14;5518:18:17;;;5511:43;1803:9:14;1848:7;;;5570:18:17;;;5563:107;1803:9:14;;;;;:17;;5380:18:17;;1803:53:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1772:85;;;;;;1868:9;:24;;;;;;;;;;;;;1908:42;;1925:10;;1908:42;;-1:-1:-1;;1908:42:14;1523:434;:::o;2336:465:15:-;2515:32;;;;2471:4;2515:32;;;:24;:32;;;;;;2471:4;;2515:32;2562:38;;2558:101;;2609:50;;;;;:23;5486:15:17;;;2609:50:15;;;5468:34:17;5538:15;;;5518:18;;;5511:43;5602:66;5590:79;;5570:18;;;5563:107;2609:23:15;;;;;5380:18:17;;2609:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2602:57;;;;;2558:101;2689:31;;;;;;;:18;:31;;;;;;;;;:105;;-1:-1:-1;2759:35:15;;;;;;;:22;:35;;;;;;;;;2738:18;;;;;:12;:18;;;;;;;:56;2724:70;;2689:105;2670:124;;;2336:465;;;;;;:::o;1963:164:14:-;902:33;915:10;927:7;;;;902:12;:33::i;:::-;894:58;;;;;;;5068:2:17;894:58:14;;;5050:21:17;5107:2;5087:18;;;5080:30;5146:14;5126:18;;;5119:42;5178:18;;894:58:14;4866:336:17;894:58:14;2046:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2078:42:::1;::::0;2046:16;;2099:10:::1;::::0;2078:42:::1;::::0;2046:5;2078:42:::1;1963:164:::0;:::o;977:540::-;1097:9;;1064:4;;1097:9;;1415:27;;;;;:77;;-1:-1:-1;1446:46:14;;;;;:12;5486:15:17;;;1446:46:14;;;5468:34:17;1473:4:14;5518:18:17;;;5511:43;5602:66;5590:79;;5570:18;;;5563:107;1446:12:14;;;;;5380:18:17;;1446:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1414:96;;;-1:-1:-1;1505:5:14;;;1497:13;;;1505:5;;1497:13;1414:96;1407:103;977:540;-1:-1:-1;;;;977:540:14:o;14:154:17:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;607:219::-;674:20;;734:66;723:78;;713:89;;703:117;;816:1;813;806:12;703:117;607:219;;;:::o;831:184::-;889:6;942:2;930:9;921:7;917:23;913:32;910:52;;;958:1;955;948:12;910:52;981:28;999:9;981:28;:::i;1212:156::-;1278:20;;1338:4;1327:16;;1317:27;;1307:55;;1358:1;1355;1348:12;1373:118;1459:5;1452:13;1445:21;1438:5;1435:32;1425:60;;1481:1;1478;1471:12;1496:383;1567:6;1575;1583;1636:2;1624:9;1615:7;1611:23;1607:32;1604:52;;;1652:1;1649;1642:12;1604:52;1675:27;1692:9;1675:27;:::i;:::-;1665:37;;1721;1754:2;1743:9;1739:18;1721:37;:::i;:::-;1711:47;;1808:2;1797:9;1793:18;1780:32;1821:28;1843:5;1821:28;:::i;:::-;1868:5;1858:15;;;1496:383;;;;;:::o;1884:313::-;1948:6;1956;2009:2;1997:9;1988:7;1984:23;1980:32;1977:52;;;2025:1;2022;2015:12;1977:52;2048:28;2066:9;2048:28;:::i;:::-;2038:38;;2126:2;2115:9;2111:18;2098:32;2139:28;2161:5;2139:28;:::i;:::-;2186:5;2176:15;;;1884:313;;;;;:::o;2202:452::-;2274:6;2282;2290;2343:2;2331:9;2322:7;2318:23;2314:32;2311:52;;;2359:1;2356;2349:12;2311:52;2398:9;2385:23;2417:31;2442:5;2417:31;:::i;:::-;2467:5;-1:-1:-1;2491:36:17;2523:2;2508:18;;2491:36;:::i;2659:406::-;2745:6;2753;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;2861:9;2848:23;2880:31;2905:5;2880:31;:::i;:::-;2930:5;-1:-1:-1;2987:2:17;2972:18;;2959:32;3000:33;2959:32;3000:33;:::i;3571:460::-;3647:6;3655;3663;3716:2;3704:9;3695:7;3691:23;3687:32;3684:52;;;3732:1;3729;3722:12;3684:52;3771:9;3758:23;3790:31;3815:5;3790:31;:::i;:::-;3840:5;-1:-1:-1;3897:2:17;3882:18;;3869:32;3910:33;3869:32;3910:33;:::i;:::-;3962:7;-1:-1:-1;3988:37:17;4021:2;4006:18;;3988:37;:::i;:::-;3978:47;;3571:460;;;;;:::o;4285:254::-;4350:6;4358;4411:2;4399:9;4390:7;4386:23;4382:32;4379:52;;;4427:1;4424;4417:12;4379:52;4450:27;4467:9;4450:27;:::i;:::-;4440:37;;4496;4529:2;4518:9;4514:18;4496:37;:::i;:::-;4486:47;;4285:254;;;;;:::o;4544:317::-;4610:6;4618;4671:2;4659:9;4650:7;4646:23;4642:32;4639:52;;;4687:1;4684;4677:12;4639:52;4726:9;4713:23;4745:31;4770:5;4745:31;:::i;:::-;4795:5;-1:-1:-1;4819:36:17;4851:2;4836:18;;4819:36;:::i;5681:245::-;5748:6;5801:2;5789:9;5780:7;5776:23;5772:32;5769:52;;;5817:1;5814;5807:12;5769:52;5849:9;5843:16;5868:28;5890:5;5868:28;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"810000","executionCost":"infinite","totalCost":"infinite"},"external":{"authority()":"2380","canCall(address,address,bytes4)":"infinite","doesRoleHaveCapability(uint8,bytes4)":"infinite","doesUserHaveRole(address,uint8)":"2683","getRolesWithCapability(bytes4)":"2562","getTargetCustomAuthority(address)":"2605","getUserRoles(address)":"2514","isCapabilityPublic(bytes4)":"2565","owner()":"2336","setAuthority(address)":"infinite","setPublicCapability(bytes4,bool)":"infinite","setRoleCapability(uint8,bytes4,bool)":"infinite","setTargetCustomAuthority(address,address)":"infinite","setUserRole(address,uint8,bool)":"infinite","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"authority()":"bf7e214f","canCall(address,address,bytes4)":"b7009613","doesRoleHaveCapability(uint8,bytes4)":"e688747b","doesUserHaveRole(address,uint8)":"ea7ca276","getRolesWithCapability(bytes4)":"ed0d0efb","getTargetCustomAuthority(address)":"c53a3985","getUserRoles(address)":"06a36aee","isCapabilityPublic(bytes4)":"0bade8a4","owner()":"8da5cb5b","setAuthority(address)":"7a9e5e4b","setPublicCapability(bytes4,bool)":"4b5159da","setRoleCapability(uint8,bytes4,bool)":"0ea9b75b","setTargetCustomAuthority(address,address)":"728b952b","setUserRole(address,uint8,bool)":"67aff484","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"PublicCapabilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"RoleCapabilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"TargetCustomAuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"UserRoleUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"doesRoleHaveCapability\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"doesUserHaveRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"getRolesWithCapability\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getTargetCustomAuthority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserRoles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"isCapabilityPublic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setPublicCapability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setRoleCapability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"contract Authority\",\"name\":\"customAuthority\",\"type\":\"address\"}],\"name\":\"setTargetCustomAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Flexible and target agnostic role based Authority that supports up to 256 roles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/auth/authorities/MultiRolesAuthority.sol\":\"MultiRolesAuthority\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"solmate/auth/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Provides a flexible and updatable auth pattern which is completely separate from application logic.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\nabstract contract Auth {\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    event AuthorityUpdated(address indexed user, Authority indexed newAuthority);\\n\\n    address public owner;\\n\\n    Authority public authority;\\n\\n    constructor(address _owner, Authority _authority) {\\n        owner = _owner;\\n        authority = _authority;\\n\\n        emit OwnershipTransferred(msg.sender, _owner);\\n        emit AuthorityUpdated(msg.sender, _authority);\\n    }\\n\\n    modifier requiresAuth() virtual {\\n        require(isAuthorized(msg.sender, msg.sig), \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    function isAuthorized(address user, bytes4 functionSig) internal view virtual returns (bool) {\\n        Authority auth = authority; // Memoizing authority saves us a warm SLOAD, around 100 gas.\\n\\n        // Checking if the caller is the owner only after calling the authority saves gas in most cases, but be\\n        // aware that this makes protected functions uncallable even to the owner if the authority is out of order.\\n        return (address(auth) != address(0) && auth.canCall(user, address(this), functionSig)) || user == owner;\\n    }\\n\\n    function setAuthority(Authority newAuthority) public virtual {\\n        // We check if the caller is the owner first because we want to ensure they can\\n        // always swap out the authority even if it's reverting or using up a lot of gas.\\n        require(msg.sender == owner || authority.canCall(msg.sender, address(this), msg.sig));\\n\\n        authority = newAuthority;\\n\\n        emit AuthorityUpdated(msg.sender, newAuthority);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual requiresAuth {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\\n/// @notice A generic interface for a contract which provides authorization data to an Auth instance.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Auth.sol)\\n/// @author Modified from Dappsys (https://github.com/dapphub/ds-auth/blob/master/src/auth.sol)\\ninterface Authority {\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\"},\"solmate/auth/authorities/MultiRolesAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {Auth, Authority} from \\\"../Auth.sol\\\";\\n\\n/// @notice Flexible and target agnostic role based Authority that supports up to 256 roles.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/authorities/MultiRolesAuthority.sol)\\ncontract MultiRolesAuthority is Auth, Authority {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event UserRoleUpdated(address indexed user, uint8 indexed role, bool enabled);\\n\\n    event PublicCapabilityUpdated(bytes4 indexed functionSig, bool enabled);\\n\\n    event RoleCapabilityUpdated(uint8 indexed role, bytes4 indexed functionSig, bool enabled);\\n\\n    event TargetCustomAuthorityUpdated(address indexed target, Authority indexed authority);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner, Authority _authority) Auth(_owner, _authority) {}\\n\\n    /*//////////////////////////////////////////////////////////////\\n                     CUSTOM TARGET AUTHORITY STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => Authority) public getTargetCustomAuthority;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            ROLE/USER STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    mapping(address => bytes32) public getUserRoles;\\n\\n    mapping(bytes4 => bool) public isCapabilityPublic;\\n\\n    mapping(bytes4 => bytes32) public getRolesWithCapability;\\n\\n    function doesUserHaveRole(address user, uint8 role) public view virtual returns (bool) {\\n        return (uint256(getUserRoles[user]) >> role) & 1 != 0;\\n    }\\n\\n    function doesRoleHaveCapability(uint8 role, bytes4 functionSig) public view virtual returns (bool) {\\n        return (uint256(getRolesWithCapability[functionSig]) >> role) & 1 != 0;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                           AUTHORIZATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function canCall(\\n        address user,\\n        address target,\\n        bytes4 functionSig\\n    ) public view virtual override returns (bool) {\\n        Authority customAuthority = getTargetCustomAuthority[target];\\n\\n        if (address(customAuthority) != address(0)) return customAuthority.canCall(user, target, functionSig);\\n\\n        return\\n            isCapabilityPublic[functionSig] || bytes32(0) != getUserRoles[user] & getRolesWithCapability[functionSig];\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n               CUSTOM TARGET AUTHORITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setTargetCustomAuthority(address target, Authority customAuthority) public virtual requiresAuth {\\n        getTargetCustomAuthority[target] = customAuthority;\\n\\n        emit TargetCustomAuthorityUpdated(target, customAuthority);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                  PUBLIC CAPABILITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setPublicCapability(bytes4 functionSig, bool enabled) public virtual requiresAuth {\\n        isCapabilityPublic[functionSig] = enabled;\\n\\n        emit PublicCapabilityUpdated(functionSig, enabled);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                       USER ROLE ASSIGNMENT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setUserRole(\\n        address user,\\n        uint8 role,\\n        bool enabled\\n    ) public virtual requiresAuth {\\n        if (enabled) {\\n            getUserRoles[user] |= bytes32(1 << role);\\n        } else {\\n            getUserRoles[user] &= ~bytes32(1 << role);\\n        }\\n\\n        emit UserRoleUpdated(user, role, enabled);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                   ROLE CAPABILITY CONFIGURATION LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function setRoleCapability(\\n        uint8 role,\\n        bytes4 functionSig,\\n        bool enabled\\n    ) public virtual requiresAuth {\\n        if (enabled) {\\n            getRolesWithCapability[functionSig] |= bytes32(1 << role);\\n        } else {\\n            getRolesWithCapability[functionSig] &= ~bytes32(1 << role);\\n        }\\n\\n        emit RoleCapabilityUpdated(role, functionSig, enabled);\\n    }\\n}\\n\",\"keccak256\":\"0x5544e61f98c0e80a8c4b9b691952122d3547ade0c0ad830ae6d5fd65f2d0dbe3\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2623,"contract":"solmate/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2626,"contract":"solmate/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority","label":"authority","offset":0,"slot":"1","type":"t_contract(Authority)2777"},{"astId":2834,"contract":"solmate/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority","label":"getTargetCustomAuthority","offset":0,"slot":"2","type":"t_mapping(t_address,t_contract(Authority)2777)"},{"astId":2838,"contract":"solmate/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority","label":"getUserRoles","offset":0,"slot":"3","type":"t_mapping(t_address,t_bytes32)"},{"astId":2842,"contract":"solmate/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority","label":"isCapabilityPublic","offset":0,"slot":"4","type":"t_mapping(t_bytes4,t_bool)"},{"astId":2846,"contract":"solmate/auth/authorities/MultiRolesAuthority.sol:MultiRolesAuthority","label":"getRolesWithCapability","offset":0,"slot":"5","type":"t_mapping(t_bytes4,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes4":{"encoding":"inplace","label":"bytes4","numberOfBytes":"4"},"t_contract(Authority)2777":{"encoding":"inplace","label":"contract Authority","numberOfBytes":"20"},"t_mapping(t_address,t_bytes32)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_address,t_contract(Authority)2777)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract Authority)","numberOfBytes":"32","value":"t_contract(Authority)2777"},"t_mapping(t_bytes4,t_bool)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes4,t_bytes32)":{"encoding":"mapping","key":"t_bytes4","label":"mapping(bytes4 => bytes32)","numberOfBytes":"32","value":"t_bytes32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Flexible and target agnostic role based Authority that supports up to 256 roles.","version":1}}},"solmate/tokens/ERC20.sol":{"ERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)","details":"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"solmate/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"solmate/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3103,"contract":"solmate/tokens/ERC20.sol:ERC20","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3105,"contract":"solmate/tokens/ERC20.sol:ERC20","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3109,"contract":"solmate/tokens/ERC20.sol:ERC20","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3113,"contract":"solmate/tokens/ERC20.sol:ERC20","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3119,"contract":"solmate/tokens/ERC20.sol:ERC20","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":3127,"contract":"solmate/tokens/ERC20.sol:ERC20","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Modern and gas efficient ERC20 + EIP-2612 implementation.","version":1}}}}}}