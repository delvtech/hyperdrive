// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface MockHyperdriveTargetDeployer$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "MockHyperdriveTargetDeployer",
  "sourceName": "contracts/test/MockHyperdriveDeployer.sol",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "vaultSharesToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "linkerFactory",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "linkerCodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "initialVaultSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumTransactionAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "checkpointDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sweepCollector",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "curve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flat",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governanceLP",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governanceZombie",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IHyperdrive.Fees",
              "name": "fees",
              "type": "tuple"
            }
          ],
          "internalType": "struct IHyperdrive.PoolConfig",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610363806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063195d4bfc14610030575b600080fd5b61004761003e366004610203565b60009392505050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff811182821017156100c3576100c3610070565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff811681146100ed57600080fd5b919050565b60006080828403121561010457600080fd5b6040516080810181811067ffffffffffffffff8211171561012757610127610070565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f83011261016957600080fd5b813567ffffffffffffffff8082111561018457610184610070565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156101ca576101ca610070565b816040528381528660208588010111156101e357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600083850361026081121561021a57600080fd5b6102208082121561022a57600080fd5b61023261009f565b915061023d866100c9565b825261024b602087016100c9565b602083015261025c604087016100c9565b6040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e08301526101008087013581840152506101208087013581840152506101406102b98188016100c9565b908301526101606102cb8782016100c9565b908301526101806102dd8782016100c9565b908301526101a06102f0888883016100f2565b9083015290935084013567ffffffffffffffff81111561030f57600080fd5b61031b86828701610158565b9250506102408401359050925092509256fea2646970667358221220a55d6702357730b6c3985c644f01d495a1b5977ba68aa450b30946655f13679b64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063195d4bfc14610030575b600080fd5b61004761003e366004610203565b60009392505050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff811182821017156100c3576100c3610070565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff811681146100ed57600080fd5b919050565b60006080828403121561010457600080fd5b6040516080810181811067ffffffffffffffff8211171561012757610127610070565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f83011261016957600080fd5b813567ffffffffffffffff8082111561018457610184610070565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156101ca576101ca610070565b816040528381528660208588010111156101e357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600083850361026081121561021a57600080fd5b6102208082121561022a57600080fd5b61023261009f565b915061023d866100c9565b825261024b602087016100c9565b602083015261025c604087016100c9565b6040830152606086013560608301526080860135608083015260a086013560a083015260c086013560c083015260e086013560e08301526101008087013581840152506101208087013581840152506101406102b98188016100c9565b908301526101606102cb8782016100c9565b908301526101806102dd8782016100c9565b908301526101a06102f0888883016100f2565b9083015290935084013567ffffffffffffffff81111561030f57600080fd5b61031b86828701610158565b9250506102408401359050925092509256fea2646970667358221220a55d6702357730b6c3985c644f01d495a1b5977ba68aa450b30946655f13679b64736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "MockHyperdriveTargetDeployer",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MockHyperdriveTargetDeployer$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/test/MockHyperdriveDeployer.sol:MockHyperdriveTargetDeployer",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MockHyperdriveTargetDeployer$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "MockHyperdriveTargetDeployer",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MockHyperdriveTargetDeployer$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/test/MockHyperdriveDeployer.sol:MockHyperdriveTargetDeployer",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MockHyperdriveTargetDeployer$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "MockHyperdriveTargetDeployer",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MockHyperdriveTargetDeployer$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/test/MockHyperdriveDeployer.sol:MockHyperdriveTargetDeployer",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MockHyperdriveTargetDeployer$Type["abi"]>>;
}
