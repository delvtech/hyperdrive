// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface MockAssetId$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "MockAssetId",
  "sourceName": "contracts/test/MockAssetId.sol",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidTimestamp",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "assetIdToName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "assetIdToSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "decodeAssetId",
      "outputs": [
        {
          "internalType": "enum AssetId.AssetIdPrefix",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum AssetId.AssetIdPrefix",
          "name": "_prefix",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "encodeAssetId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610869806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633c8c28ad146100515780636322c7511461007a5780638a227c39146100c2578063957462ac146100e3575b600080fd5b61006461005f3660046104e7565b6100f6565b6040516100719190610524565b60405180910390f35b6100b46100883660046104e7565b60f881901c917effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911690565b6040516100719291906105a4565b6100d56100d03660046105e9565b61010a565b604051908152602001610071565b6100646100f13660046104e7565b610121565b606060006101038361012e565b9392505050565b600080610117848461027e565b9150505b92915050565b60606000610103836102e4565b606060f882901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660006101628261041a565b9050600083600381111561017857610178610575565b036101ba576040518060400160405280600d81526020017f48797065726472697665204c50000000000000000000000000000000000000008152509350610276565b60018360038111156101ce576101ce610575565b036101fa57806040516020016101e49190610619565b6040516020818303038152906040529350610276565b600283600381111561020e5761020e610575565b0361022457806040516020016101e4919061065e565b600383600381111561023857610238610575565b03610276576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b60007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156102d9576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060f89190911b1790565b606060f882901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660006103188261041a565b9050600083600381111561032e5761032e610575565b03610370576040518060400160405280600d81526020017f485950455244524956452d4c50000000000000000000000000000000000000008152509350610276565b600183600381111561038457610384610575565b0361039a57806040516020016101e491906106a3565b60028360038111156103ae576103ae610575565b036103c457806040516020016101e491906106e8565b60038360038111156103d8576103d8610575565b0361027657505060408051808201909152600d81527f485950455244524956452d57530000000000000000000000000000000000000060208201529392505050565b60408051604e80825260808201909252606091906000908260208201818036833701905050905060005b84156104d957610455600a8661074f565b610460906030610792565b60f81b82600161047084876107a5565b61047a91906107a5565b8151811061048a5761048a6107b8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806104c3816107e7565b91506104d29050600a8661081f565b9450610444565b918290030190815292915050565b6000602082840312156104f957600080fd5b5035919050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6020815260008251806020840152610543816040850160208701610500565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60408101600484106105df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9281526020015290565b600080604083850312156105fc57600080fd5b82356004811061060b57600080fd5b946020939093013593505050565b7f48797065726472697665204c6f6e673a20000000000000000000000000000000815260008251610651816011850160208701610500565b9190910160110192915050565b7f487970657264726976652053686f72743a200000000000000000000000000000815260008251610696816012850160208701610500565b9190910160120192915050565b7f485950455244524956452d4c4f4e473a000000000000000000000000000000008152600082516106db816010850160208701610500565b9190910160100192915050565b7f485950455244524956452d53484f52543a000000000000000000000000000000815260008251610651816011850160208701610500565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261075e5761075e610720565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561011b5761011b610763565b8181038181111561011b5761011b610763565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361081857610818610763565b5060010190565b60008261082e5761082e610720565b50049056fea26469706673582212207a267301b607c40c580589dd55e30ff0a740087c577244d20aea39884bec668264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80633c8c28ad146100515780636322c7511461007a5780638a227c39146100c2578063957462ac146100e3575b600080fd5b61006461005f3660046104e7565b6100f6565b6040516100719190610524565b60405180910390f35b6100b46100883660046104e7565b60f881901c917effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911690565b6040516100719291906105a4565b6100d56100d03660046105e9565b61010a565b604051908152602001610071565b6100646100f13660046104e7565b610121565b606060006101038361012e565b9392505050565b600080610117848461027e565b9150505b92915050565b60606000610103836102e4565b606060f882901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660006101628261041a565b9050600083600381111561017857610178610575565b036101ba576040518060400160405280600d81526020017f48797065726472697665204c50000000000000000000000000000000000000008152509350610276565b60018360038111156101ce576101ce610575565b036101fa57806040516020016101e49190610619565b6040516020818303038152906040529350610276565b600283600381111561020e5761020e610575565b0361022457806040516020016101e4919061065e565b600383600381111561023857610238610575565b03610276576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b60007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156102d9576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060f89190911b1790565b606060f882901c7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660006103188261041a565b9050600083600381111561032e5761032e610575565b03610370576040518060400160405280600d81526020017f485950455244524956452d4c50000000000000000000000000000000000000008152509350610276565b600183600381111561038457610384610575565b0361039a57806040516020016101e491906106a3565b60028360038111156103ae576103ae610575565b036103c457806040516020016101e491906106e8565b60038360038111156103d8576103d8610575565b0361027657505060408051808201909152600d81527f485950455244524956452d57530000000000000000000000000000000000000060208201529392505050565b60408051604e80825260808201909252606091906000908260208201818036833701905050905060005b84156104d957610455600a8661074f565b610460906030610792565b60f81b82600161047084876107a5565b61047a91906107a5565b8151811061048a5761048a6107b8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350806104c3816107e7565b91506104d29050600a8661081f565b9450610444565b918290030190815292915050565b6000602082840312156104f957600080fd5b5035919050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6020815260008251806020840152610543816040850160208701610500565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60408101600484106105df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9281526020015290565b600080604083850312156105fc57600080fd5b82356004811061060b57600080fd5b946020939093013593505050565b7f48797065726472697665204c6f6e673a20000000000000000000000000000000815260008251610651816011850160208701610500565b9190910160110192915050565b7f487970657264726976652053686f72743a200000000000000000000000000000815260008251610696816012850160208701610500565b9190910160120192915050565b7f485950455244524956452d4c4f4e473a000000000000000000000000000000008152600082516106db816010850160208701610500565b9190910160100192915050565b7f485950455244524956452d53484f52543a000000000000000000000000000000815260008251610651816011850160208701610500565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261075e5761075e610720565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561011b5761011b610763565b8181038181111561011b5761011b610763565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361081857610818610763565b5060010190565b60008261082e5761082e610720565b50049056fea26469706673582212207a267301b607c40c580589dd55e30ff0a740087c577244d20aea39884bec668264736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "MockAssetId",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MockAssetId$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/test/MockAssetId.sol:MockAssetId",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MockAssetId$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "MockAssetId",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MockAssetId$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/test/MockAssetId.sol:MockAssetId",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MockAssetId$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "MockAssetId",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MockAssetId$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/test/MockAssetId.sol:MockAssetId",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MockAssetId$Type["abi"]>>;
}
