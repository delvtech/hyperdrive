// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface MockFixedPointMath$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "MockFixedPointMath",
  "sourceName": "contracts/test/MockFixedPointMath.sol",
  "abi": [
    {
      "inputs": [],
      "name": "ExpInvalidExponent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LnInvalidInput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsafeCastToInt256",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        }
      ],
      "name": "abs",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "divDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "divUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "x",
          "type": "int256"
        }
      ],
      "name": "exp",
      "outputs": [
        {
          "internalType": "int256",
          "name": "r",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "x",
          "type": "int256"
        }
      ],
      "name": "ln",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "d",
          "type": "uint256"
        }
      ],
      "name": "mulDivDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "d",
          "type": "uint256"
        }
      ],
      "name": "mulDivUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "z",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "mulDown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "mulUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "pow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_average",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_delta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deltaWeight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isAdding",
          "type": "bool"
        }
      ],
      "name": "updateWeightedAverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "average",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610ba2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638e6f235311610081578063cbe8623f1161005b578063cbe8623f14610178578063e46751e31461018b578063f3e4f87c1461019e57600080fd5b80638e6f23531461013f5780639ba5f52e14610152578063b67bee041461016557600080fd5b80631b5ac4b5116100b25780631b5ac4b5146101065780632e4c697f1461011957806381e5f7c91461012c57600080fd5b80630c9b9881146100ce57806312bd6ac0146100f3575b600080fd5b6100e16100dc366004610997565b6101b1565b60405190815260200160405180910390f35b6100e16101013660046109b9565b6101c8565b6100e16101143660046109e5565b6101df565b6100e1610127366004610997565b6101f2565b6100e161013a3660046109fe565b6101ff565b6100e161014d3660046109e5565b61021a565b6100e1610160366004610997565b610226565b6100e16101733660046109b9565b610233565b6100e1610186366004610997565b610241565b6100e16101993660046109e5565b61024e565b6100e16101ac366004610997565b61025a565b6000806101be8484610267565b9150505b92915050565b6000806101d685858561027c565b95945050505050565b6000806101eb836102c0565b9392505050565b6000806101be84846102d8565b60008061020f878787878761034d565b979650505050505050565b6000806101eb836103f1565b6000806101be8484610692565b6000806101d68585856106a3565b6000806101be84846106df565b6000806101eb836106f4565b6000806101be848461090d565b60006101eb8383670de0b6b3a76400006106a3565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026102b157600080fd5b50910281810615159190040190565b60008082126102cf57816101c2565b6101c282610a7f565b6000816000036102f15750670de0b6b3a76400006101c2565b82600003610301575060006101c2565b600061030c83610922565b9050600061032161031c86610922565b6103f1565b9050818102610338670de0b6b3a764000082610ab7565b9050610343816106f4565b9695505050505050565b60008260000361035e5750846101d6565b81156103b7576103956103718487610b46565b61037b8587610267565b610385888a610267565b61038f9190610b46565b90610692565b905060006103a38588610982565b9050808210156103b1578091505b506101d6565b8285036103c6575060006101d6565b6103436103d38487610b59565b6103dd858761090d565b6103e7888a610267565b61038f9190610b59565b600080821361042c576040517fe61b497500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08201906104d69084901c610922565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60006101eb83670de0b6b3a7640000845b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026106d857600080fd5b5091020490565b60006101eb83670de0b6b3a76400008461027c565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c1821361072557506000919050565b680755bf798b4a1bf1e58212610767576040517f73a2d6b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b3988102909303927fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550484018402606090811d6d0277594991cfc85f6e2461837cd9018502811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e01810290921d6e0587f503bb6ea29d25fcb74019645001860279d835ebba824c98fb31b83b2ca45c00000000000000000000000001818105955092935090919061034374029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c610922565b60006101eb8383670de0b6b3a764000061027c565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82111561097e576040517f72dd4e0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b600081831161099157826101eb565b50919050565b600080604083850312156109aa57600080fd5b50508035926020909101359150565b6000806000606084860312156109ce57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156109f757600080fd5b5035919050565b600080600080600060a08688031215610a1657600080fd5b8535945060208601359350604086013592506060860135915060808601358015158114610a4257600080fd5b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007f80000000000000000000000000000000000000000000000000000000000000008203610ab057610ab0610a50565b5060000390565b600082610aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615610b4157610b41610a50565b500590565b808201808211156101c2576101c2610a50565b818103818111156101c2576101c2610a5056fea264697066735822122013b2e1d3dd43c3fe6f378bfc7e600d564c397634edfbfe1edc11cbcb60c245b764736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c80638e6f235311610081578063cbe8623f1161005b578063cbe8623f14610178578063e46751e31461018b578063f3e4f87c1461019e57600080fd5b80638e6f23531461013f5780639ba5f52e14610152578063b67bee041461016557600080fd5b80631b5ac4b5116100b25780631b5ac4b5146101065780632e4c697f1461011957806381e5f7c91461012c57600080fd5b80630c9b9881146100ce57806312bd6ac0146100f3575b600080fd5b6100e16100dc366004610997565b6101b1565b60405190815260200160405180910390f35b6100e16101013660046109b9565b6101c8565b6100e16101143660046109e5565b6101df565b6100e1610127366004610997565b6101f2565b6100e161013a3660046109fe565b6101ff565b6100e161014d3660046109e5565b61021a565b6100e1610160366004610997565b610226565b6100e16101733660046109b9565b610233565b6100e1610186366004610997565b610241565b6100e16101993660046109e5565b61024e565b6100e16101ac366004610997565b61025a565b6000806101be8484610267565b9150505b92915050565b6000806101d685858561027c565b95945050505050565b6000806101eb836102c0565b9392505050565b6000806101be84846102d8565b60008061020f878787878761034d565b979650505050505050565b6000806101eb836103f1565b6000806101be8484610692565b6000806101d68585856106a3565b6000806101be84846106df565b6000806101eb836106f4565b6000806101be848461090d565b60006101eb8383670de0b6b3a76400006106a3565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026102b157600080fd5b50910281810615159190040190565b60008082126102cf57816101c2565b6101c282610a7f565b6000816000036102f15750670de0b6b3a76400006101c2565b82600003610301575060006101c2565b600061030c83610922565b9050600061032161031c86610922565b6103f1565b9050818102610338670de0b6b3a764000082610ab7565b9050610343816106f4565b9695505050505050565b60008260000361035e5750846101d6565b81156103b7576103956103718487610b46565b61037b8587610267565b610385888a610267565b61038f9190610b46565b90610692565b905060006103a38588610982565b9050808210156103b1578091505b506101d6565b8285036103c6575060006101d6565b6103436103d38487610b59565b6103dd858761090d565b6103e7888a610267565b61038f9190610b59565b600080821361042c576040517fe61b497500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08201906104d69084901c610922565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60006101eb83670de0b6b3a7640000845b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026106d857600080fd5b5091020490565b60006101eb83670de0b6b3a76400008461027c565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c1821361072557506000919050565b680755bf798b4a1bf1e58212610767576040517f73a2d6b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b3988102909303927fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550484018402606090811d6d0277594991cfc85f6e2461837cd9018502811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e01810290921d6e0587f503bb6ea29d25fcb74019645001860279d835ebba824c98fb31b83b2ca45c00000000000000000000000001818105955092935090919061034374029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c610922565b60006101eb8383670de0b6b3a764000061027c565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82111561097e576040517f72dd4e0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5090565b600081831161099157826101eb565b50919050565b600080604083850312156109aa57600080fd5b50508035926020909101359150565b6000806000606084860312156109ce57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156109f757600080fd5b5035919050565b600080600080600060a08688031215610a1657600080fd5b8535945060208601359350604086013592506060860135915060808601358015158114610a4257600080fd5b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007f80000000000000000000000000000000000000000000000000000000000000008203610ab057610ab0610a50565b5060000390565b600082610aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615610b4157610b41610a50565b500590565b808201808211156101c2576101c2610a50565b818103818111156101c2576101c2610a5056fea264697066735822122013b2e1d3dd43c3fe6f378bfc7e600d564c397634edfbfe1edc11cbcb60c245b764736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "MockFixedPointMath",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MockFixedPointMath$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/test/MockFixedPointMath.sol:MockFixedPointMath",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<MockFixedPointMath$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "MockFixedPointMath",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MockFixedPointMath$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/test/MockFixedPointMath.sol:MockFixedPointMath",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<MockFixedPointMath$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "MockFixedPointMath",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MockFixedPointMath$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/test/MockFixedPointMath.sol:MockFixedPointMath",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<MockFixedPointMath$Type["abi"]>>;
}
