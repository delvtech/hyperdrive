// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IHyperdriveCoreDeployer$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "IHyperdriveCoreDeployer",
  "sourceName": "contracts/src/interfaces/IHyperdriveCoreDeployer.sol",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "vaultSharesToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "linkerFactory",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "linkerCodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "initialVaultSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumTransactionAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "positionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "checkpointDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeCollector",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sweepCollector",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "curve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "flat",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governanceLP",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "governanceZombie",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IHyperdrive.Fees",
              "name": "fees",
              "type": "tuple"
            }
          ],
          "internalType": "struct IHyperdrive.PoolConfig",
          "name": "_config",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_target0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target3",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target4",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IHyperdriveCoreDeployer",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IHyperdriveCoreDeployer$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/src/interfaces/IHyperdriveCoreDeployer.sol:IHyperdriveCoreDeployer",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IHyperdriveCoreDeployer$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IHyperdriveCoreDeployer",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IHyperdriveCoreDeployer$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/src/interfaces/IHyperdriveCoreDeployer.sol:IHyperdriveCoreDeployer",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IHyperdriveCoreDeployer$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IHyperdriveCoreDeployer",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IHyperdriveCoreDeployer$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/src/interfaces/IHyperdriveCoreDeployer.sol:IHyperdriveCoreDeployer",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IHyperdriveCoreDeployer$Type["abi"]>>;
}
