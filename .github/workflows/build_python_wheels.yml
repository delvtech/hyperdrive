name: Python Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_wheels: # credit to https://github.com/samuelcolvin/rtoml/blob/main/.github/workflows/ci.yml
    name: build ${{ matrix.python-version }} on ${{ matrix.os }} (${{ matrix.target }})
    
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu, macos, windows]
        os: [ubuntu]
        #target: [x86_64, aarch64]
        target: [x86_64]
        #python-version: ['cp310', 'pp39', 'pp310', 'pp311']
        python-version: ['pp310']
        #manylinux: [auto]
        include:
        #  - os: windows
        #    ls: dir
        #  - os: windows
        #    ls: dir
        #    target: i686
        #    python-architecture: x86
        #  - os: macos
        #    target: aarch64
        #  - os: ubuntu
        #    target: i686
        #  # GCC 4.8.5 in manylinux2014 container doesn't support c11 atomic
        #  # we use manylinux_2_24 container for aarch64 and armv7 targets instead,
        #  - os: ubuntu
        #    target: aarch64
        #    container: messense/manylinux_2_24-cross:aarch64
        #  - os: ubuntu
        #    target: armv7
        #    container: messense/manylinux_2_24-cross:armv7
        #  - os: ubuntu
        #    target: ppc64le
        #    container: messense/manylinux_2_24-cross:ppc64le
        #  - os: ubuntu
        #    target: s390x
        #    container: messense/manylinux_2_24-cross:s390x
        #  # musllinux
          - os: ubuntu
            target: x86_64
            manylinux: musllinux_1_1
        #  - os: ubuntu
        #    target: aarch64
        #    manylinux: musllinux_1_1
        #exclude:
        #  # this fails
        #  - os: windows
        #    target: aarch64

    steps:
      - uses: actions/checkout@v3

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: ${{ matrix.python-architecture || 'x64' }}

      #- name: set up rust
      #  uses: dtolnay/rust-toolchain@stable
      #  with:
      #    toolchain: stable

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: rustup target add aarch64-apple-darwin
        if: matrix.os == 'macos'

      - run: rustup toolchain install stable-i686-pc-windows-msvc
        if: matrix.os == 'windows'

      - run: rustup target add i686-pc-windows-msvc
        if: matrix.os == 'windows'

      # NOTE: This is needed to ensure that hyperdrive-wrappers builds correctly.
      - name: install foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: install python dependencies
        run: pip install -U setuptools wheel twine cibuildwheel platformdirs build

      - name: build sdist
        if: ${{ matrix.os == 'ubuntu' && matrix.target == 'x86_64' && matrix.manylinux == 'auto' }}
        run: |
          python -m build --sdist -o wheelhouse crates/hyperdrive-math-py/

      - name: build ${{ matrix.platform || matrix.os }} binaries
        run: cibuildwheel --output-dir wheelhouse crates/hyperdrive-math-py
        env:
          CIBW_BUILD: '${{ matrix.python-version }}-*'
          # rust doesn't seem to be available for musl linux on i686
          CIBW_SKIP: '*-musllinux_i686'
          CIBW_ARCHS: ${{ matrix.target }}
          CIBW_PLATFORM: ${{ matrix.platform }}'
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_BEFORE_BUILD: rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
            rustup show
          CIBW_TEST_COMMAND: 'pytest python/test'
          CIBW_TEST_REQUIRES: pytest
          CIBW_BUILD_VERBOSITY: 1

      - run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

      - run: twine check wheelhouse/*

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse